(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{261:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return d})),a.d(t,"rightToc",(function(){return m})),a.d(t,"Video",(function(){return p})),a.d(t,"Img",(function(){return O})),a.d(t,"default",(function(){return j}));var r=a(3),n=a(8),c=(a(0),a(322)),b=a(356),i=a(355),l=(a(586),a(324)),o=a(325),s={id:"visual-formatter-basic-concepts",title:"Visual Formatter Page (Basic Concepts)",sidebar_label:"Basic Concepts"},d={unversionedId:"scan2deploy/visual-formatter-basic-concepts",id:"scan2deploy/visual-formatter-basic-concepts",isDocsHomePage:!1,title:"Visual Formatter Page (Basic Concepts)",description:"<video controls={true} allowFullScreen={true}",source:"@site/docs/scan2deploy/visual-formatter-basic-concepts.md",slug:"/scan2deploy/visual-formatter-basic-concepts",permalink:"/scan2deploy/visual-formatter-basic-concepts",version:"current",sidebar_label:"Basic Concepts",sidebar:"Scan2DeployStudio",previous:{title:"File Upload Page",permalink:"/scan2deploy/file-upload-page"},next:{title:"Visual Formatter Page (UI Controls)",permalink:"/scan2deploy/visual-formatter-ui-controls"}},m=[{value:"Project Structure",id:"project-structure",children:[{value:"Visual and Standard Formatter",id:"visual-and-standard-formatter",children:[]},{value:"Visual Formatter Items",id:"visual-formatter-items",children:[]}]},{value:"Data Types",id:"data-types",children:[]},{value:"Inputs, Outputs and Variables",id:"inputs-outputs-and-variables",children:[{value:"Predefined",id:"predefined",children:[]},{value:"Custom (Properties)",id:"custom-properties",children:[]}]},{value:"Operations",id:"operations",children:[{value:"Arithmetic Operations",id:"arithmetic-operations",children:[]},{value:"Boolean Operations",id:"boolean-operations",children:[]},{value:"Inequality Operations",id:"inequality-operations",children:[]},{value:"String Operations",id:"string-operations",children:[]},{value:"Array Operations",id:"array-operations",children:[]},{value:"Conditions",id:"conditions",children:[]},{value:"Actions",id:"actions",children:[]},{value:"Utility",id:"utility",children:[]}]},{value:"Feature Level",id:"feature-level",children:[]},{value:"Special Characters",id:"special-characters",children:[]}],p=function(e){var t=e.children,a=e.width;return Object(c.b)("video",{controls:!0,allowFullScreen:!0,style:{width:a}},t)},O=function(e){var t=e.src;return Object(c.b)("img",{src:t,style:{verticalAlign:"top",minWidth:"200px",maxWidth:"200px"}})},u={rightToc:m,Video:p,Img:O};function j(e){var t=e.components,s=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},u,s,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"The Visual Formatter page allows users to create formatting rules to manipulate the barcode data received from the scanner. The user can decide which inputs and outputs to consider and create a connection that goes from the specified inputs towards the outputs, passing through some nodes, each representing a specific operation. This data flow is used to manipulate the input data in order to obtain the desired output."),Object(c.b)("p",null,"See the following sections on the next page for a more in-depth explanation of the different components available in the Visual Formatter:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/scan2deploy/visual-formatter-basic-concepts"}),"Basic Concepts (this page)")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/scan2deploy/visual-formatter-ui-controls"}),"UI Controls")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/scan2deploy/visual-formatter-examples"}),"Examples"))),Object(c.b)("p",null,Object(c.b)("img",{alt:"Visual Formatter page",src:a(604).default})),Object(c.b)("p",null,"This section (Basic Concepts) explains the Visual Formatter project structure, as well as the types and components available in the tool."),Object(c.b)("h2",{id:"project-structure"},"Project Structure"),Object(c.b)("h3",{id:"visual-and-standard-formatter"},"Visual and Standard Formatter"),Object(c.b)("p",null,"The Visual Formatter is a tool used to manipulate a barcode decoded by the scanner. It does so by presenting a user interface in which you can connect different blocks and execute operations on the input barcode, with the purpose of modifying it in the desired way."),Object(c.b)("p",null,"Prior to the introduction of the Visual Formatter, the Datalogic Android devices provided only a Standard Formatter, a component used to manipulate the barcode with some customizations that the user can change from the Settings of the device. Below are a list of features implemented by the Standard Formatter:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Prefix and suffix customization."),Object(c.b)("li",{parentName:"ul"},"Group Separator replacement."),Object(c.b)("li",{parentName:"ul"},"Removal of non-printable characters from the barcode."),Object(c.b)("li",{parentName:"ul"},"Parsing and output of a different barcode type, for example recognizing and outputting a Code 32 from a Code 39 barcode."),Object(c.b)("li",{parentName:"ul"},"Check digit management."),Object(c.b)("li",{parentName:"ul"},"Charset management.")),Object(c.b)("p",null,"While executing the Visual Formatter, the Standard Formatter can be skipped or executed before/after the Visual Formatter, depending on the requirements of the project. The methods used to control the Standard Formatter execution are described in the sections below."),Object(c.b)("h3",{id:"visual-formatter-items"},"Visual Formatter Items"),Object(c.b)("p",null,"After selecting the Visual Formatter option from the actions list, a Visual Formatter project is created and a starting chart is provided. This chart represents a single item in the Visual Formatter project. There are 2 possible types of item available for use inside a Visual Formatter project:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Formatter"),": Item used to manipulate the barcode data received from the scanner, as well as other scan events when supported, using the ",Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"#operations"}),"Operations")," available."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Dispatcher"),": Item used to allow for a cleaner management of the Formatter items. With the dispatcher it is possible to specify a list of Formatter items to execute, including the Standard Formatter, with a given order. This enables the execution to be separated in different items, simplifying the overall flow and the readability of the charts. It can also act as a validator for the data received. The dispatcher is available starting from ",Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"#feature-level"}),"Feature Level")," 1.")),Object(c.b)("p",null,"The project represents a list of items. Every project starts with a single Formatter item, but can be expanded by adding more formatters and dispatchers as desired by the user. The item that will execute can be changed at runtime using the Datalogic SDK APIs."),Object(c.b)("h2",{id:"data-types"},"Data Types"),Object(c.b)("p",null,"Supported data types (also available as arrays):"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Color"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Represents"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"String"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)("img",Object(r.a)({parentName:"td"},{src:"https://via.placeholder.com/15/7B68EE/000000?text=+",alt:"#7B68EE"}))),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"A text.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Number"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)("img",Object(r.a)({parentName:"td"},{src:"https://via.placeholder.com/15/C70D3A/000000?text=+",alt:"#C70D3A"}))),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"A numeric value that can be integer or floating point.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Boolean"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)("img",Object(r.a)({parentName:"td"},{src:"https://via.placeholder.com/15/006064/000000?text=+",alt:"#006064"}))),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"True or false value, generally used to check on some condition.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Enum"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)("img",Object(r.a)({parentName:"td"},{src:"https://via.placeholder.com/15/36802D/000000?text=+",alt:"#36802D"}))),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Depending on the sub-type, it is used to set a value from a predefined list of constants. Mainly used to represent the ",Object(c.b)("inlineCode",{parentName:"td"},"BarcodeType")," or the ",Object(c.b)("inlineCode",{parentName:"td"},"Formatter")," enumerations.")))),Object(c.b)("p",null,"For input connectors, you can specify a data type value directly inside the nodes representing various ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"#operations"}),"Operations"),". You can also drag and drop the Constant block of the Parameters tab inside the flowchart area, as shown in the video below."),Object(c.b)(p,{width:"100%",mdxType:"Video"},Object(c.b)("source",{src:"/img/visual-formatter/video-drag-drop-constant.mp4",type:"video/mp4"})),Object(c.b)("h2",{id:"inputs-outputs-and-variables"},"Inputs, Outputs and Variables"),Object(c.b)("p",null,"Inside the chart you can specify some input and output nodes. The inputs are set before executing the Visual Formatter item (usually after a barcode is read from the scanner or after a specific scanner event) and will be manipulated depending on the connected operations. The outputs are set at the end of the chart's execution, if they have been connected to other nodes.\nSome inputs and outputs are predefined, but the user can also add custom nodes, called ",Object(c.b)("em",{parentName:"p"},"Properties")," in the Datalogic SDK. These nodes can be inputs, outputs or variables representing both an input and an output node (for example, a counter that is incremented after each successful read).\nYou can add inputs, outputs or variables by dragging and dropping the Input, Output or Variable block of the Parameters tab inside the flowchart area, as shown in the video below."),Object(c.b)(p,{width:"100%",mdxType:"Video"},Object(c.b)("source",{src:"/img/visual-formatter/video-drag-drop-input-output.mp4",type:"video/mp4"})),Object(c.b)("h3",{id:"predefined"},"Predefined"),Object(c.b)("h4",{id:"inputs"},"Inputs"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Available in"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Represents"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"barcodeStringIn"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"String"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Formatter & Dispatcher"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"The barcode text read from the scanner. If the item chart is a formatter executed through a dispatcher and it is not the first in the list of formatters to be executed, the barcodeStringIn input is actually set to be equals to the barcodeStringOut output of the previous formatter item.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"barcodeTypeIn"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Enum BarcodeType"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Formatter & Dispatcher"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"The barcode symbology. If the current chart represents a formatter executed through a dispatcher and it is not the first in the list of formatters to be executed, the barcodeTypeIn input is actually set to be equals to the barcodeTypeOut output of the previous formatter item.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"eventTypeIn"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Enum EventType"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Formatter & Dispatcher"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"The type of event that caused the current item to be executed. By default, the project only manages the BARCODE EventType (returned when a barcode is read), but it can be set to manage also the events for START, STOP and TIMEOUT of the scanner decoding session. More details on these events can be found in the Datalogic SDK documentation. This input and its management are available starting from ",Object(c.b)("a",Object(r.a)({parentName:"td"},{href:"#feature-level"}),"Feature Level")," 3.")))),Object(c.b)("h4",{id:"outputs"},"Outputs"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Available in"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Represents"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"barcodeStringOut"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"String"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Formatter"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"The barcode text as it has been modified by the tool. If it is not included in the chart, it will assume the value of barcodeStringIn.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"barcodeTypeOut"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Enum BarcodeType"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Formatter"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"The barcode symbology as it has been modified by the tool. If it is not included in the chart, it will assume the value of barcodeTypeIn.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"executeStandardFormatterOut*"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Boolean"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Formatter"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"True to also run the Standard Formatter after the Visual Formatter has executed, false to skip it. If not included in the chart, it will assume the ",Object(c.b)("em",{parentName:"td"},"true")," value. This parameter is ignored when the formatter is executed from a dispatcher, to avoid executing the standard formatter multiple times. In this case, the standard formatter can be specified directly in the list of formatters executed from the dispatcher.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"propagateResultOut"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Boolean"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Formatter"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"True to propagate the result in the system and eventually receive the resulting barcode, false to not propagate, thus ignoring the barcode data completely. If not included in the chart, it will assume the ",Object(c.b)("em",{parentName:"td"},"true")," value.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"formattersOut"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Enum Formatter[]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Dispatcher"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Array of formatters that will be executed sequentially in the order specified. The Formatter enumeration is updated depending on the available formatters, with the STANDARD formatter always available. If it is not included in the chart, it will be considered as an empty array.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"actionsOut"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"string[]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Formatter"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Array of action ids, used to execute a list of actions in the given order. The action ids are created using the operations available under the ",Object(c.b)("a",Object(r.a)({parentName:"td"},{href:"#actions"}),"Actions")," category. Each id identifies the type of action that created it, with the parameters provided as input of the specific Action block used. Examples of actions are: sending a barcode result, sending a key event or sending an intent. The actions are available starting from ",Object(c.b)("a",Object(r.a)({parentName:"td"},{href:"#feature-level"}),"Feature Level")," 3.")))),Object(c.b)("p",null,"*"," Value not always considered during execution."),Object(c.b)("h3",{id:"custom-properties"},"Custom (Properties)"),Object(c.b)("p",null,"In order to create custom nodes, also called properties, you need to specify the following info:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Id"),': The identifier of the property, unique inside the flowchart. A suffix will be added during the creation of the node, depending on the direction. An input node will have the suffix "In", an output node the suffix "Out" and the variable node will create 2 separate nodes, one for the input and the other for the output.'),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Name"),": The name of the property."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Description"),": A description related to the purpose of the property (",Object(c.b)("em",{parentName:"li"},"optional"),")."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Type"),": Data type of the property."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Default Value"),": The default value that the property will assume in case it is not set during the execution of the chart."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Hide from UI"),": If enabled, the property will be hidden from the device Settings, preventing the user to modify its value if not through the Datalogic SDK APIs.")),Object(c.b)("p",null,"All the custom nodes will be available in the Datalogic SDK APIs through the list of properties available for every item the project contains.\nThe custom nodes are available starting from ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"#feature-level"}),"Feature Level")," 2."),Object(c.b)("h2",{id:"operations"},"Operations"),Object(c.b)("p",null,"Each operation is represented by a node with inputs and outputs. The inputs and outputs are shown as circles (or a rhombus for arrays) with an internal color that represents the type of input/output to use and have a unique name. The inputs can be connected to other nodes outputs, as well as to input blocks or constants, while the outputs work in the opposite way. The inputs can also be initialized without an explicit connection by using the UI component to the right of the name. Below the graphical representation of the SubString node is shown."),Object(c.b)("p",null,Object(c.b)("img",{alt:"Operation Block",src:a(605).default})),Object(c.b)("p",null,"Operation nodes are divided into subsections depending on the type of operation executed. Every subsection has a different color to help during the editing of the formatter flow."),Object(c.b)("h3",{id:"arithmetic-operations"},"Arithmetic Operations"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Appearance"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"+"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/arithmetic/add.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Addition between numbers (2 minimum).")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/arithmetic/subtract.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Subtraction between 2 numbers.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"*"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/arithmetic/multiply.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Multiplication between numbers (2 minimum).")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"/"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/arithmetic/divide.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Division between 2 numbers.")))),Object(c.b)("h3",{id:"boolean-operations"},"Boolean Operations"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Appearance"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Not"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/boolean/not.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Inverts the value of the input boolean.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"And"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/boolean/and.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Executes a logical AND between multiple booleans (2 minimum).")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Or"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/boolean/or.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Executes a logical OR between multiple booleans (2 minimum).")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Nand"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/boolean/nand.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Executes a logical NAND between multiple booleans (2 minimum).")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Nor"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/boolean/nor.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Executes a logical NOR between multiple booleans (2 minimum).")))),Object(c.b)("h3",{id:"inequality-operations"},"Inequality Operations"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Appearance"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),">","="),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/inequality/greater-equals.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Checks if n1 ",">","= n2, with n1 and n2 both numbers, returning a boolean with the result of the check.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),">"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/inequality/greater.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Checks if n1 ",">"," n2, with n1 and n2 both numbers, returning a boolean with the result of the check.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"=="),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/inequality/equals.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Equality check, works also for types different than numbers.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"<"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/inequality/less.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Checks if n1 ","<"," n2, with n1 and n2 both numbers, returning a boolean with the result of the check.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"<","="),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/inequality/less-equals.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Checks if n1 ","<","= n2, with n1 and n2 both numbers, returning a boolean with the result of the check.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"!="),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/inequality/not-equals.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Inequality check, works also for types different than numbers.")))),Object(c.b)("h3",{id:"string-operations"},"String Operations"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Appearance"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Remove First"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/remove-first.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Removes the first num characters from inStr.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Remove Last"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/remove-last.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Removes the last num character from inStr.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Remove At"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/remove-at.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Removes from inStr the characters in the positions provided as indices (the first character is at index 0).")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Remove Sub String"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/remove-sub-string.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),'Removes a substring contained in the input string. The number idBegin represents the index of the first character to remove, this number starts from 0 to remove the first character of the string (1 for the second and so on). The characters are removed until the index idEnd is reached, with the character at idEnd being included in the output string. Example: taking into consideration the string "Welcome", with idBegin = 2 and idEnd = 4 the output string will be "Weome".')),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Sub String"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/sub-string.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),'Creates a substring starting from the input string. The number idBegin represents the index of the first character to take to form the substring, this number starts from 0 to include the first character of the string (1 for the second and so on). The number idEnd is the index of the first character of the string to exclude from the substring, meaning this character will not be included in the output string. Example: taking into consideration the string "Welcome", with idBegin = 2 and idEnd = 4 the output string will be "lc".')),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Length"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/length.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the length of str.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Contains"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/contains.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Checks if str contains the string match and returns true in that case.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Concat"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/concat.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Concatenates multitple strings (minimum 2).")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Repeat"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/repeat.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Repeats the input string str for num times.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Index Of"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/index-of.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the index of the first occurrence of match inside str. This index represents the beginning of the first match string found in str. It returns -1 if no occurrence is found.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Last Index Of"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/last-index-of.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the index of the last occurrence of match inside str. This index represents the beginning of the last match string found in str. It returns -1 if no occurrence is found.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Search"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/search.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),'Works as Index Of but the match is a regular expression. The complete regular expression is formed as "/matchPatternStr/matchFlagStr". Example: to search for the index of the first character from A to Z, the expression will be /',"[","A-Z","]",'/ (matchPatternStr = "',"[","A-Z","]",'", matchFlagStr = "").')),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Replace"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/replace.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Replaces the first occurrence of searchValueStr (found inside inStr) with newValueStr.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Replace With RegEx"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/replace-with-regex.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),'Replaces values (found inside inStr) corresponding to the regular expression formed by searchValuePatternStr and searchValueFlagStr with newValueStr. The complete regular expression is formed as "/searchValuePatternStr/searchValueFlagStr". Example: to replace all characters from A to Z with X, the expression will be /',"[","A-Z","]",'/g (searchValuePatternStr = "',"[","A-Z","]",'", searchValueFlagStr = "g", newValueStr = "X").')),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Replace All"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/replace-all.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Replaces every occurrence of searchValueStr (found inside inStr) with newValueStr.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"To Upper Case"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/to-upper-case.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Converts the input string to uppercase letters.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"To Lower Case"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/to-lower-case.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Converts the input string to lowercase letters.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Trim"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/trim.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Removes whitespaces at the start and at the end of the input string.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Trim Start"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/trim-start.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Removes whitespaces at the start of the input string.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Trim End"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/trim-end.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Removes whitespaces at the end of the input string.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Trim Char"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/trim-char.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Removes all the occurrences of the specified character at the start and at the end of the input string.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Trim Char Start"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/trim-char-start.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Removes all the occurrences of the specified character at the start of the input string.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Trim Char End"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/trim-char-end.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Removes all the occurrences of the specified character at the end of the input string.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Char At"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/char-at.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Extract a single character from the string, specified by the input index (starting from 0 for the first character).")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Split"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/split.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Splits the string using the provided separator. The output is an array of strings.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Substitute Chars"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/substitute-chars.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),'Substitutes every character of fromChars found inside inStr in the corresponding character of toChars (found in the same position). Example: inStr = "abc", fromChars = "ab", "toChars" = "de", outStr = "dec".')),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Starts With"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/starts-with.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns true if str starts with match, false otherwise.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Ends With"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/ends-with.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns true if str ends with match, false otherwise.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Count"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/count.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the number of occurrences of the match string inside str.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Reverse"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/reverse.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Reverses the characters in the input string.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Create Min Length String"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/create-min-length-string.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"If the length of inStr is lower than minLength, append fillChar to inStr for the number of times required to reach the desired length. The character is appended to the right if fillRight is set to true, otherwise it will be appended to the left. In case the length of inStr is >= minLength, the input string will be returned unmodified.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Is Alpha"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/is-alpha.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns true if str only contains alphabetic characters, false otherwise.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Is Numeric"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/is-numeric.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns true if str only contains numbers, false otherwise.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Is AlphaNumeric"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/is-alpha-numeric.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns true if str only contains alphanumeric characters, false otherwise.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"To Number"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/to-number.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Converts the input string into a number if possible, otherwise it will return an undefined value.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"To Boolean"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/to-boolean.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Converts the input string into a boolean if possible, otherwise it will return an undefined value.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"To String"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/string/to-string.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Converts the input value into a string.")))),Object(c.b)("h3",{id:"array-operations"},"Array Operations"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Appearance"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Length"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/array/length.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the length of the input array.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Get"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/array/get.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the element at the given index inside the input array. If no element is found it will return an undefined value.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Add"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/array/add.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Adds the specified item inside the input array, returning the array with the new item added inside.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Add All"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/array/add-all.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Adds an array inside the input array, returning the array with the new items added inside.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Remove At"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/array/remove-at.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Removes the element at the specified index from the input array, returning the array with the removed element as a result.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Create"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/array/create.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Creates an array starting from a variable number of elements.")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"NOTE"),": The array type is identified as a rhombus in the input or output connectors of a block."),Object(c.b)("h3",{id:"conditions"},"Conditions"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Appearance"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"If"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/conditions/if.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Chooses a value based on the input condition (boolean). If condition is true, the trueValue set as input is passed as output, otherwise the falseValue will be taken. The inputs called trueValue and falseValue, as well as the output called out, can have a different type that will be selected during the node creation.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Switch"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/conditions/switch.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Works as a switch condition. The selector of the switch can have a specified data type. The case corresponding to the value of the selector will be moved to the output. If the selector value is not found in the case list, the default case will be considered. The case values can also have a specified data type.")))),Object(c.b)("h3",{id:"actions"},"Actions"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Appearance"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Send Barcode"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/actions/send-barcode.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Creates an action used to send a barcode result, taking as input the barcode string and the barcode type.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Send Key Event"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/actions/send-key-event.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Creates an action used to send a key event, taking as input the associated key code and a boolean to indicate if the key is pressed or released. The key codes available are a subset of the ones managed in Android and are sent similarly to what is done by a physical keyboard on the device.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Send Key Sequence"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/actions/send-key-sequence.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Creates a list of actions used to send multiple key events, allowing for a delay after each key event. The rest of the parameters is the same as the Send Key Event action, with the difference that the editing is done through a dialog instead of connecting the key codes as input.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Send Intent"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/actions/send-intent.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Creates an action used to send an intent, specifying different inputs (not all mandatory): type of intent (start activity, start service or send broadcast), action, categories, package and class name of the receiver and eventually the extras (that can be created using the Create Extra operation).")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Wait"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/actions/wait.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Creates an action used to wait an amount of milliseconds specified as input. The delay can go from 1 to 100 milliseconds.")))),Object(c.b)("h3",{id:"utility"},"Utility"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Appearance"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Passthrough"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/utility/passthrough.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Utility block used only for a graphical purpose, in order to make it easy to create connections between blocks that are far away.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Create Extra"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)(O,{src:"/img/visual-formatter/blocks/utility/create-extra.png",mdxType:"Img"})),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Creates an extra of different type, taking as input the extra name and its value. The result is a string that, added in an array, can be used as input of the Send Intent operation (in the extras field).")))),Object(c.b)("h2",{id:"feature-level"},"Feature Level"),Object(c.b)("p",null,"All visual formatter projects contain a number representing the feature level of the specific project. The feature level is used to verify the compatibility of the created project with a specific device and depends on the features included in the project. This number is always visible in the project info dialog."),Object(c.b)("p",null,"The currently supported feature levels are:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Feature Level 0"),": Supports only simple formatter charts."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Feature Level 1"),": Can include dispatcher items."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Feature Level 2"),": Can include custom inputs/outputs/variables."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Feature Level 3"),": Can include the actionsOut output (used to execute additional actions aside from the usual barcode, such as sending key events or intents) as well as the eventTypeIn input (used to manage the start, stop and timeout of the decoding session).")),Object(c.b)("p",null,"Below the table with the scanner service versions from where the specific feature level has been introduced:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Feature Level"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Scanner Service Version"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"0"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"1.3.2.01 r5")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"1"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"1.3.2.01 r10")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"2"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"1.3.2.01 r10")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"3"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"2.2.0.10 r2")))),Object(c.b)("p",null,"The following instead shows when support for a given feature level was added to a device's firmware:"),Object(c.b)(l.a,{defaultValue:"SkorpioX5",values:[{label:"Skorpio X5",value:"SkorpioX5"},{label:"Memor 20",value:"Memor20"},{label:"Memor 10",value:"Memor10"},{label:"Memor 1",value:"Memor1"},{label:"Memor K",value:"MemorK"},{label:"Joya A6",value:"JoyaTouchA6"},{label:"DL-Axist/X4",value:"DLAxist"}],mdxType:"Tabs"},Object(c.b)(o.a,{value:"SkorpioX5",mdxType:"TabItem"},Object(c.b)(b.a,{columns:i.b,data:i.c,model:"Skorpio X5",mdxType:"FirmwareTable"})),Object(c.b)(o.a,{value:"Memor20",mdxType:"TabItem"},Object(c.b)(b.a,{columns:i.b,data:i.c,model:"Memor 20",mdxType:"FirmwareTable"})),Object(c.b)(o.a,{value:"Memor10",mdxType:"TabItem"},Object(c.b)(b.a,{columns:i.b,data:i.c,model:"Memor 10",mdxType:"FirmwareTable"})),Object(c.b)(o.a,{value:"Memor1",mdxType:"TabItem"},Object(c.b)(b.a,{columns:i.b,data:i.c,model:"Memor1",mdxType:"FirmwareTable"})),Object(c.b)(o.a,{value:"MemorK",mdxType:"TabItem"},Object(c.b)(b.a,{columns:i.b,data:i.c,model:"Memor K",mdxType:"FirmwareTable"})),Object(c.b)(o.a,{value:"JoyaTouchA6",mdxType:"TabItem"},Object(c.b)(b.a,{columns:i.b,data:i.c,model:"Joya Touch A6",mdxType:"FirmwareTable"})),Object(c.b)(o.a,{value:"DLAxist",mdxType:"TabItem"},Object(c.b)(b.a,{columns:i.b,data:i.c,model:"DL-Axist/X4",mdxType:"FirmwareTable"}))),Object(c.b)("h2",{id:"special-characters"},"Special Characters"),Object(c.b)("p",null,"Inside the visual formatter strings, it is possible to manage special characters in a different way.",Object(c.b)("br",{parentName:"p"}),"\n","From the input string, the special characters are not converted in any way, so they can be checked using the escape sequence related to the character.",Object(c.b)("br",{parentName:"p"}),"\n","In the output they can be specified in the same way, but they can also be specified by some tags that have been created to simplify the usage of special characters.",Object(c.b)("br",{parentName:"p"}),"\n","The table below shows the tags and the corresponding escape sequences used to specify those characters."),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Special Character Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Tag"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Escape Sequence (Unicode)"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Escape Sequence (Short Version)"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"SOH"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","SOH","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0001"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"STX"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","STX","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0002"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"ETX"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","ETX","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0003"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"EOT"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","EOT","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0004"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"ENQ"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","ENQ","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0005"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"ACK"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","ACK","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0006"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"BEL"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","BEL","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0007"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"BS"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","BS","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0008"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"\\b")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"TAB"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","HT","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0009"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"\\t")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"LF"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","LF","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u000A"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"\\n")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"VT"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","VT","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u000B"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"\\v")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"FF"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","FF","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u000C"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"\\f")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"CR"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","CR","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u000D"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"\\r")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"SO"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","SO","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u000E"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"SI"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","SI","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u000F"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"DLE"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","DLE","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0010"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"DC1"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","DC1","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0011"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"DC2"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","DC2","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0012"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"DC3"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","DC3","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0013"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"DC4"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","DC4","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0014"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"NAK"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","NAK","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0015"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"SYN"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","SYN","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0016"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"ETB"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","ETB","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0017"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"CAN"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","CAN","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0018"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"EN"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","EN","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u0019"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"SUB"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","SUB","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u001A"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"ESC"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","ESC","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u001B"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"FS"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","FS","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u001C"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"GS"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","GS","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u001D"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"RS"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","RS","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u001E"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"US"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","US","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u001F"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"DEL"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"[","DEL","]"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"\\u007F"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"N/A")))))}j.isMDXComponent=!0},355:function(e,t,a){"use strict";a.d(t,"c",(function(){return n})),a.d(t,"a",(function(){return c})),a.d(t,"b",(function(){return b}));a(0);var r,n=[{modelName:"Memor 10",firmwareVersion:"2.07.11",releaseDate:"2021-04-29",osVersion:"9.0",securityPatch:"2021-03-01",sdkAddOnVersion:"1.25",scan2DeployVersion:"1.29.6539",setupWizardScannerVersion:"1.24.6565",dlBatteryManager:"1.5.0",espresso:{version:"2.0",sureLockVersion:"21.01.14",sureFoxVersion:"9.05"},visualFormatterFeatureLevel:"2"},{modelName:"Memor 10",firmwareVersion:"2.06.08",releaseDate:"2020-12-02",osVersion:"9.0",securityPatch:"2020-11",sdkAddOnVersion:"1.25",scan2DeployVersion:"1.26.5419",dlScannerServiceVersion:"2.1.0.1-r1-104",setupWizardScannerVersion:"1.22.4963",dxuAgentVersion:"1.32.4399",eaInstallerVersion:"2.4.4.08",sureLockVersion:"13.52",sureFoxVersion:"8.43",scan2DeployAlwaysEnabled:!0,visualFormatterFeatureLevel:"2"},{modelName:"Memor 10",firmwareVersion:"2.05.07",releaseDate:"2020-08-13",osVersion:"9.0",securityPatch:"2020-08-05",sdkAddOnVersion:"1.22",scan2DeployVersion:"",dlScannerServiceVersion:"1.3.2.01-r8",visualFormatterFeatureLevel:"0"},{modelName:"Memor 10",firmwareVersion:"2.04.05",releaseDate:"2020-06-08",osVersion:"9.0",securityPatch:"2020-05-05",sdkAddOnVersion:"1.22",scan2DeployVersion:"",dlScannerServiceVersion:"1.3.2.00-r2",visualFormatterFeatureLevel:"N/A"},{modelName:"Memor 10",firmwareVersion:"2.03.04",releaseDate:"2020-03-11",osVersion:"9.0",securityPatch:"2020-03-05",sdkAddOnVersion:"1.21",scan2DeployVersion:"1.17.3122",visualFormatterFeatureLevel:"N/A"},{modelName:"Memor 10",firmwareVersion:"1.10.22",releaseDate:"2020-11-16",osVersion:"8.1",securityPatch:"2020-09-01",scan2DeployVersion:"1.26.5417",dlScannerServiceVersion:"1.3.2.01-r2.1-95",sdkAddOnVersion:"1.22",visualFormatterFeatureLevel:"N/A"},{modelName:"Memor 10",firmwareVersion:"1.09.18",releaseDate:"2020-06-17",osVersion:"8.1",securityPatch:"2020-06-05",dxuAgentVersion:"1.28.1865",scan2DeployVersion:"1.18.3248",softSpotVersion:"2.1.1802",dlBatteryManager:"1.5.0",dlScannerServiceVersion:"1.3.2.01-r2",sdkAddOnVersion:"1.22",enterpriseAgentVersion:"2.3.4.02",visualFormatterFeatureLevel:"N/A"},{modelName:"Memor 10",firmwareVersion:"1.07.15",releaseDate:"2019-12-27",osVersion:"8.1",securityPatch:"2020-01-05",dlScannerServiceVersion:"1.2.11.03-r5",dxuAgentVersion:"1.27.1624",sdkAddOnVersion:"1.21",sureLockVersion:"12.41",sureFoxVersion:"7.87",scan2DeployVersion:"1.13.1721",softSpotVersion:"2.0.444",dlBatteryManager:"1.4.5",visualFormatterFeatureLevel:"N/A"},{modelName:"Memor 20",firmwareVersion:"1.07.08",releaseDate:"2021-03-23",osVersion:"9.0",securityPatch:"2021-02-01",dxuAgentVersion:"1.33.5991",scan2DeployVersion:"1.28",dockManagerVersion:"1.8.2",dlScannerServiceVersion:"2.1.0.3-r2-110",sdkAddOnVersion:"1.27",espresso:{version:"3.2",wifiguardVersion:"1.10",sureLockVersion:"17.14",sureFoxVersion:"8.53",enterpriseAgentVersion:"4.08"},visualFormatterFeatureLevel:"2"},{modelName:"Memor 20",firmwareVersion:"1.06.05",releaseDate:"2020-12-11",osVersion:"9.0",securityPatch:"2020-10-01",sdkAddOnVersion:"1.25",scan2DeployVersion:"1.24.5026",dlScannerServiceVersion:"v2.1.0.0-r1-102",dxuAgentVersion:"1.32.4399",dockManagerVersion:"1.6.7",setupWizardScannerVersion:"1.22.4963",visualFormatterFeatureLevel:"0"},{modelName:"Memor 20",firmwareVersion:"1.05.05",releaseDate:"2020-09-03",osVersion:"9.0",securityPatch:"2020-08-05",sdkAddOnVersion:"1.24",scan2DeployVersion:"",dlScannerServiceVersion:"1.3.2.01-r5-97",sureLockVersion:"",dxuAgentVersion:"1.31.4151",softSpotVersion:"2.3.4387",setupWizardScannerVersion:"1.20.4598",visualFormatterFeatureLevel:"N/A"},(r={modelName:"Memor 20",firmwareVersion:"1.04.15",releaseDate:"2020-07-30",osVersion:"9.0",securityPatch:"2020-05-05",sdkAddOnVersion:"1.23",scan2DeployVersion:"1.19.3684",dlScannerServiceVersion:"1.3.2.01-r3-95",sureLockVersion:"13.51",dxuAgentVersion:"1.29.3371"},r.scan2DeployVersion="1.19.3684",r.softSpotVersion="2.2.3680",r.batteryManagerVersion="1.5.0",r.dockManagerVersion="1.5.0",r.eaInstallerVersion="2.0.4.02",r.visualFormatterFeatureLevel="N/A",r),{modelName:"Memor K",firmwareVersion:"1.00.04",releaseDate:"2020-08-06",osVersion:"9.0",sdkAddOnVersion:"1.22",dlScannerServiceVersion:"1.3.2.02-r1-mk",scan2DeployVersion:"1.31",dxuAgentVersion:"1.28.1865",sureFoxVersion:"7.87",sureLockVersion:"12.41",softSpotVersion:"2.1.1802",visualFormatterFeatureLevel:"N/A"},{modelName:"Joya Touch A6",firmwareVersion:"4.01.03",releaseDate:"2021-04-08",osVersion:"9.0",securityPatch:"2021-02-01",scan2DeployVersion:"1.29",dlScannerServiceVersion:"2.1.0.1-r2-105",sdkAddOnVersion:"1.25",dlBatteryManager:"1.6.0",visualFormatterFeatureLevel:"2"},{modelName:"Joya Touch A6",firmwareVersion:"3.04.05",releaseDate:"2021-01-07",osVersion:"8.1",securityPatch:"2020-10-01",sdkAddOnVersion:"1.24",visualFormatterFeatureLevel:"0"},{modelName:"Joya Touch A6",firmwareVersion:"3.03.04",releaseDate:"2020-08-07",osVersion:"8.1",securityPatch:"2020-06-05",sdkAddOnVersion:"1.24",scan2DeployVersion:"1.22.4257",dlScannerServiceVersion:"1.3.2.01-r9-101",sureLockVersion:"13.51",firefoxVersion:"68.8.1",visualFormatterFeatureLevel:"0"},{modelName:"Joya Touch A6",firmwareVersion:"3.02.02",releaseDate:"2020-06-03",osVersion:"8.1",securityPatch:"2020-03-05",dlCradleManager:"1.2.18",scan2DeployVersion:"1.18.3248",sdkAddOnVersion:"1.21",visualFormatterFeatureLevel:"N/A"},{modelName:"Joya Touch A6",firmwareVersion:"3.01.01",releaseDate:"2019-12-18",osVersion:"8.1",sdkAddOnVersion:"1.21",firefoxVersion:"63.0.2",visualFormatterFeatureLevel:"N/A"},{modelName:"Joya Touch A6",firmwareVersion:"2.25.46",releaseDate:"2020-10-27",osVersion:"7.1",sdkAddOnVersion:"1.21",visualFormatterFeatureLevel:"N/A"},{modelName:"Joya Touch A6",firmwareVersion:"2.24.44",releaseDate:"2020-07-20",osVersion:"7.1",sureLockVersion:"13.51",firefoxVersion:"68.8.1",sdkAddOnVersion:"1.21",visualFormatterFeatureLevel:"N/A"},{modelName:"Joya Touch A6",firmwareVersion:"2.23.42",releaseDate:"2020-06-03",osVersion:"7.1",dlCradleManager:"1.2.18",sdkAddOnVersion:"1.21",visualFormatterFeatureLevel:"N/A"},{modelName:"Joya Touch A6",firmwareVersion:"2.22.41",releaseDate:"2019-12-20",osVersion:"7.1",securityPatch:"2019-10-05",dlStagerVersion:"0.34.0",sdkAddOnVersion:"1.21",visualFormatterFeatureLevel:"N/A"},{modelName:"Joya Touch A6",firmwareVersion:"2.21.38",releaseDate:"2019-09-17",osVersion:"7.1",securityPatch:"2019-07-05",mobiControlVersion:"13.7.0",dxuAgentVersion:"1.24.390",sdkAddOnVersion:"1.20",visualFormatterFeatureLevel:"N/A"},{modelName:"Joya Touch A6",firmwareVersion:"2.20.34",releaseDate:"2019-06-05",osVersion:"7.1",dlScannerServiceVersion:"1.2.3.r14",securityPatch:"2019-04-05",sdkAddOnVersion:"1.18",dlCradleManager:"1.2.17",mobiControlVersion:"13.6.0",sureLockVersion:"11.51",dxuAgentVersion:"1.23.243",softSpotVersion:"1.8.92",enterpriseAgentVersion:"3.66",visualFormatterFeatureLevel:"N/A"},{modelName:"Joya Touch A6",firmwareVersion:"2.19.31",releaseDate:"2019-04-30",osVersion:"7.1",securityPatch:"2019-03-05",dlScannerServiceVersion:"1.2.3.r6",sdkAddOnVersion:"1.16",dlCradleManager:"1.2.16",visualFormatterFeatureLevel:"N/A"},{modelName:"DL-Axist/X4",firmwareVersion:"2.07.03",releaseDate:"2020-10-01",osVersion:"4.4",dlScannerServiceVersion:"1.2.11.04-r4-90",autoRangeScannerFalconX4:"2.2.0.6",sureLockVersion:"15.55",enterpriseAgentVersion:"4.08",sdkAddOnVersion:"1.21",visualFormatterFeatureLevel:"N/A"},{modelName:"DL-Axist/X4",firmwareVersion:"2.06.01",releaseDate:"2020-02-26",osVersion:"4.4",dlScannerServiceVersion:"1.2.11.04-r4",autoRangeScannerFalconX4:"2.2.0.2",sdkAddOnVersion:"1.21",sureLockVersion:"12.41",enterpriseAgentVersion:"4.01",visualFormatterFeatureLevel:"N/A"},{modelName:"DL-Axist/X4",firmwareVersion:"2.03.02",releaseDate:"2019-06-28",osVersion:"4.4",dlScannerServiceVersion:"1.2.3-r12",autoRangeScannerFalconX4:"1.0.2.1",securityPatch:"2017-10",sdkAddOnVersion:"1.18",sureLockVersion:"11.51",dxuAgentVersion:"1.23.243",softSpotVersion:"1.8.92",enterpriseAgentVersion:"3.66",visualFormatterFeatureLevel:"N/A"},{modelName:"Memor1",firmwareVersion:"3.10.14",releaseDate:"2021-01-15",osVersion:"8.1",securityPatch:"2020-10-01",visualFormatterFeatureLevel:"N/A"},{modelName:"Memor1",firmwareVersion:"3.09.13",releaseDate:"2020-10-29",osVersion:"8.1",securityPatch:"2020-09",dlScannerServiceVersion:"1.2.9-r4.1-memor1-75",visualFormatterFeatureLevel:"N/A"},{modelName:"Memor1",firmwareVersion:"3.08.11",releaseDate:"2020-06-10",osVersion:"8.1",securityPatch:"2020-04-05",dlCradleManager:"1.2.18",setupWizardScannerVersion:"1.16.2662",dxuAgentVersion:"1.28.1865",softSpotVersion:"2.1.1802",scan2DeployVersion:"1.18.3248",visualFormatterFeatureLevel:"N/A"},{modelName:"Memor1",firmwareVersion:"3.07.09",releaseDate:"2019-09-27",osVersion:"8.1",securityPatch:"2019-10-05",dxuAgentVersion:"1.25.840",enterpriseAgentVersion:"3.67",visualFormatterFeatureLevel:"N/A"},{modelName:"Memor1",firmwareVersion:"3.06.08",releaseDate:"2019-06-14",osVersion:"8.1",securityPatch:"2019-06-05",dlScannerServiceVersion:"1.2.9-r4-74",setupWizardScannerVersion:"1.9",sdkAddOnVersion:"1.19",softSpotVersion:"1.8.92",scan2DeployVersion:"1.9.198",dxuAgentVersion:"1.23.243",sureLockVersion:"11.51",visualFormatterFeatureLevel:"N/A"},{modelName:"Memor1",firmwareVersion:"3.04.06",releaseDate:"2019-03-15",osVersion:"8.1",securityPatch:"2019-02-05",dlScannerServiceVersion:"1.2.3-r6",setupWizardScannerVersion:"1.4",scanEngineCameraVersion:"2.0",dlCradleManager:"1.2.16",sdkAddOnVersion:"1.16",dlBatteryManager:"1.4.3",softSpotVersion:"1.6.84",scan2DeployVersion:"1.4.23",dxuAgentVersion:"1.16.51",enterpriseAgentVersion:"3.66",sureLockVersion:"7.97",visualFormatterFeatureLevel:"N/A"},{modelName:"Skorpio X5",firmwareVersion:"2.09.052",releaseDate:"2021-03-30",osVersion:"10",securityPatch:"2021-02-01",scan2DeployVersion:"1.28",dockManagerVersion:"1.8.2",dlScannerServiceVersion:"2.1.0.3-r2-110",sdkAddOnVersion:"1.27",dlSettingsVersion:"1.8.0",dxuAgentVersion:"1.33.5991",espresso:{version:"1.3.0",enterpriseAgentVersion:"4.08",sureLockVersion:"17.14",sureFoxVersion:"8.53",wifiguardVersion:"1.10.3.31"},visualFormatterFeatureLevel:"2"},{modelName:"Skorpio X5",firmwareVersion:"2.08.050",releaseDate:"2021-02-04",osVersion:"10",securityPatch:"2020-11-01",sdkAddOnVersion:"1.25",espresso:{version:"1.2.1",enterpriseAgentVersion:"4.08",sureLockVersion:"13.53",sureFoxVersion:"8.53",wifiguardVersion:"1.00.1.13"},visualFormatterFeatureLevel:"2"}],c=[{Header:"Model name",accessor:"modelName",className:"firmware-table",filter:function(e,t,a){return e.filter((function(e){return e.values[t].startsWith(a)}))}},{Header:"Firmware version",accessor:"firmwareVersion",className:"firmware-table left"},{Header:"Release date",accessor:"releaseDate",className:"firmware-table left"},{Header:"OS version",accessor:"osVersion",className:"firmware-table left"},{Header:"SDK add-on version",accessor:"sdkAddOnVersion",className:"firmware-table"}],b=[{Header:"Model name",accessor:"modelName",className:"firmware-table",filter:function(e,t,a){return e.filter((function(e){return e.values[t].startsWith(a)}))}},{Header:"Firmware version",accessor:"firmwareVersion",className:"firmware-table left"},{Header:"Release date",accessor:"releaseDate",className:"firmware-table left"},{Header:"OS version",accessor:"osVersion",className:"firmware-table left"},{Header:"Feature level",accessor:"visualFormatterFeatureLevel",className:"firmware-table",Cell:function(e){var t=e.value;return null==t?"UNKNOWN":t}}]},356:function(e,t,a){"use strict";a.d(t,"a",(function(){return i}));var r=a(0),n=a.n(r),c=a(369),b=(a(71),function(){return{}}),i=function(e){var t=e.columns,a=e.data,r=e.model,i=e.getHeaderProps,l=void 0===i?b:i,o=e.getColumnProps,s=void 0===o?b:o,d=Object(c.useTable)({columns:t,data:a,initialState:{hiddenColumns:["modelName"],filters:[{id:"modelName",value:r}]}},c.useFilters,c.useSortBy),m=d.getTableProps,p=d.getTableBodyProps,O=d.headerGroups,u=d.rows,j=d.prepareRow;return n.a.createElement("table",m(),n.a.createElement("thead",null,O.map((function(e){return n.a.createElement("tr",e.getHeaderGroupProps(),e.headers.map((function(e){return n.a.createElement("th",e.getHeaderProps([{className:e.className},l(e),s(e),e.getSortByToggleProps()]),e.render("Header"),n.a.createElement("span",null,e.isSorted?e.isSortedDesc?" \u25bc":" \u25b2":""))})))}))),n.a.createElement("tbody",p(),u.map((function(e,t){return j(e),n.a.createElement("tr",e.getRowProps(),e.cells.map((function(e){return n.a.createElement("td",e.getCellProps([{className:e.column.className,style:e.column.style},s(e.column)]),e.render("Cell"))})))}))))}},604:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/scan2deploy-studio-visual-formatter-1e23d8d1aa190780b4ee9c5f934b6078.png"},605:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/sub-string-9e6c4cff265b994b73ba1bc3d5f56499.png"}}]);