"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[29795],{22386:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var i=t(85893),o=t(11151);const s={id:"dock-settings",title:"Dock Settings"},c=void 0,r={id:"oemconfig/dock-settings",title:"Dock Settings",description:"Settings",source:"@site/docs/oemconfig/dock-settings.md",sourceDirName:"oemconfig",slug:"/oemconfig/dock-settings",permalink:"/oemconfig/dock-settings",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"dock-settings",title:"Dock Settings"},sidebar:"OEMConfig",previous:{title:"Keyboard & Scan Buttons",permalink:"/oemconfig/key-settings"},next:{title:"Network Settings",permalink:"/oemconfig/network-settings"}},l={},d=[{value:"Settings",id:"settings",level:2},{value:"General",id:"general",level:3}];function a(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"settings",children:"Settings"}),"\n",(0,i.jsx)(n.h3,{id:"general",children:"General"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Firmware update policy"}),": Policy for updating the Cradle Firmware. The default value is ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Notify user for update"})}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Cradle unlock policy"}),": Policy for notifications about lever status change events that occur on the cradle. The default value is ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"None"})}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Cradle unlock key policy"}),": Policy for notifications about insertion and extraction of the Unlock Key into/from the cradle. The default vlaue is ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Notification disabled"})}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Cradle unlock notification policy"}),": Policy for unlock notifications when the device is inserted in specific cradle models. The default vlaue is ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"SSD Locking"})}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Cradle failure policy"}),": Policy for notifications of failure events that occur on the cradle. The default vlaue is ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Notification disabled"})}),"."]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>c});var i=t(67294);const o={},s=i.createContext(o);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);