"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[64750],{55299:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>x,frontMatter:()=>c,metadata:()=>o,toc:()=>u});var i=t(85893),a=t(11151),r=t(74866),s=t(85162),l=t(10993);const c={id:"sdk-integration",title:"SDK Integration",sidebar_label:"SDK"},d=void 0,o={id:"aladdin/sdk-integration",title:"SDK Integration",description:"Overview",source:"@site/docs/aladdin/sdk-integration.mdx",sourceDirName:"aladdin",slug:"/aladdin/sdk-integration",permalink:"/aladdin/sdk-integration",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"sdk-integration",title:"SDK Integration",sidebar_label:"SDK"},sidebar:"Aladdin",previous:{title:"Home Page",permalink:"/aladdin/home-page"},next:{title:"Intent",permalink:"/aladdin/intent-integration"}},h={},u=[{value:"Overview",id:"overview",level:2},{value:"Aladdin SDK",id:"aladdin-sdk",level:2},{value:"Integration",id:"integration",level:3},{value:"Add jitpack.io repository",id:"add-jitpackio-repository",level:4},{value:"Add SDK dependency",id:"add-sdk-dependency",level:4},{value:"API",id:"api",level:3},{value:"AlManager (Class)",id:"almanager-class",level:4},{value:"IScannerOutput (Interface)",id:"iscanneroutput-interface",level:4},{value:"IServiceOutput (Interface)",id:"iserviceoutput-interface",level:4},{value:"BarcodeModel (Class)",id:"barcodemodel-class",level:4},{value:"SDK Sample Client",id:"sdk-sample-client",level:2},{value:"Exploring Button Capabilities",id:"exploring-button-capabilities",level:3},{value:"Subscribe To Service Events",id:"subscribe-to-service-events",level:4},{value:"Connect To Service",id:"connect-to-service",level:4},{value:"Subscribe To Scans",id:"subscribe-to-scans",level:4},{value:"Is Connected To Scanner",id:"is-connected-to-scanner",level:4},{value:"Is Connected To Service",id:"is-connected-to-service",level:4},{value:"Get Latest Scan Value",id:"get-latest-scan-value",level:4},{value:"Unsubscribe From Scans",id:"unsubscribe-from-scans",level:4},{value:"Unsubscribe From Service Events",id:"unsubscribe-from-service-events",level:4},{value:"Disconnect From Service",id:"disconnect-from-service",level:4},{value:"Steps to Receive Barcodes in Sample Client App",id:"steps-to-receive-barcodes-in-sample-client-app",level:3}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"This section outlines the capabilities of our SDK, which facilitates seamless integration with the Android Aladdin application. The SDK provides a sophisticated subscription model, enabling developers to efficiently receive and manage scanned data. With built-in functionalities for both subscribe and unsubscribe operations, developers gain a professional and adaptable solution for incorporating scanned data into their applications."}),"\n",(0,i.jsx)(n.h2,{id:"aladdin-sdk",children:"Aladdin SDK"}),"\n",(0,i.jsx)(n.h3,{id:"integration",children:"Integration"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://jitpack.io/#datalogic/aladdin-app-sdk",children:(0,i.jsx)(n.img,{src:"https://jitpack.io/v/datalogic/aladdin-app-sdk.svg",alt:"Release"})})}),"\n",(0,i.jsx)(n.p,{children:"The Aladdin SDK is distributed through JitPack and can easily be referenced within a project's gradle build system."}),"\n",(0,i.jsx)(n.h4,{id:"add-jitpackio-repository",children:"Add jitpack.io repository"}),"\n",(0,i.jsxs)(n.p,{children:["Add the jitpack repository to the ",(0,i.jsx)(n.code,{children:"repositories"})," block in the ",(0,i.jsx)(n.code,{children:"settings.gradle"})," file:"]}),"\n",(0,i.jsxs)(r.Z,{groupId:"language",values:[{label:"Groovy",value:"groovy"},{label:"Kotlin",value:"kotlin"}],children:[(0,i.jsx)(s.Z,{value:"kotlin",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",metastring:'title="settings.gradle.kts"',children:'dependencyResolutionManagement {\n  repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n      google()\n      mavenCentral()\n      // highlight-next-line-added\n      maven(url="https://jitpack.io")\n    }\n}\n'})})}),(0,i.jsx)(s.Z,{value:"groovy",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",metastring:'title="settings.gradle"',children:'dependencyResolutionManagement {\n  repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n      google()\n      mavenCentral()\n      // highlight-next-line-added\n      maven { url "https://jitpack.io" }\n    }\n}\n'})})})]}),"\n",(0,i.jsx)(n.h4,{id:"add-sdk-dependency",children:"Add SDK dependency"}),"\n",(0,i.jsxs)(n.p,{children:["Add a reference to the specific version of the SDK you would like to use to the ",(0,i.jsx)(n.code,{children:"build.gradle"})," file."]}),"\n",(0,i.jsxs)(r.Z,{groupId:"language",values:[{label:"Groovy",value:"groovy"},{label:"Kotlin",value:"kotlin"}],children:[(0,i.jsx)(s.Z,{value:"kotlin",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",metastring:'title="build.gradle.kts (:app)"',children:'dependencies {\n  ...\n  // highlight-next-line-added\n  implementation("com.github.datalogic:aladdin-app-sdk:{latest version}")\n  ...\n}\n'})})}),(0,i.jsx)(s.Z,{value:"groovy",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",metastring:'title="build.gradle (:app)"',children:"dependencies {\n  ...\n  // highlight-next-line-added\n  implementation 'com.github.datalogic:aladdin-app-sdk:{latest version}'\n  ...\n}\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"api",children:"API"}),"\n",(0,i.jsx)(n.h4,{id:"almanager-class",children:"AlManager (Class)"}),"\n",(0,i.jsxs)(n.p,{children:["Package: ",(0,i.jsx)(n.code,{children:"com.datalogic.aladdinsdk"})]}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{style:{minWidth:"485px"},children:"Method"}),(0,i.jsx)("th",{children:"Summary"})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(n.code,{children:"connectToService(context: Context): Boolean"})}),(0,i.jsx)("td",{children:"Connect to the Aladdin App, if not connected already. Triggers a Service Binding via (AIDL) IPC to the Aladdin App. Will automatically re-establish the connection if necessary."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(n.code,{children:"disconnectFromService()"})}),(0,i.jsx)("td",{children:"Disconnects the existing service binding."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(n.code,{children:"isConnectedToScanner(): Boolean"})}),(0,i.jsx)("td",{children:"Returns if a scanner is currently connected to the Aladdin App or not."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(n.code,{children:"isConnectedToService(): Boolean"})}),(0,i.jsx)("td",{children:"Returns if the Service is currently connected to the Aladdin App or not."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(n.code,{children:"subscribeToScans(callback: IScannerOutput)"})}),(0,i.jsx)("td",{children:"Subscribe to scanner connection information and scanned barcodes."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(n.code,{children:"subscribeToServiceEvents(callback: IServiceOutput)"})}),(0,i.jsx)("td",{children:"Subscribe to connection information of the sdk-service."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(n.code,{children:"unsubscribeFromScans(callback: IScannerOutput)"})}),(0,i.jsx)("td",{children:"Unsubscribe from scanner connection information and scanned barcodes."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(n.code,{children:"unsubscribeFromServiceEvents(callback: IServiceOutput)"})}),(0,i.jsx)("td",{children:"Unsubscribe connection information of the sdk-service."})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"iscanneroutput-interface",children:"IScannerOutput (Interface)"}),"\n",(0,i.jsxs)(n.p,{children:["Package: ",(0,i.jsx)(n.code,{children:"com.datalogic.aladdinsdk.interfaces"})]}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{style:{minWidth:"350px"},children:"Method"}),(0,i.jsx)("th",{children:"Summary"})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(n.code,{children:"onBarcodeScanned(data: BarcodeModel)"})}),(0,i.jsx)("td",{children:"Callback Method that is called for each scanned barcode. It will only be called once per Barcode."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(n.code,{children:"onScannerConnected()"})}),(0,i.jsx)("td",{children:"Callback method that is called once a scanner is connected to Aladdin App."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(n.code,{children:"onScannerDisconnected()"})}),(0,i.jsx)("td",{children:"Callback method that is called once a scanner is disconnected from Aladdin App."})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"iserviceoutput-interface",children:"IServiceOutput (Interface)"}),"\n",(0,i.jsxs)(n.p,{children:["Package: ",(0,i.jsx)(n.code,{children:"com.datalogic.aladdinsdk.interfaces"})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{children:"Summary"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"onServiceConnected()"})}),(0,i.jsx)(n.td,{children:"Callback for the successful connection to the service."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"onServiceDisconnected()"})}),(0,i.jsx)(n.td,{children:"Callback for a disconnection from the service."})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"barcodemodel-class",children:"BarcodeModel (Class)"}),"\n",(0,i.jsxs)(n.p,{children:["Package: ",(0,i.jsx)(n.code,{children:"com.datalogic.aladdinsdk.model"})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{children:"Summary"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"getBarcode(): String"})}),(0,i.jsx)(n.td,{children:"Returns the barcode data from the event object."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"getCode(): String"})}),(0,i.jsx)(n.td,{children:"Returns the barcode type from the event object."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"getScanTime(): Long"})}),(0,i.jsx)(n.td,{children:"Returns the time in milliseconds of the event object (based on the current device time)."})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"sdk-sample-client",children:"SDK Sample Client"}),"\n",(0,i.jsx)(n.p,{children:"The Aladdin SDK client is a purposefully crafted sample application designed to showcase the dynamic capabilities of the SDK. This app stands as a practical illustration of how the SDK integrates into Android environments. With an array of buttons representing distinct features, developers can interactively explore and understand the SDK's functionalities."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["The client ",(0,i.jsx)(n.a,{href:"https://github.com/datalogic/aladdin-samples/releases?q=sdk&expanded=true",children:"APK"})," and ",(0,i.jsx)(n.a,{href:"https://github.com/datalogic/aladdin-samples/tree/main/sdk-client",children:"source code"})," can be found in the ",(0,i.jsx)(n.a,{href:"https://github.com/datalogic/aladdin-samples/",children:"Aladdin samples"})," repository on Github."]})}),"\n",(0,i.jsx)(l.f5,{img:"/img/aladdin/aladdin-client.png"}),"\n",(0,i.jsx)(n.h3,{id:"exploring-button-capabilities",children:"Exploring Button Capabilities"}),"\n",(0,i.jsx)(n.h4,{id:"subscribe-to-service-events",children:"Subscribe To Service Events"}),"\n",(0,i.jsx)(n.p,{children:"Subscribe to connection information of the sdk-service. You will get notified when you are connected or disconnected from Aladdin application."}),"\n",(0,i.jsx)(l.f5,{img:"/img/aladdin/subscribe-to-service.png"}),"\n",(0,i.jsx)(n.h4,{id:"connect-to-service",children:"Connect To Service"}),"\n",(0,i.jsx)(n.p,{children:"Connect to the Aladdin application. Triggers a service binding via (AIDL) IPC to the Aladdin application."}),"\n",(0,i.jsx)(l.f5,{img:"/img/aladdin/connect-to-service.png"}),"\n",(0,i.jsx)(n.h4,{id:"subscribe-to-scans",children:"Subscribe To Scans"}),"\n",(0,i.jsx)(n.p,{children:"Subscribe to connection information and scanned barcodes. You will get notified when you are connected or disconnected from the CODiScan scanner and when a barcode is scanned (along with its data)."}),"\n",(0,i.jsx)(l.f5,{img:"/img/aladdin/subscribe-to-scans.png"}),"\n",(0,i.jsx)(n.h4,{id:"is-connected-to-scanner",children:"Is Connected To Scanner"}),"\n",(0,i.jsx)(n.p,{children:"Will get information related to scanner, whether it is currently connected to the Aladdin application or not."}),"\n",(0,i.jsx)(n.h4,{id:"is-connected-to-service",children:"Is Connected To Service"}),"\n",(0,i.jsx)(n.p,{children:"Will get information related to the service, whether it is currently connected to the Aladdin application or not."}),"\n",(0,i.jsx)(n.h4,{id:"get-latest-scan-value",children:"Get Latest Scan Value"}),"\n",(0,i.jsx)(n.p,{children:"Get the last scanned value from the CODiScan."}),"\n",(0,i.jsx)(n.h4,{id:"unsubscribe-from-scans",children:"Unsubscribe From Scans"}),"\n",(0,i.jsx)(n.p,{children:"Unsubscribe from connection information and scanned barcodes. You will not get any information related to scanned barcodes and CODiScan connections."}),"\n",(0,i.jsx)(n.h4,{id:"unsubscribe-from-service-events",children:"Unsubscribe From Service Events"}),"\n",(0,i.jsx)(n.p,{children:"Unsubscribe from connection information of the sdk-service. You will not get any information related to the connection with the Aladdin application."}),"\n",(0,i.jsx)(n.h4,{id:"disconnect-from-service",children:"Disconnect From Service"}),"\n",(0,i.jsx)(n.p,{children:"Disconnect from the Aladdin application. Removes the current service binding via (AIDL) IPC to the Aladdin application."}),"\n",(0,i.jsx)(n.h3,{id:"steps-to-receive-barcodes-in-sample-client-app",children:"Steps to Receive Barcodes in Sample Client App"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Install both applications (Aladdin and Sample Client) on the device."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Connect to Hand Scanner from Aladdin application and ",(0,i.jsx)(n.strong,{children:'select "Integration method" as SDK'}),"."]}),"\n",(0,i.jsx)(l.f5,{img:"/img/aladdin/integration-sdk.png"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Once the CODiScan is connected to the Aladdin application, open the Sample Client application."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'Tap "Connect to service" in the client application. Once connection is successful, you will get connection toast message.'}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'Tap "Subscribe to Scans" in client application.'}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Now you can scan the barcode data from the CODiScan device. You will get a toast message with scanned data in Sample Client application."}),"\n",(0,i.jsx)(l.f5,{img:"/img/aladdin/toast-message.png"}),"\n"]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>s});t(67294);var i=t(36905);const a={tabItem:"tabItem_Ymn6"};var r=t(85893);function s(e){let{children:n,hidden:t,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.Z)(a.tabItem,s),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>y});var i=t(67294),a=t(36905),r=t(12466),s=t(16550),l=t(20469),c=t(91980),d=t(67392),o=t(50012);function h(e){var n,t;return null!=(n=null==(t=i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}function u(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=null!=n?n:function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:a}}=e;return{value:n,label:t,attributes:i,default:a}}))}(t);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const a=(0,s.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,c._X)(r),(0,i.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function v(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=u(e),[s,c]=(0,i.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:i}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+i.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const a=null!=(n=i.find((e=>e.default)))?n:i[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[d,h]=x({queryString:t,groupId:a}),[v,m]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[a,r]=(0,o.Nk)(t);return[a,(0,i.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),b=(()=>{const e=null!=d?d:v;return p({value:e,tabValues:r})?e:null})();(0,l.Z)((()=>{b&&c(b)}),[b]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error("Can't select invalid tab value="+e);c(e),h(e),m(e)}),[h,m,r]),tabValues:r}}var m=t(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(85893);function j(e){let{className:n,block:t,selectedValue:i,selectValue:s,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.o5)(),o=e=>{const n=e.currentTarget,t=c.indexOf(n),a=l[t].value;a!==i&&(d(n),s(a))},h=e=>{var n;let t=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{var i;const n=c.indexOf(e.currentTarget)+1;t=null!=(i=c[n])?i:c[0];break}case"ArrowLeft":{var a;const n=c.indexOf(e.currentTarget)-1;t=null!=(a=c[n])?a:c[c.length-1];break}}null==(n=t)||n.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>c.push(e),onKeyDown:h,onClick:o,...r,className:(0,a.Z)("tabs__item",b.tabItem,null==r?void 0:r.className,{"tabs__item--active":i===n}),children:null!=t?t:n},n)}))})}function f(e){let{lazy:n,children:t,selectedValue:a}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function S(e){const n=v(e);return(0,g.jsxs)("div",{className:(0,a.Z)("tabs-container",b.tabList),children:[(0,g.jsx)(j,{...n,...e}),(0,g.jsx)(f,{...n,...e})]})}function y(e){const n=(0,m.Z)();return(0,g.jsx)(S,{...e,children:h(e.children)},String(n))}},10993:(e,n,t)=>{t.d(n,{QA:()=>s,TS:()=>a,f5:()=>r,sD:()=>l});t(67294);var i=t(85893);function a(e){let{img:n,maxWidth:t="fit-content",maxHeight:a="fit-content"}=e;return(0,i.jsx)("img",{src:n,style:{width:"auto",height:"auto",maxWidth:t,maxHeight:a}})}function r(e){let{img:n}=e;return(0,i.jsx)("img",{src:n,style:{maxHeight:"550px"}})}function s(e){let{children:n,flexWrap:t="wrap",alignItems:a="center",rowGap:r="15px",columnGap:s="25px"}=e;return(0,i.jsx)("div",{style:{display:"flex",alignItems:a,flexWrap:t,rowGap:r,columnGap:s,marginBottom:"20px"},children:n})}function l(e){let{img:n}=e;return(0,i.jsx)("img",{src:n,style:{border:"2px solid black"}})}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>s});var i=t(67294);const a={},r=i.createContext(a);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);