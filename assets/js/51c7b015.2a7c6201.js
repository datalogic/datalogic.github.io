"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[16992],{74991:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>o,frontMatter:()=>d,metadata:()=>s,toc:()=>h});var r=n(85893),a=n(11151);const d={id:"data-classes",title:"Data Classes"},i=void 0,s={id:"aladdin/codiscan/data-classes",title:"Data Classes",description:"Summary",source:"@site/docs/aladdin/codiscan/data-classes.md",sourceDirName:"aladdin/codiscan",slug:"/aladdin/codiscan/data-classes",permalink:"/aladdin/codiscan/data-classes",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"data-classes",title:"Data Classes"},sidebar:"Aladdin",previous:{title:"Interfaces",permalink:"/aladdin/codiscan/interfaces"},next:{title:"PropertyID",permalink:"/aladdin/codiscan/property-id"}},c={},h=[{value:"Summary",id:"summary",level:2},{value:"BatteryData",id:"batterydata",level:3},{value:"Members",id:"members",level:4},{value:"DeviceData",id:"devicedata",level:3},{value:"Members",id:"members-1",level:4},{value:"PairingData",id:"pairingdata",level:3},{value:"Members",id:"members-2",level:4},{value:"ScanData",id:"scandata",level:3},{value:"Members",id:"members-3",level:4}];function l(e){const t={a:"a",h2:"h2",h3:"h3",h4:"h4",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(t.p,{children:"The CODiScan\u2122 HS7600 SDK has several callback functions which send data back within a data class."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Classes"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#batterydata",children:(0,r.jsx)(t.strong,{children:"BatteryData"})})}),(0,r.jsx)(t.td,{children:"Contains information regarding the connected CODiScan's battery."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#devicedata",children:(0,r.jsx)(t.strong,{children:"DeviceData"})})}),(0,r.jsx)(t.td,{children:"Contains identifying information and firmware version regarding the connected CODiScan."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#pairingdata",children:(0,r.jsx)(t.strong,{children:"PairingData"})})}),(0,r.jsx)(t.td,{children:"Contains a pairing code formatted both as a string, and a Bitmap of a Data Matrix code."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#scandata",children:(0,r.jsx)(t.strong,{children:"ScanData"})})}),(0,r.jsx)(t.td,{children:"Contains information regarding a barcode scanned by the connected CODiScan device."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"batterydata",children:"BatteryData"}),"\n",(0,r.jsx)(t.p,{children:"Contains information regarding the connected CODiScan's battery."}),"\n",(0,r.jsx)(t.h4,{id:"members",children:"Members"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"batteryCharge"}),(0,r.jsx)(t.td,{children:"Int"}),(0,r.jsx)(t.td,{children:"The charge of the battery as an integer, representing percentage of remaining charge."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"batteryProfile"}),(0,r.jsx)(t.td,{children:"BatteryProfile"}),(0,r.jsx)(t.td,{children:"The battery profile, 0 -> Performance, 1 -> Health, 2 -> Save."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"batteryStatus"}),(0,r.jsx)(t.td,{children:"BatteryStatus"}),(0,r.jsx)(t.td,{children:"The battery status, 0 -> Charging, 1 -> Discharging."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"batteryTemperature"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The temperature of the battery by tenths of a degree in Celsius. 101 = 10.1 C"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"batteryCycleCount"}),(0,r.jsx)(t.td,{children:"Int"}),(0,r.jsx)(t.td,{children:"The battery cycle count."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"batteryHealth"}),(0,r.jsx)(t.td,{children:"Int"}),(0,r.jsx)(t.td,{children:"The health of the battery, given as an integer."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"devicedata",children:"DeviceData"}),"\n",(0,r.jsx)(t.p,{children:"Contains identifying information and firmware version regarding the connected CODiScan."}),"\n",(0,r.jsx)(t.h4,{id:"members-1",children:"Members"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"deviceType"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The human readable model name of the handheld device."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"fwVersion"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The firmware version of the device."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"deviceId"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The ID of the device."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"pairingdata",children:"PairingData"}),"\n",(0,r.jsx)(t.p,{children:"Contains a pairing code formatted both as a string, and a Bitmap of a Data Matrix code."}),"\n",(0,r.jsx)(t.h4,{id:"members-2",children:"Members"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pairingCode"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"A pairing code to connect a CODiScan to a mobile device."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"bitmap"}),(0,r.jsx)(t.td,{children:"BitMap"}),(0,r.jsx)(t.td,{children:"The pairing code formatted into a Bitmap of a Data Matrix code."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"scandata",children:"ScanData"}),"\n",(0,r.jsx)(t.p,{children:"Contains information regarding a barcode scanned by the connected CODiScan device."}),"\n",(0,r.jsx)(t.h4,{id:"members-3",children:"Members"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"rawData"}),(0,r.jsx)(t.td,{children:"ByteArray"}),(0,r.jsx)(t.td,{children:"The scanned barcode as an array of bytes."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"barcodeData"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"The scanned barcode as a string."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"barcodeID"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:'The symbology of the scanned barcode as a human readable string. E.g. "UPCA"'})]})]})]})]})}function o(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>i});var r=n(67294);const a={},d=r.createContext(a);function i(e){const t=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(d.Provider,{value:t},e.children)}}}]);