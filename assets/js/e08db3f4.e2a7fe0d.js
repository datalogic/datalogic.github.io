"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[6699],{60043:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>o,frontMatter:()=>t,metadata:()=>l,toc:()=>h});var r=n(85893),d=n(11151);const t={title:"Android HTTP API",id:"android-http-api",sidebar_label:"HTTP API"},i=void 0,l={id:"dxu/android-http-api",title:"Android HTTP API",description:"While DXU Service is enabled and running, DXU Android provides an HTTP endpoint that can be used by local applications to control the scanner. This is useful for web-based applications that need to be able to control the scanner.",source:"@site/docs/dxu/android-http-api.md",sourceDirName:"dxu",slug:"/dxu/android-http-api",permalink:"/dxu/android-http-api",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Android HTTP API",id:"android-http-api",sidebar_label:"HTTP API"},sidebar:"DXU",previous:{title:"Android",permalink:"/dxu/android"},next:{title:"Intents",permalink:"/dxu/android-intents"}},c={},h=[{value:"Conventions",id:"conventions",level:2},{value:"APIs",id:"apis",level:2},{value:"Start scan trigger",id:"start-scan-trigger",level:3},{value:"Release scan trigger",id:"release-scan-trigger",level:3},{value:"Register scan start listener",id:"register-scan-start-listener",level:3},{value:"Register stop scan listener",id:"register-stop-scan-listener",level:3},{value:"Register a scan timeout listener",id:"register-a-scan-timeout-listener",level:3},{value:"Register a scan read listener",id:"register-a-scan-read-listener",level:3},{value:"Disable all physical triggers",id:"disable-all-physical-triggers",level:3},{value:"Enable all physical triggers",id:"enable-all-physical-triggers",level:3},{value:"Disable keyboard wedge",id:"disable-keyboard-wedge",level:3},{value:"Enable keyboard wedge",id:"enable-keyboard-wedge",level:3}];function a(e){const s={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["While ",(0,r.jsx)(s.code,{children:"DXU Service"})," is enabled and running, DXU Android provides an HTTP endpoint that can be used by local applications to control the scanner. This is useful for web-based applications that need to be able to control the scanner."]}),"\n",(0,r.jsx)(s.h2,{id:"conventions",children:"Conventions"}),"\n",(0,r.jsx)(s.p,{children:"In the documentation below, the following conventions are used:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"dxuPort"})," is used to indicate the port on which DXU is running. The default value is ",(0,r.jsx)(s.code,{children:"8080"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Only ",(0,r.jsx)(s.code,{children:"localhost"})," connections are allowed, i.e. connections to ",(0,r.jsx)(s.code,{children:"http://127.0.0.1:dxuPort/scan"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["All APIs, unless otherwise noted, are ",(0,r.jsx)(s.code,{children:"HTTP GET"})," methods."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"API responses return no content unless otherwise indicated."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"apis",children:"APIs"}),"\n",(0,r.jsx)(s.h3,{id:"start-scan-trigger",children:"Start scan trigger"}),"\n",(0,r.jsx)(s.p,{children:"Causes the device's scanner to turn on and scan a barcode."}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"URI"}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.code,{children:"/scan?action=start_trigger"})})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Optional Query Parameters"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"timeout=[integer]"})," where ",(0,r.jsx)(s.code,{children:"timeout"})," is the number of milliseconds delay before the barcode scan attempt times out. Default value is ",(0,r.jsx)(s.code,{children:"3000"})," (3 seconds)."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Success Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"200 OK"})," when the scanner could be turned on."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Error Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"500 INTERNAL SERVER ERROR"})," when the scanner could not be turned on."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Available since"})}),(0,r.jsx)(s.td,{children:"DXU Agent 1.0"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"release-scan-trigger",children:"Release scan trigger"}),"\n",(0,r.jsx)(s.p,{children:"Causes the device's scanner to turn off and stop any barcode scan attempt in progress."}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"URI"}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.code,{children:"/scan?action=stop_trigger"})})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Success Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"200 OK"})," when the scanner could be turned off."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Error Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"500 INTERNAL SERVER ERROR"})," when the scanner could not be turned off."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Available since"})}),(0,r.jsx)(s.td,{children:"DXU Agent 1.0"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"register-scan-start-listener",children:"Register scan start listener"}),"\n",(0,r.jsx)(s.p,{children:"Register a scan start listener to be notified when a scan started event is triggered."}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"URI"}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.code,{children:"/scan?action=start_listener"})})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Success Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"200 OK"})," when the listener could be registered"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Error Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"500 INTERNAL SERVER ERROR"})," when the listener could not be registered"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Available since"})}),(0,r.jsx)(s.td,{children:"DXU Agent 1.0"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"register-stop-scan-listener",children:"Register stop scan listener"}),"\n",(0,r.jsx)(s.p,{children:"Register a scan stop listener to be notified when a scan stopped event is triggered."}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"URI"}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.code,{children:"/scan?action=stop_listener"})})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Success Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"200 OK"})," when the listener could be registered"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Error Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"500 INTERNAL SERVER ERROR"})," when the listener could not be registered"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Available since"})}),(0,r.jsx)(s.td,{children:"DXU Agent 1.0"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"register-a-scan-timeout-listener",children:"Register a scan timeout listener"}),"\n",(0,r.jsx)(s.p,{children:"Register a scan timeout listener to be notified when a scan timeout event is triggered."}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"URI"}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.code,{children:"/scan?action=timeout_listener"})})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Success Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"200 OK"})," when the listener could be registered"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Error Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"500 INTERNAL SERVER ERROR"})," when the listener could not be registered"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Available since"})}),(0,r.jsx)(s.td,{children:"DXU Agent 1.0"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"register-a-scan-read-listener",children:"Register a scan read listener"}),"\n",(0,r.jsx)(s.p,{children:"Register a scan read listener to be notified when a read event is triggered and received data is ready"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"URI"}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.code,{children:"/scan?action=read_listener"})})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Optional Query Parameters"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"output=[value]"})," where ",(0,r.jsx)(s.code,{children:"output"})," specifies the format in which the barcode data should be returned. The default value is ",(0,r.jsx)(s.code,{children:"text"}),". Valid values are ",(0,r.jsx)(s.code,{children:"text"}),", ",(0,r.jsx)(s.code,{children:"json"})," and ",(0,r.jsx)(s.code,{children:"xml"}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Success Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"200 OK"})," when data is available. Data is returned in the format specified using the ",(0,r.jsx)(s.code,{children:"output"})," parameter. ",(0,r.jsx)("br",{}),(0,r.jsx)("br",{})," ",(0,r.jsx)(s.strong,{children:"text example:"}),(0,r.jsx)("br",{}),(0,r.jsx)(s.code,{children:"353309092150281"})," ",(0,r.jsx)("br",{}),(0,r.jsx)("br",{})," ",(0,r.jsx)(s.strong,{children:"json example:"}),(0,r.jsx)("br",{}),'{"codeID":7,"dataAsText":"353309092150281\\n","rawData":[51,53,51,51,48,57,48,57,50,49,53,48,50,56,49]}',(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)(s.strong,{children:"xml example:"}),(0,r.jsx)("br",{})," <com.datalogic.decode.Barcode>",(0,r.jsx)("br",{}),"<codeID>7</codeID>",(0,r.jsx)("br",{}),"  <dataAsText>353309092150281 </dataAsText>",(0,r.jsx)("br",{})," <rawData>MzUzMzA5MDkyMTUwMjgx</rawData>",(0,r.jsx)("br",{}),"</com.datalogic.decode.Barcode>",(0,r.jsx)("br",{}),(0,r.jsx)("br",{})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Error Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"500 INTERNAL SERVER ERROR"})," when the data could not be retrieved."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Available since"})}),(0,r.jsx)(s.td,{children:"DXU Agent 1.0"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"disable-all-physical-triggers",children:"Disable all physical triggers"}),"\n",(0,r.jsx)(s.p,{children:"Use to disable all physical triggers on the device."}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"URI"}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.code,{children:"/scan?action=disable_all_triggers"})})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Success Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"200 OK"})," when the physical triggers were successfully disabled"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Error Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"500 INTERNAL SERVER ERROR"})," when the physical triggers couldn't be disabled"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Available since"})}),(0,r.jsx)(s.td,{children:"DXU Agent 1.29"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"enable-all-physical-triggers",children:"Enable all physical triggers"}),"\n",(0,r.jsx)(s.p,{children:"Use to enable all physical triggers on the device."}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"URI"}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.code,{children:"/scan?action=enable_all_triggers"})})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Success Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"200 OK"})," when the physical triggers were successfully enabled"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Error Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"500 INTERNAL SERVER ERROR"})," when the physical triggers couldn't be enabled"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Available since"})}),(0,r.jsx)(s.td,{children:"DXU Agent 1.29"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"disable-keyboard-wedge",children:"Disable keyboard wedge"}),"\n",(0,r.jsx)(s.p,{children:"Use to disable the keyboard wedge feature."}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"URI"}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.code,{children:"/scan?action=disable_keyboardWedge"})})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Success Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"200 OK"})," when keyboard wedge was successfully disabled"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Error Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"500 INTERNAL SERVER ERROR"})," when keyboard wedge couldn't be disabled"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Available since"})}),(0,r.jsx)(s.td,{children:"DXU Agent 1.29"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"enable-keyboard-wedge",children:"Enable keyboard wedge"}),"\n",(0,r.jsx)(s.p,{children:"Use to enable the keyboard wedge feature."}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"URI"}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.code,{children:"/scan?action=enable_keyboardWedge"})})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Success Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"200 OK"})," when keyboard wedge was successfully enabled"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Error Response"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"500 INTERNAL SERVER ERROR"})," when keyboard wedge couldn't be enabled"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Available since"})}),(0,r.jsx)(s.td,{children:"DXU Agent 1.29"})]})]})]})]})}function o(e={}){const{wrapper:s}={...(0,d.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>l,a:()=>i});var r=n(67294);const d={},t=r.createContext(d);function i(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);