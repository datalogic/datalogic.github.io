"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[47466],{26246:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var t=n(85893),r=n(11151),o=n(74866),i=n(85162);const l={id:"faq",title:"Frequently Asked Questions"},c=void 0,s={id:"android/faq",title:"Frequently Asked Questions",description:"Why am I not receiving intents broadcasted by IntentWedge?",source:"@site/docs/android/faq.mdx",sourceDirName:"android",slug:"/android/faq",permalink:"/android/faq",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"faq",title:"Frequently Asked Questions"},sidebar:"AndroidStudioSDK",previous:{title:"Overview",permalink:"/android/overview"},next:{title:"Sample Apps",permalink:"/android/samples"}},d={},u=[{value:"Why am I not receiving intents broadcasted by IntentWedge?",id:"why-am-i-not-receiving-intents-broadcasted-by-intentwedge",level:2},{value:"Is the Datalogic SDK compatible with ProGuard obfuscation?",id:"is-the-datalogic-sdk-compatible-with-proguard-obfuscation",level:2},{value:"How can I receive barcode data in my app?",id:"how-can-i-receive-barcode-data-in-my-app",level:2},{value:"How can I configure Decoder properties?",id:"how-can-i-configure-decoder-properties",level:2},{value:"How can I retrieve device information and control other device features?",id:"how-can-i-retrieve-device-information-and-control-other-device-features",level:2},{value:"Info",id:"info",level:3},{value:"Power",id:"power",level:3},{value:"Location",id:"location",level:3},{value:"NFC",id:"nfc",level:3},{value:"LEDs",id:"leds",level:3},{value:"Touch",id:"touch",level:3},{value:"Sleep and Wakeup",id:"sleep-and-wakeup",level:3},{value:"Reset",id:"reset",level:3}];function h(e){const a={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h2,{id:"why-am-i-not-receiving-intents-broadcasted-by-intentwedge",children:"Why am I not receiving intents broadcasted by IntentWedge?"}),"\n",(0,t.jsxs)(a.p,{children:["You are likely using an implicit broadcast. Google introduced several limitations regarding implicit broadcasts in Android 8 in order to improve dispatching performance. According to the ",(0,t.jsx)(a.a,{href:"https://developer.android.com/about/versions/oreo/background#broadcasts",children:"Android documentation"}),":"]}),"\n",(0,t.jsxs)(a.blockquote,{children:["\n",(0,t.jsx)(a.p,{children:"Android 8.0 (API level 26) makes these limitations more stringent."}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:"Apps that target Android 8.0 or higher can no longer register broadcast receivers for implicit broadcasts in their manifest. An implicit broadcast is a broadcast that does not target that app specifically. For example, ACTION_PACKAGE_REPLACED is an implicit broadcast, since it is sent to all registered listeners, letting them know that some package on the device was replaced. However, ACTION_MY_PACKAGE_REPLACED is not an implicit broadcast, since it is sent only to the app whose package was replaced, no matter how many other apps have registered listeners for that broadcast."}),"\n",(0,t.jsx)(a.li,{children:"Apps can continue to register for explicit broadcasts in their manifests."}),"\n",(0,t.jsx)(a.li,{children:"Apps can use Context.registerReceiver() at runtime to register a receiver for any broadcast, whether implicit or explicit."}),"\n",(0,t.jsx)(a.li,{children:"Broadcasts that require a signature permission are exempted from this restriction, since these broadcasts are only sent to apps that are signed with the same certificate, not to all the apps on the device."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(a.p,{children:"So, if your app registers itself to receive the intent used by IntentWedge in the Manifest, this approach works properly until Android 7. But, if the app follows the new Google guidelines regarding broadcast limitations introduced in Android 8, that is to register the App to receive intents at runtime with the Context.registerReceiver() call, this feature will work as expected for all Android versions."}),"\n",(0,t.jsx)(a.h2,{id:"is-the-datalogic-sdk-compatible-with-proguard-obfuscation",children:"Is the Datalogic SDK compatible with ProGuard obfuscation?"}),"\n",(0,t.jsxs)(a.p,{children:["Yes. However, in order to ensure your app builds correctly while using ",(0,t.jsx)(a.a,{href:"https://developer.android.com/studio/build/shrink-code",children:"ProGuard obfuscation"}),", you will need to ",(0,t.jsx)(a.a,{href:"https://developer.android.com/studio/build/shrink-code#keep-code",children:"edit your ProGuard rules file"}),". Add the following rules to ensure R8 includes all the code it needs to correctly use the Datalogic SDK:"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:"-keep class com.datalogic.cradle.** { *; }\n-keep class com.datalogic.decode.** { *; }\n-keep class com.datalogic.device.** { *; }\n-keep class com.datalogic.extension.** { *; }\n-keep class com.datalogic.softspot.** { *; }\n"})}),"\n",(0,t.jsx)(a.h2,{id:"how-can-i-receive-barcode-data-in-my-app",children:"How can I receive barcode data in my app?"}),"\n",(0,t.jsxs)(a.p,{children:["Register a ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/decode/ReadListener.html",children:"ReadListener"})," to receive read events on successful barcode reads:"]}),"\n",(0,t.jsxs)(o.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,t.jsx)(i.Z,{value:"kotlin",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"override fun onResume() {\n  super.onResume()\n  try {\n    if (decoder == null) {\n      decoder = BarcodeManager()\n      listener = ReadListener { decodeResult ->\n        mBarcodeText.text = decodeResult.text\n      }\n    }\n    decoder!!.addReadListener(listener)\n\n  } catch (e : DecodeException) {\n      e.printStackTrace()\n  }\n}\n"})})}),(0,t.jsx)(i.Z,{value:"java",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"@Override\nprotected void onResume() {\n  super.onResume();\n  try {\n    if (decoder == null) {\n      decoder = new BarcodeManager();\n      listener = new ReadListener() {\n        @Override\n        public void onRead(DecodeResult decodeResult) {\n          mBarcodeText.setText(decodeResult.getText());\n        }\n      };\n      decoder.addReadListener(listener);\n    }\n  } catch (DecodeException e) {\n      e.printStackTrace();\n  }\n}\n"})})})]}),"\n",(0,t.jsxs)(a.p,{children:["Unregister the ReadListener in your ",(0,t.jsx)(a.code,{children:"Activity.onPause()"}),":"]}),"\n",(0,t.jsxs)(o.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,t.jsx)(i.Z,{value:"kotlin",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"override fun onPause() {\n  super.onPause()\n\n  if (decoder != null) {\n    try {\n      decoder!!.removeReadListener(listener)\n      decoder = null\n    } catch (e: Exception) {\n      e.printStackTrace()\n    }\n  }\n}\n"})})}),(0,t.jsx)(i.Z,{value:"java",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"@Override\nprotected void onPause() {\n  super.onPause();\n  if (decoder != null) {\n    try {\n      decoder.removeReadListener(listener);\n      decoder = null;\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n}\n"})})})]}),"\n",(0,t.jsxs)(a.p,{children:["The actual barcode scanning is started via any physical scan trigger on the device. Though to start scanning when a button on the application is pressed,you need to call ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/decode/BarcodeManager.html#startDecode(int)",children:"BarcodeManager.startDecode()"}),"."]}),"\n",(0,t.jsx)(a.admonition,{type:"tip",children:(0,t.jsxs)(a.p,{children:["Take a look at the ",(0,t.jsx)(a.a,{href:"https://github.com/datalogic/android-samples-astudio/tree/master/Kotlin/DecodeListener",children:"Kotlin"})," and ",(0,t.jsx)(a.a,{href:"https://github.com/datalogic/android-samples-astudio/tree/master/Java/DecodeListener",children:"Java"})," DecodeListener examples to see this in action."]})}),"\n",(0,t.jsx)(a.h2,{id:"how-can-i-configure-decoder-properties",children:"How can I configure Decoder properties?"}),"\n",(0,t.jsxs)(a.p,{children:["To configure the decoder properties, you need to instantiate ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/decode/BarcodeManager.html",children:"BarcodeManager"})," and get a ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/decode/configuration/ScannerProperties.html",children:"ScannerProperties"})," reference."]}),"\n",(0,t.jsxs)(o.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,t.jsx)(i.Z,{value:"kotlin",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"var manager: BarcodeManager? = null\nvar configuration: ScannerProperties? = null\n\ntry {\n    manager = BarcodeManager()\n} catch (e: DecodeException) {\n    e.printStackTrace()\n}\n\nconfiguration = ScannerProperties.edit(manager)\n"})})}),(0,t.jsx)(i.Z,{value:"java",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"BarcodeManager manager = null;\nScannerProperties configuration = null;\n\ntry {\n    manager = new BarcodeManager();\n} catch (DecodeException e) {\n    e.printStackTrace();\n}\nconfiguration = ScannerProperties.edit(manager);\n"})})})]}),"\n",(0,t.jsxs)(a.p,{children:["Properties are organized hierarchically. Each property has the method ",(0,t.jsx)(a.code,{children:"set"})," that requires a different argument depending on the property type (i.e.: int, boolean, String, etc...):"]}),"\n",(0,t.jsxs)(o.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,t.jsx)(i.Z,{value:"kotlin",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"configuration = ScannerProperties.edit(manager)\n\nconfiguration!!.code39.enable.set(true);\nconfiguration!!.code39.enableChecksum.set(false);\nconfiguration!!.code39.fullAscii.set(true);\nconfiguration!!.code39.Length1.set(20);\nconfiguration!!.code39.userID.set('x');\n\nif (configuration!!.qrCode.isSupported()) {\n    configuration!!.qrCode.enable.set(false);\n}\n"})})}),(0,t.jsx)(i.Z,{value:"java",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"configuration.code39.enable.set(true);\nconfiguration.code39.enableChecksum.set(false);\nconfiguration.code39.fullAscii.set(true);\nconfiguration.code39.Length1.set(20);\nconfiguration.code39.userID.set('x');\n\nif (configuration.qrCode.isSupported()) {\n    configuration.qrCode.enable.set(false);\n}\n"})})})]}),"\n",(0,t.jsxs)(a.p,{children:["For the configuration to be actually applied, you must call the method ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/decode/configuration/ScannerProperties.html#store",children:"ScannerProperties.store"}),"."]}),"\n",(0,t.jsxs)(o.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,t.jsx)(i.Z,{value:"kotlin",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"val errorCode = configuration!!.store(manager, true)\n"})})}),(0,t.jsx)(i.Z,{value:"java",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"try {\n    configuration.store(manager, true);\n} catch (ConfigException e) {\n    e.printStackTrace();\n    return;\n}\n"})})})]}),"\n",(0,t.jsx)(a.admonition,{type:"tip",children:(0,t.jsxs)(a.p,{children:["Take a look at the ",(0,t.jsx)(a.a,{href:"https://github.com/datalogic/android-samples-astudio/tree/master/Kotlin/DecodeConfigSampleAPI",children:"Kotlin"})," and ",(0,t.jsx)(a.a,{href:"https://github.com/datalogic/android-samples-astudio/tree/master/Java/DecodeConfigSampleAPI",children:"Java"})," DecodeConfigSampleAPI examples to see this in action."]})}),"\n",(0,t.jsx)(a.h2,{id:"how-can-i-retrieve-device-information-and-control-other-device-features",children:"How can I retrieve device information and control other device features?"}),"\n",(0,t.jsx)(a.p,{children:"The Datalogic Android SDK provides APIs for many useful operations that can't be done using the standard AOSP SDK."}),"\n",(0,t.jsx)(a.h3,{id:"info",children:"Info"}),"\n",(0,t.jsxs)(a.p,{children:["Datalogic SDK provides advanced information about the device in the ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/info/SYSTEM.html",children:"SYSTEM"})," class, which exposes Wi-Fi type, keyboard type and others as static members. Example usage:"]}),"\n",(0,t.jsxs)(o.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,t.jsx)(i.Z,{value:"kotlin",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"com.datalogic.device.info.SYSTEM.SDK_VERSION_INT\n"})})}),(0,t.jsx)(i.Z,{value:"java",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"com.datalogic.device.info.SYSTEM.SDK_VERSION_INT;\n"})})})]}),"\n",(0,t.jsx)(a.h3,{id:"power",children:"Power"}),"\n",(0,t.jsxs)(a.p,{children:["To get information about the battery, Android broadcasts the ",(0,t.jsx)(a.code,{children:"Intent"})," ",(0,t.jsx)(a.a,{href:"https://developer.android.com/reference/android/content/Intent.html#ACTION_BATTERY_CHANGED",children:"Intent.ACTION_BATTERY_CHANGED()"})," which carries information in its extra properties. The intent is fired every time the status of the battery changes. Once  you register a receiver, notice that this particular behavior happens because the battery intent is a STICKY one: ",(0,t.jsx)(a.a,{href:"https://developer.android.com/reference/android/content/Context.html#sendStickyBroadcast",children:"Content.sendStickyBroadcast()"}),"."]}),"\n",(0,t.jsxs)(o.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,t.jsx)(i.Z,{value:"kotlin",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"var currentBatteryStatus: Intent? =\n  registerReceiver(null, IntentFilter(\n        Intent.ACTION_BATTERY_CHANGED)\n  )\n"})})}),(0,t.jsx)(i.Z,{value:"java",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"Intent currentBatteryStatus =\n  registerReceiver(null, new IntentFilter(\n    Intent.ACTION_BATTERY_CHANGED)\n  );\n"})})})]}),"\n",(0,t.jsx)(a.h3,{id:"location",children:"Location"}),"\n",(0,t.jsxs)(a.p,{children:["The standard Android SDK does not allow toggling of the Location services (GPS, network, etc...) thus an application must ask the user to do it manually. Datalogic SDK overcomes this limitation by providing the ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/location/LocationManager.html",children:"LocationManager"})," class, which there is an example of below:"]}),"\n",(0,t.jsxs)(o.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,t.jsx)(i.Z,{value:"kotlin",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"try {\n  val loc: LocationManager? = LocationManager()\n  loc!!.setLocationMode(if (enable) LocationMode.SENSORS_AND_NETWORK else LocationMode.OFF)\n} catch (e1: DeviceException) {\n  e.printStackTrace()\n}\n"})})}),(0,t.jsx)(i.Z,{value:"java",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"com.datalogic.device.location.LocationManager loc = null;\ntry {\n  loc = new com.datalogic.device.location.LocationManager();\n  loc.setLocationMode(enable ? LocationMode.SENSORS_AND_NETWORK : LocationMode.OFF);\n} catch (DeviceException e) {\n  e.printStackTrace();\n}\n"})})})]}),"\n",(0,t.jsx)(a.h3,{id:"nfc",children:"NFC"}),"\n",(0,t.jsxs)(a.p,{children:["Standard Android SDK doesn't allow to turn on or off the NFC adapter, thus an application must ask to the user to manually do it. Datalogic SDK overcomes this limit providing the ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/nfc/NfcManager.html",children:"NfcManager"})," class."]}),"\n",(0,t.jsxs)(o.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,t.jsx)(i.Z,{value:"kotlin",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:'val error = com.datalogic.device.nfc.NfcManager().enableNfcAdapter(enable)\nif (error != DeviceException.SUCCESS) {\n  Log.e(javaClass.name, "Error while setting NFC", ErrorManager.getLastError())\n}\n'})})}),(0,t.jsx)(i.Z,{value:"java",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:'int error = new com.datalogic.device.nfc.NfcManager().enableNfcAdapter(enable);\nif(error != DeviceException.SUCCESS) {\n  Log.e(getClass().getName(), "Error while setting NFC", ErrorManager.getLastError());\n}\n'})})})]}),"\n",(0,t.jsx)(a.h3,{id:"leds",children:"LEDs"}),"\n",(0,t.jsxs)(a.p,{children:["Datalogic SDK allows one to control LEDs on the device. The standard Android APIs for controlling the notification LED via the notifications system still works, though you are limited to 1 LED. Datalogic devices may have more LEDs, and it is easier to control them using the ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/notification/LedManager.html",children:"LedManager"})," than the standard API."]}),"\n",(0,t.jsxs)(o.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,t.jsx)(i.Z,{value:"kotlin",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"LedManager led = LedManager();\nled.blinkLed(Led.LED_GREEN_SPOT, 1, 500, 500)\n"})})}),(0,t.jsx)(i.Z,{value:"java",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"LedManager led = new LedManager();\nled.blinkLed(Led.LED_GREEN_SPOT, 1, 500, 500);\n"})})})]}),"\n",(0,t.jsx)(a.admonition,{type:"note",children:(0,t.jsx)(a.p,{children:"Please notice that not all LEDs on a device can be freely controlled by a user application, as some are reserved to the system."})}),"\n",(0,t.jsx)(a.h3,{id:"touch",children:"Touch"}),"\n",(0,t.jsxs)(a.p,{children:["The ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/input/TouchManager.html",children:"TouchManager"})," class can be used to lock the touchscreen."]}),"\n",(0,t.jsxs)(o.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,t.jsx)(i.Z,{value:"kotlin",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"val tm = TouchManager()\ntm.lockInput(true)\nThread.sleep(2000)\ntm.lockInput(false)\n"})})}),(0,t.jsx)(i.Z,{value:"java",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"TouchManager tm = new TouchManager();\ntm.lockInput(true);\nThread.sleep(2000);\ntm.lockInput(false);\n"})})})]}),"\n",(0,t.jsx)(a.h3,{id:"sleep-and-wakeup",children:"Sleep and Wakeup"}),"\n",(0,t.jsxs)(a.p,{children:["The ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/power/PowerManager.html",children:"PowerManager"})," class allows to configure the screen off timeout and the wakeup sources of the device."]}),"\n",(0,t.jsxs)(a.p,{children:["The ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/power/SuspendTimeout.html",children:"SuspendTimeout"})," can be set with a condition: the device running on battery or the device plugged to a power source, the function ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/power/PowerManager.html#setSuspendTimeout(com.datalogic.device.power.SuspendTimeout,%20boolean)",children:"PowerManager.setSuspendTimeout()"})," has a boolean argument for it."]}),"\n",(0,t.jsxs)(o.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,t.jsx)(i.Z,{value:"kotlin",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"val pm = PowerManager()\n\npm.setSuspendTimeout(SuspendTimeout.MINUTES_5, false) // battery\npm.setSuspendTimeout(SuspendTimeout.NEVER, true) // ext power\n"})})}),(0,t.jsx)(i.Z,{value:"java",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"PowerManager pm = new PowerManager();\n\npm.setSuspendTimeout(SuspendTimeout.MINUTES_5, false); // battery\npm.setSuspendTimeout(SuspendTimeout.NEVER, true); // ext power\n"})})})]}),"\n",(0,t.jsxs)(a.p,{children:["Please notice that not all the ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/power/WakeupSource.html",children:"WakeupSource"}),"s\navailable in the SDK are supported by a device, thus is better to check for the support before enabling/disabling them."]}),"\n",(0,t.jsxs)(o.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,t.jsx)(i.Z,{value:"kotlin",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"if (pm.isWakeupSupported(WakeupSource.TRIG_LEFT) &&\n    !pm.isWakeupActive(WakeupSource.TRIG_LEFT)) {\n  pm.activateWakeup(WakeupSource.TRIG_LEFT)\n}\n"})})}),(0,t.jsx)(i.Z,{value:"java",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"if (pm.isWakeupSupported(WakeupSource.TRIG_LEFT) &&\n      !pm.isWakeupActive(WakeupSource.TRIG_LEFT)) {\n  pm.activateWakeup(WakeupSource.TRIG_LEFT);\n}\n"})})})]}),"\n",(0,t.jsx)(a.h3,{id:"reset",children:"Reset"}),"\n",(0,t.jsxs)(a.p,{children:["With the ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/power/PowerManager.html",children:"PowerManager"})," class it is possible to perform several type of resets and reboot of the device. ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/BootType.html#ENTERPRISE_RESET",children:"BootType.ENTERPRISE_RESET"})," and ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/BootType.html#FACTORY_RESET",children:"BootType.FACTORY_RESET"})," reset types clear the configuration of the device setting it to a custom one or to the out-of-the-box one respectively, while ",(0,t.jsx)(a.a,{href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/BootType.html#RESET",children:"BootType.RESET"})," is a software reboot of the device."]}),"\n",(0,t.jsx)(a.admonition,{type:"tip",children:(0,t.jsxs)(a.p,{children:["Take a look at the ",(0,t.jsx)(a.a,{href:"https://github.com/datalogic/android-samples-astudio/tree/master/Kotlin/DeviceSampleAPI",children:"Kotlin"})," and ",(0,t.jsx)(a.a,{href:"https://github.com/datalogic/android-samples-astudio/tree/master/Java/DeviceSampleAPI",children:"Java"})," DeviceSampleAPI examples to see this in action."]})})]})}function p(e={}){const{wrapper:a}={...(0,r.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},85162:(e,a,n)=>{n.d(a,{Z:()=>i});n(67294);var t=n(36905);const r={tabItem:"tabItem_Ymn6"};var o=n(85893);function i(e){let{children:a,hidden:n,className:i}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,t.Z)(r.tabItem,i),hidden:n,children:a})}},74866:(e,a,n)=>{n.d(a,{Z:()=>S});var t=n(67294),r=n(36905),o=n(12466),i=n(16550),l=n(20469),c=n(91980),s=n(67392),d=n(50012);function u(e){var a,n;return null!=(a=null==(n=t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?a:[]}function h(e){const{values:a,children:n}=e;return(0,t.useMemo)((()=>{const e=null!=a?a:function(e){return u(e).map((e=>{let{props:{value:a,label:n,attributes:t,default:r}}=e;return{value:a,label:n,attributes:t,default:r}}))}(n);return function(e){const a=(0,s.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error('Docusaurus error: Duplicate values "'+a.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[a,n])}function p(e){let{value:a,tabValues:n}=e;return n.some((e=>e.value===a))}function g(e){let{queryString:a=!1,groupId:n}=e;const r=(0,i.k6)(),o=function(e){let{queryString:a=!1,groupId:n}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:a,groupId:n});return[(0,c._X)(o),(0,t.useCallback)((e=>{if(!o)return;const a=new URLSearchParams(r.location.search);a.set(o,e),r.replace({...r.location,search:a.toString()})}),[o,r])]}function v(e){const{defaultValue:a,queryString:n=!1,groupId:r}=e,o=h(e),[i,c]=(0,t.useState)((()=>function(e){var a;let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+t.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const r=null!=(a=t.find((e=>e.default)))?a:t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:a,tabValues:o}))),[s,u]=g({queryString:n,groupId:r}),[v,m]=function(e){let{groupId:a}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(a),[r,o]=(0,d.Nk)(n);return[r,(0,t.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),f=(()=>{const e=null!=s?s:v;return p({value:e,tabValues:o})?e:null})();(0,l.Z)((()=>{f&&c(f)}),[f]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error("Can't select invalid tab value="+e);c(e),u(e),m(e)}),[u,m,o]),tabValues:o}}var m=n(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=n(85893);function x(e){let{className:a,block:n,selectedValue:t,selectValue:i,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:s}=(0,o.o5)(),d=e=>{const a=e.currentTarget,n=c.indexOf(a),r=l[n].value;r!==t&&(s(a),i(r))},u=e=>{var a;let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var t;const a=c.indexOf(e.currentTarget)+1;n=null!=(t=c[a])?t:c[0];break}case"ArrowLeft":{var r;const a=c.indexOf(e.currentTarget)-1;n=null!=(r=c[a])?r:c[c.length-1];break}}null==(a=n)||a.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},a),children:l.map((e=>{let{value:a,label:n,attributes:o}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:t===a?0:-1,"aria-selected":t===a,ref:e=>c.push(e),onKeyDown:u,onClick:d,...o,className:(0,r.Z)("tabs__item",f.tabItem,null==o?void 0:o.className,{"tabs__item--active":t===a}),children:null!=n?n:a},a)}))})}function b(e){let{lazy:a,children:n,selectedValue:r}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(a){const e=o.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:o.map(((e,a)=>(0,t.cloneElement)(e,{key:a,hidden:e.props.value!==r})))})}function k(e){const a=v(e);return(0,j.jsxs)("div",{className:(0,r.Z)("tabs-container",f.tabList),children:[(0,j.jsx)(x,{...a,...e}),(0,j.jsx)(b,{...a,...e})]})}function S(e){const a=(0,m.Z)();return(0,j.jsx)(k,{...e,children:u(e.children)},String(a))}},11151:(e,a,n)=>{n.d(a,{Z:()=>l,a:()=>i});var t=n(67294);const r={},o=t.createContext(r);function i(e){const a=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:a},e.children)}}}]);