"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[369],{3905:(t,e,a)=>{a.d(e,{Zo:()=>s,kt:()=>N});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),p=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=p(t.components);return n.createElement(o.Provider,{value:e},t.children)},m="mdxType",g={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,s=d(t,["components","mdxType","originalType","parentName"]),m=p(a),k=r,N=m["".concat(o,".").concat(k)]||m[k]||g[k]||l;return a?n.createElement(N,i(i({ref:e},s),{},{components:a})):n.createElement(N,i({ref:e},s))}));function N(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=k;var d={};for(var o in e)hasOwnProperty.call(e,o)&&(d[o]=e[o]);d.originalType=t,d[m]="string"==typeof t?t:r,i[1]=d;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},14354:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const l={id:"registrysettings",title:"OPOS Registry Settings",sidebar_label:"OPOS Registry Settings"},i=void 0,d={unversionedId:"opos/configref/registrysettings",id:"opos/configref/registrysettings",title:"OPOS Registry Settings",description:"Overview",source:"@site/docs/opos/configref/registrysettings.md",sourceDirName:"opos/configref",slug:"/opos/configref/registrysettings",permalink:"/opos/configref/registrysettings",draft:!1,tags:[],version:"current",frontMatter:{id:"registrysettings",title:"OPOS Registry Settings",sidebar_label:"OPOS Registry Settings"},sidebar:"OPOS",previous:{title:"prf_parser.json",permalink:"/opos/configref/prfparserjson"},next:{title:"OPOS Properties Editor",permalink:"/opos/configref/propertieseditor"}},o={},p=[{value:"Overview",id:"overview",level:2},{value:"OPOS Global Service Settings",id:"opos-global-service-settings",level:2},{value:"OPOS Scanner Settings",id:"opos-scanner-settings",level:2},{value:"USB-OEM Scanner Settings",id:"usb-oem-scanner-settings",level:3},{value:"USB-COM Scanner Settings",id:"usb-com-scanner-settings",level:3},{value:"RS-232 Scanner Settings",id:"rs-232-scanner-settings",level:3},{value:"Single Cable RS-232 Scanner Settings",id:"single-cable-rs-232-scanner-settings",level:3},{value:"OPOS Scale Settings",id:"opos-scale-settings",level:2},{value:"USB-OEM Scale Settings",id:"usb-oem-scale-settings",level:3},{value:"RS-232 Scale Settings",id:"rs-232-scale-settings",level:3},{value:"Single Cable RS-232 Scale Settings",id:"single-cable-rs-232-scale-settings",level:3},{value:'ScanDataEqualsScanDataLabel explained<a name="scandata"></a>',id:"scandataequalsscandatalabel-explained",level:2}],s={toc:p},m="wrapper";function g(t){let{components:e,...a}=t;return(0,r.kt)(m,(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Registry settings affecting Datalogic OPOS reside under three separate keys. All entries to be discussed reside under the common subkey ",(0,r.kt)("inlineCode",{parentName:"p"},"HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node")," For simplicity, all values are define as ",(0,r.kt)("inlineCode",{parentName:"p"},"String Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Subkey"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Scope"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DATALOGIC\\DL_OPOS_Service"),(0,r.kt)("td",{parentName:"tr",align:"left"},"global")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"OLEforRetail\\ServiceOPOS\\SCANNER"),(0,r.kt)("td",{parentName:"tr",align:"left"},"specific to a scanner profile")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"OLEforRetail\\ServiceOPOS\\SCALE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"specific to a scale profile")))),(0,r.kt)("h2",{id:"opos-global-service-settings"},"OPOS Global Service Settings"),(0,r.kt)("p",null,"Registry settings affecting global behaviors reside under ",(0,r.kt)("em",{parentName:"p"},"HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\DATALOGIC\\DL_OPOS_Service")),(0,r.kt)("p",null,"The subkeys are presented in the following table in order of likely interest."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Subkey"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type (effective)"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"LogFile"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Determines the location and name of log files.",(0,r.kt)("br",null),'The string value has the form "folder\\file" where "folder" establishes the location and "file" establishes the root file name.',(0,r.kt)("br",null),"In this example ",(0,r.kt)("inlineCode",{parentName:"td"},"C:\\ProgramData\\Datalogic\\Logs\\OPOS_LOG_FILE_"),' the "file" is ',(0,r.kt)("inlineCode",{parentName:"td"},"OPOS_LOG_FILE_"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"TotalFiles"),(0,r.kt)("td",{parentName:"tr",align:"left"},"int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets the upper bound on the number of log files created before they start to be recycled (overwritten). The value is appended to the end of the log file name.",(0,r.kt)("br",null),"e.g. OPOS_LOG_FILE_1, OPOS_LOG_FILE_2, ...")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Error"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Controls output of ERROR_LOG statements to log files.",(0,r.kt)("br",null),"disable = 0, enable = 1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Event"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Controls output of EVENT_LOG statements to log files.",(0,r.kt)("br",null),"disable = 0, enable = 1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"gVar"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Controls output of VAR_LOG statements to log files.",(0,r.kt)("br",null),"disable = 0, enable = 1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Func"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Controls output of FUNC_LOG statements to log files. Essentially provides a trace of function calls, making for large log files.",(0,r.kt)("br",null),"disable = 0, enable = 1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"StatsFile"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Determines the location of PRF files (typically the same location used by ",(0,r.kt)("inlineCode",{parentName:"td"},"LogFile"),")")))),(0,r.kt)("h2",{id:"opos-scanner-settings"},"OPOS Scanner Settings"),(0,r.kt)("p",null,"Registry settings affecting scanner behaviors reside under\n",(0,r.kt)("em",{parentName:"p"},"HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\OLEforRetail\\ServiceOPOS\\SCANNER\\<profile",">")," where ",(0,r.kt)("em",{parentName:"p"},"<profile",">")," is one if the subkey names appearing under ",(0,r.kt)("em",{parentName:"p"},"SCANNER")," (e.g. USBScanner, RS232Scanner)."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Profile"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Interface"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"USBScanner"),(0,r.kt)("td",{parentName:"tr",align:"left"},"USB-OEM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Supports Fixed Retail Scanners")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"USBHHScanner"),(0,r.kt)("td",{parentName:"tr",align:"left"},"USB-OEM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Supports Handheld Scanners")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"RS232Imager"),(0,r.kt)("td",{parentName:"tr",align:"left"},"USB-COM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Supports both Fixed Retail Scanners and Handheld Scanners")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"RS232Scanner"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RS-232"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Supports both Fixed Retail Scanners and Handheld Scanners")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"SCRS232Scanner"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RS-232 Single Cable"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Supports Fixed Retail Scanners")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"TableScanner"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Same as USBScanner (historical)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"HandScanner"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Same as USBHHScanner (historical)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"QS6000"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Same as RS232Scanner (historical)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MagellanSC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Same as SCRS232Scanner (historical)")))),(0,r.kt)("p",null,"Every profile contains a setting whose name is ",(0,r.kt)("inlineCode",{parentName:"p"},"AbstractDevice")," and its associated string value (a guid) uniquely identifies the device interface. USB-OEM devices require and additional ",(0,r.kt)("inlineCode",{parentName:"p"},"Usage")," setting to differentiate Fixed Retail Scanners and Handheld Scanners during enumeration. You must ",(0,r.kt)("strong",{parentName:"p"},"never")," change the value of either of these settings."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," If you wish to create a profile having a custom name then you must either clone an existing (installed) profile or rename one."),(0,r.kt)("h3",{id:"usb-oem-scanner-settings"},"USB-OEM Scanner Settings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"String Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type (effective)"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"AbstractDevice"),(0,r.kt)("td",{parentName:"tr",align:"left"},"guid"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Do not modify"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BinaryConversion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = OPOS_BC_NONE",(0,r.kt)("br",null),"1 = OPOS_BC_NIBBLE",(0,r.kt)("br",null),"2 = OPOS_BC_DECIMAL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CheckIHSOnClaim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, OPOS will request Information, Health and Statistics from the scanner every time the scanner is claimed, and it will record the decoded responses in the log, .PRF and .MOF files. When enabled, will also allow reporting of Power Notifications when replugging the device cable.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CodePageValue"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A Windows codepage value, used when the value of ",(0,r.kt)("inlineCode",{parentName:"td"},"ConvertToCodePage")," is 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ConvertBCDtoASCII"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, label characters whose values are in the range ","[0..9]"," are converted to ","['0'..'9']")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ConvertToCodePage"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Controls ",(0,r.kt)("a",{parentName:"td",href:"/opos/configref/ecicodepagecsv"},"Extended Channel Interpretation"),(0,r.kt)("br",null),"0 = NO_CODE_PAGE_CONVERSION",(0,r.kt)("br",null),"1 = EXPLICIT_CODE_PAGE_CONVERSION (a legacy setting, not likely to be ever used).",(0,r.kt)("br",null),"2 = ECI_CODE_PAGE_CONVERSION")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DeviceNameOverride"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An alternate name to return when OPOS queries the string property ",(0,r.kt)("inlineCode",{parentName:"td"},"PIDX_DeviceName"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"FUDCDelaySecs"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Firmware Updating Device Creation Delay (seconds). Used by the DualTest application and not OPOS, per se.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"RMDataRecord"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"Applicable to USB-OEM Fixed Retail Scanners only. Much like ",(0,r.kt)("inlineCode",{parentName:"td"},"CheckIHSOnClaim"),", when enabled, OPOS will request additional remote management scanner/scale data. Said data will be recorded in the logs folder with a file name having the form <profile",">","_RMD.txt (e.g. USBScanner_RMD.txt)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ScanDataEqualsScanDataLabel"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"See ",(0,r.kt)("a",{parentName:"td",href:"#scandata"},"ScanDataEqualsScanDataLabel explained"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"UPCEANCheckDigitCalc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, OPOS calculates the barcode checksum as necessary and appends it to the end of the barcode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Usage"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Do not modify"))))),(0,r.kt)("h3",{id:"usb-com-scanner-settings"},"USB-COM Scanner Settings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"String Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type (effective)"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"AbstractDevice"),(0,r.kt)("td",{parentName:"tr",align:"left"},"guid"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Do not modify"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BinaryConversion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = OPOS_BC_NONE",(0,r.kt)("br",null),"1 = OPOS_BC_NIBBLE",(0,r.kt)("br",null),"2 = OPOS_BC_DECIMAL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CheckIHSOnClaim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, OPOS will request Information, Health and Statistics from the scanner every time the scanner is claimed, and it will record the decoded responses in the log, .PRF and .MOF files. When enabled, will also allow reporting of Power Notifications when replugging the device cable.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CodePageValue"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A Windows codepage value, used when the value of ",(0,r.kt)("inlineCode",{parentName:"td"},"ConvertToCodePage")," is 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ConvertBCDtoASCII"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, label characters whose values are in the range ","[0..9]"," are converted to ","['0'..'9']")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ConvertToCodePage"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Controls ",(0,r.kt)("a",{parentName:"td",href:"/opos/configref/ecicodepagecsv"},"Extended Channel Interpretation"),(0,r.kt)("br",null),"0 = NO_CODE_PAGE_CONVERSION",(0,r.kt)("br",null),"1 = EXPLICIT_CODE_PAGE_CONVERSION (a legacy setting, not likely to be ever used).",(0,r.kt)("br",null),"2 = ECI_CODE_PAGE_CONVERSION")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DeviceNameOverride"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An alternate name to return when OPOS queries the string property ",(0,r.kt)("inlineCode",{parentName:"td"},"PIDX_DeviceName"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"FUDCDelaySecs"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Firmware Updating Device Creation Delay (seconds). Used by the DualTest application and not OPOS, per se.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"IncludeCR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, includes the carriage return as the terminal character of the barcode data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Port"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},'The COM port at which to find the device (e.g. "COM1", sans the quotation characters).',(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"NOTE:")," You should seriously consider enabling ",(0,r.kt)("inlineCode",{parentName:"td"},"UseVirtualPort")," to avoid issues with Windows COM port assignment behavior. The ",(0,r.kt)("inlineCode",{parentName:"td"},"Port")," value is ignored when ",(0,r.kt)("inlineCode",{parentName:"td"},"UseVirtualPort")," is enabled.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ScanDataEqualsScanDataLabel"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"See ",(0,r.kt)("a",{parentName:"td",href:"#scandata"},"ScanDataEqualsScanDataLabel explained"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"TransmitUnknown"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, enqueues label data even when its symbology is identified to be SCAN_SDT_UNKNOWN.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"UPCEANCheckDigitCalc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, OPOS calculates the barcode checksum as necessary and appends it to the end of the barcode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"UseVirtualPort"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, OPOS will locate the USB-COM scanner regardless of it's assigned COM port number. This behavior is made possible by Datalogic's USB-COM driver.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"WarholParsing"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, decodes labels assuming European barcodes. Otherwise, decodes assuming USA barcodes.",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"NOTE:")," Both your scanner and OPOS must be properly configured for this work. For example, if you're scanning European labels, both your scanner and OPOS must be configured to process European labels.")))),(0,r.kt)("h3",{id:"rs-232-scanner-settings"},"RS-232 Scanner Settings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"String Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type (effective)"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"AbstractDevice"),(0,r.kt)("td",{parentName:"tr",align:"left"},"guid"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Do not modify"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BaudRate"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[","9600, 14400, 19200, 38400, 57600, 115200]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BinaryConversion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = OPOS_BC_NONE",(0,r.kt)("br",null),"1 = OPOS_BC_NIBBLE",(0,r.kt)("br",null),"2 = OPOS_BC_DECIMAL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CheckIHSOnClaim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, OPOS will request Information, Health and Statistics from the scanner every time the scanner is claimed, and it will record the decoded responses in the log, .PRF and .MOF files. When enabled, will also allow reporting of Power Notifications when replugging the device cable.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CodePageValue"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A Windows codepage value, used when the value of ",(0,r.kt)("inlineCode",{parentName:"td"},"ConvertToCodePage")," is 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ConvertBCDtoASCII"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, label characters whose values are in the range ","[0..9]"," are converted to ","['0'..'9']")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ConvertToCodePage"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Controls ",(0,r.kt)("a",{parentName:"td",href:"/opos/configref/ecicodepagecsv"},"Extended Channel Interpretation"),(0,r.kt)("br",null),"0 = NO_CODE_PAGE_CONVERSION",(0,r.kt)("br",null),"1 = EXPLICIT_CODE_PAGE_CONVERSION (a legacy setting, not likely to be ever used).",(0,r.kt)("br",null),"2 = ECI_CODE_PAGE_CONVERSION")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DataBits"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[","0, 7, 8]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DeviceNameOverride"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An alternate name to return when OPOS queries the string property ",(0,r.kt)("inlineCode",{parentName:"td"},"PIDX_DeviceName"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"FUDCDelaySecs"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Firmware Updating Device Creation Delay (seconds). Used by the DualTest application and not OPOS, per se.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"IncludeCR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, includes the carriage return as the terminal character of the barcode data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Parity"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[",'"None", "Even", "Odd"] (sans quotation characters)')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Port"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},'The COM port at which to find the device (e.g. "COM1", sans the quotation characters).')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"RTSControl"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ScanDataEqualsScanDataLabel"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"See ",(0,r.kt)("a",{parentName:"td",href:"#scandata"},"ScanDataEqualsScanDataLabel explained"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"StopBits"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[","1, 2].")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"UPCEANCheckDigitCalc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, OPOS calculates the barcode checksum as necessary and appends it to the end of the barcode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"WarholParsing"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, decodes labels assuming European barcodes. Otherwise, decodes assuming USA barcodes.",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"NOTE:")," Both your scanner and OPOS must be properly configured for this work. For example, if you're scanning European labels, both your scanner and OPOS must be configured to process European labels.")))),(0,r.kt)("h3",{id:"single-cable-rs-232-scanner-settings"},"Single Cable RS-232 Scanner Settings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"String Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type (effective)"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"AbstractDevice"),(0,r.kt)("td",{parentName:"tr",align:"left"},"guid"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Do not modify"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BaudRate"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[","9600, 14400, 19200, 38400, 57600, 115200]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BinaryConversion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = OPOS_BC_NONE",(0,r.kt)("br",null),"1 = OPOS_BC_NIBBLE",(0,r.kt)("br",null),"2 = OPOS_BC_DECIMAL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CheckIHSOnClaim"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, OPOS will request Information, Health and Statistics from the scanner every time the scanner is claimed, and it will record the decoded responses in the log, .PRF and .MOF files. When enabled, will also allow reporting of Power Notifications when replugging the device cable.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CodePageValue"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A Windows codepage value, used when the value of ",(0,r.kt)("inlineCode",{parentName:"td"},"ConvertToCodePage")," is 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ConvertBCDtoASCII"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, label characters whose values are in the range ","[0..9]"," are converted to ","['0'..'9']")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ConvertToCodePage"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Controls ",(0,r.kt)("a",{parentName:"td",href:"/opos/configref/ecicodepagecsv"},"Extended Channel Interpretation"),(0,r.kt)("br",null),"0 = NO_CODE_PAGE_CONVERSION",(0,r.kt)("br",null),"1 = EXPLICIT_CODE_PAGE_CONVERSION (a legacy setting, not likely to be ever used).",(0,r.kt)("br",null),"2 = ECI_CODE_PAGE_CONVERSION")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DataBits"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[","0, 7, 8]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DeviceNameOverride"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An alternate name to return when OPOS queries the string property ",(0,r.kt)("inlineCode",{parentName:"td"},"PIDX_DeviceName"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"FUDCDelaySecs"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Firmware Updating Device Creation Delay (seconds). Used by the DualTest application and not OPOS, per se.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"IncludeCR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, includes the carriage return as the terminal character of the barcode data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Parity"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[",'"None", "Even", "Odd"] (sans quotation characters)')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Port"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},'The COM port at which to find the device (e.g. "COM1", sans the quotation characters).')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"RTSControl"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ScanDataEqualsScanDataLabel"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"See ",(0,r.kt)("a",{parentName:"td",href:"#scandata"},"ScanDataEqualsScanDataLabel explained"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ServerTimeout"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A millisecond value applied when attempting to claim the scanner; associated with starting the background application ",(0,r.kt)("inlineCode",{parentName:"td"},"SingleCableSpliter.exe"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"StopBits"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[","1, 2].")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"UPCEANCheckDigitCalc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, OPOS calculates the barcode checksum as necessary and appends it to the end of the barcode.")))),(0,r.kt)("h2",{id:"opos-scale-settings"},"OPOS Scale Settings"),(0,r.kt)("p",null,"Registry settings affecting scanner behaviors reside under\n",(0,r.kt)("em",{parentName:"p"},"HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\OLEforRetail\\ServiceOPOS\\SCALE\\<profile",">")," where ",(0,r.kt)("em",{parentName:"p"},"<profile",">")," is one if the subkey names appearing under ",(0,r.kt)("em",{parentName:"p"},"SCALE")," (e.g. USBScale, RS232Scale)."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Profile"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Interface"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"USBScale"),(0,r.kt)("td",{parentName:"tr",align:"left"},"USB-OEM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Supports Fixed Retail Scale")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"RS232Scale"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RS-232"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Supports Fixed Retail Scale")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"SCRS232Scale"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RS-232 Single Cable"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Supports Fixed Retail Scale")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"TableScale"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Same as USBScale (historical)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MagellanSC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Same as SCRS232Scale (historical)")))),(0,r.kt)("p",null,"Every profile contains a setting whose name is ",(0,r.kt)("inlineCode",{parentName:"p"},"AbstractDevice")," and its associated string value (a guid) uniquely identifies the device interface. You must ",(0,r.kt)("strong",{parentName:"p"},"never")," change the value of this setting."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," If you wish to create a profile having a custom name then you must either clone an existing (installed) profile or rename one."),(0,r.kt)("h3",{id:"usb-oem-scale-settings"},"USB-OEM Scale Settings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"String Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type (effective)"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"AbstractDevice"),(0,r.kt)("td",{parentName:"tr",align:"left"},"guid"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Do not modify"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DeviceNameOverride"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An alternate name to return when OPOS queries the string property ",(0,r.kt)("inlineCode",{parentName:"td"},"PIDX_DeviceName"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"LiveWeightInterval"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A millisecond value controlling the polling rate at which the scale weight is requested.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Metric"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, weight is reported as kilograms. Otherwise, weight is reported as pounds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Usage"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Do not modify"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ZeroValid"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"Applied when calling ",(0,r.kt)("inlineCode",{parentName:"td"},"ReadWeight( )"),".",(0,r.kt)("br",null),"When disabled and ",(0,r.kt)("inlineCode",{parentName:"td"},"ResultCodeExtended")," is ",(0,r.kt)("em",{parentName:"td"},"SCAL_SUE_WEIGHT_ZERO"),", causes ",(0,r.kt)("inlineCode",{parentName:"td"},"ResultCode")," to be ",(0,r.kt)("em",{parentName:"td"},"OPOS_E_TIMEOUT"),".")))),(0,r.kt)("h3",{id:"rs-232-scale-settings"},"RS-232 Scale Settings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"String Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type (effective)"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"AbstractDevice"),(0,r.kt)("td",{parentName:"tr",align:"left"},"guid"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Do not modify"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BaudRate"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[","9600, 14400, 19200, 38400, 57600, 115200]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DataBits"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[","0, 7, 8]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DeviceNameOverride"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An alternate name to return when OPOS queries the string property ",(0,r.kt)("inlineCode",{parentName:"td"},"PIDX_DeviceName"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"LiveWeightInterval"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A millisecond value controlling the polling rate at which the scale weight is requested.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Metric"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, weight is reported as kilograms. Otherwise, weight is reported as pounds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Parity"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[",'"None", "Even", "Odd"] (sans quotation characters)')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Port"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},'The COM port at which to find the device (e.g. "COM1", sans the quotation characters).')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"RTSControl"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"StopBits"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[","1, 2].")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ZeroValid"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"Applied when calling ",(0,r.kt)("inlineCode",{parentName:"td"},"ReadWeight( )"),".",(0,r.kt)("br",null),"When disabled and ",(0,r.kt)("inlineCode",{parentName:"td"},"ResultCodeExtended")," is ",(0,r.kt)("em",{parentName:"td"},"SCAL_SUE_WEIGHT_ZERO"),", causes ",(0,r.kt)("inlineCode",{parentName:"td"},"ResultCode")," to be ",(0,r.kt)("em",{parentName:"td"},"OPOS_E_TIMEOUT"),".")))),(0,r.kt)("h3",{id:"single-cable-rs-232-scale-settings"},"Single Cable RS-232 Scale Settings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"String Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type (effective)"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"AbstractDevice"),(0,r.kt)("td",{parentName:"tr",align:"left"},"guid"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Do not modify"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BaudRate"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[","9600, 14400, 19200, 38400, 57600, 115200]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DataBits"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[","0, 7, 8]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DeviceNameOverride"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An alternate name to return when OPOS queries the string property ",(0,r.kt)("inlineCode",{parentName:"td"},"PIDX_DeviceName"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"LiveWeightInterval"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A millisecond value controlling the polling rate at which the scale weight is requested.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Metric"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"When enabled, weight is reported as kilograms. Otherwise, weight is reported as pounds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Parity"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[",'"None", "Even", "Odd"] (sans quotation characters)')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Port"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},'The COM port at which to find the device (e.g. "COM1", sans the quotation characters).')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"RTSControl"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ServerTimeout"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A millisecond value applied when attempting to claim the scale; associated with starting the background application ",(0,r.kt)("inlineCode",{parentName:"td"},"SingleCableSpliter.exe"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"StopBits"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be one of ","[","1, 2].")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ZeroValid"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 = disable, 1 = enable",(0,r.kt)("br",null),"Applied when calling ",(0,r.kt)("inlineCode",{parentName:"td"},"ReadWeight( )"),".",(0,r.kt)("br",null),"When disabled and ",(0,r.kt)("inlineCode",{parentName:"td"},"ResultCodeExtended")," is ",(0,r.kt)("em",{parentName:"td"},"SCAL_SUE_WEIGHT_ZERO"),", causes ",(0,r.kt)("inlineCode",{parentName:"td"},"ResultCode")," to be ",(0,r.kt)("em",{parentName:"td"},"OPOS_E_TIMEOUT"),".")))),(0,r.kt)("h2",{id:"scandataequalsscandatalabel-explained"},"ScanDataEqualsScanDataLabel explained",(0,r.kt)("a",{name:"scandata"})),(0,r.kt)("p",null,"The registry setting ",(0,r.kt)("inlineCode",{parentName:"p"},"ScanDataEqualsScanDataLabel")," is common to all scanner profiles and it controls the routing of scanned label data to the OPOS string properties ",(0,r.kt)("inlineCode",{parentName:"p"},"PIDXScan_ScanData")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"PIDXScan_ScanDataLabel"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ScanDataEqualsScanDataLabel")," was originally introduced solely to support legacy applications that used ",(0,r.kt)("inlineCode",{parentName:"p"},"PIDXScan_ScanData")," as their data source. These applications would obtain the data from ",(0,r.kt)("inlineCode",{parentName:"p"},"PIDXScan_ScanData")," and then perform their own label parsing. After considering user feedback, the decision was made to allow these applications to obtain parsed label data (i.e. ",(0,r.kt)("inlineCode",{parentName:"p"},"PIDXScan_ScanDataLabel"),") from ",(0,r.kt)("inlineCode",{parentName:"p"},"PIDXScan_ScanData"),"; this freed the user from having to maintain label parsing code. This feature paid dividends when Datalogic's OPOS started to support ",(0,r.kt)("a",{parentName:"p",href:"/opos/configref/ecicodepagecsv"},"Extended Channel Interpretation")),(0,r.kt)("p",null,"Finally, a very unusual use is addressed; ",(0,r.kt)("inlineCode",{parentName:"p"},"ScanDataEqualsScanDataLabel")," can also be set to swap the values (normally) associated with ",(0,r.kt)("inlineCode",{parentName:"p"},"PIDXScan_ScanData")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"PIDXScan_ScanDataLabel"),". Why POS software is written in this manner is not known, but it exists."),(0,r.kt)("p",null,"To summarize:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Subkey"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type (effective)"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ScanDataEqualsScanDataLabel"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1 = ScanData and ScanDataLabel are the same.",(0,r.kt)("br",null),"0 = ScanData and ScanDataLabel adhere to OPOS definitions.",(0,r.kt)("br",null),"-1 = the values of ScanData and ScanDataLabel are swapped.")))))}g.isMDXComponent=!0}}]);