"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[2837],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>u});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),p=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},d=function(t){var e=p(t.components);return n.createElement(o.Provider,{value:e},t.children)},g="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,o=t.parentName,d=s(t,["components","mdxType","originalType","parentName"]),g=p(a),c=r,u=g["".concat(o,".").concat(c)]||g[c]||m[c]||i;return a?n.createElement(u,l(l({ref:e},d),{},{components:a})):n.createElement(u,l({ref:e},d))}));function u(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,l=new Array(i);l[0]=c;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=t,s[g]="string"==typeof t?t:r,l[1]=s;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},61602:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={id:"mbeans",title:"Remote Management with JavaPOS using MBeans",sidebar_label:"MBeans"},l=void 0,s={unversionedId:"javapos/mbeans",id:"javapos/mbeans",title:"Remote Management with JavaPOS using MBeans",description:"Overview",source:"@site/docs/javapos/mbeans.md",sourceDirName:"javapos",slug:"/javapos/mbeans",permalink:"/javapos/mbeans",draft:!1,tags:[],version:"current",frontMatter:{id:"mbeans",title:"Remote Management with JavaPOS using MBeans",sidebar_label:"MBeans"},sidebar:"JavaPOS",previous:{title:"LiveWeightExample",permalink:"/javapos/develop/liveweightexample"}},o={},p=[{value:"Overview",id:"overview",level:2},{value:"Configuration",id:"configuration",level:2},{value:"System Properties",id:"system-properties",level:3},{value:"com.sun.management.jmxremote",id:"comsunmanagementjmxremote",level:4},{value:"JavaPOS Configuration",id:"javapos-configuration",level:3},{value:"dls.properties Settings",id:"dlsproperties-settings",level:4},{value:"GenerateStatisticsOnEveryClaim",id:"generatestatisticsoneveryclaim",level:5},{value:"jpos.xml Settings",id:"jposxml-settings",level:4},{value:"canAcceptStatisticsCmd Property",id:"canacceptstatisticscmd-property",level:5},{value:"sendIHSOnClaim Property",id:"sendihsonclaim-property",level:5},{value:"MBeansEnabled Property",id:"mbeansenabled-property",level:5},{value:"Programming",id:"programming",level:3},{value:"Applicable Classes",id:"applicable-classes",level:4},{value:"com.dls.jpos.service Package",id:"comdlsjposservice-package",level:5},{value:"ScannerScale.java",id:"scannerscalejava",level:6},{value:"ScannerScaleMBean.java",id:"scannerscalembeanjava",level:6},{value:"ScannerScaleAgent.java",id:"scannerscaleagentjava",level:6},{value:"Reference",id:"reference",level:3},{value:"ScannerScale MBean",id:"scannerscale-mbean",level:4},{value:"Access Methods",id:"access-methods",level:5},{value:"getApplicationRevisionLevel()",id:"getapplicationrevisionlevel",level:6},{value:"getBootloaderROMID()",id:"getbootloaderromid",level:6},{value:"getBus()",id:"getbus",level:6},{value:"getCameraHealth()",id:"getcamerahealth",level:6},{value:"getCapCompareFirmwareVersion()",id:"getcapcomparefirmwareversion",level:6},{value:"getCapPowerReporting()",id:"getcappowerreporting",level:6},{value:"getCapStatisticsReporting()",id:"getcapstatisticsreporting",level:6},{value:"getCapUpdateFirmware()",id:"getcapupdatefirmware",level:6},{value:"getCapUpdateStatistics()",id:"getcapupdatestatistics",level:6},{value:"getCaption()",id:"getcaption",level:6},{value:"getCommunicationErrorCount()",id:"getcommunicationerrorcount",level:6},{value:"getConfigurationFileID()",id:"getconfigurationfileid",level:6},{value:"getDescription()",id:"getdescription",level:6},{value:"getDeviceCategory()",id:"getdevicecategory",level:6},{value:"getDeviceControlVersion()",id:"getdevicecontrolversion",level:6},{value:"getDeviceID()",id:"getdeviceid",level:6},{value:"getDeviceServiceVersion()",id:"getdeviceserviceversion",level:6},{value:"getEASDeactivateCount()",id:"geteasdeactivatecount",level:6},{value:"getEASManualCount()",id:"geteasmanualcount",level:6},{value:"getEASRuntimeFaults()",id:"geteasruntimefaults",level:6},{value:"getEASSystemHealth()",id:"geteassystemhealth",level:6},{value:"getEnforcedZeroEvents()",id:"getenforcedzeroevents",level:6},{value:"getErrorResets()",id:"geterrorresets",level:6},{value:"getFPGAVersion()",id:"getfpgaversion",level:6},{value:"getFirmwareRevision()",id:"getfirmwarerevision",level:6},{value:"getForced2DResets()",id:"getforced2dresets",level:6},{value:"getGoodScanCount() Obsolete",id:"getgoodscancount-obsolete",level:6},{value:"getGoodWeightReadCount()",id:"getgoodweightreadcount",level:6},{value:"getHorizontalIPEForcedResets()",id:"gethorizontalipeforcedresets",level:6},{value:"getHorizontalLaserHealth()",id:"gethorizontallaserhealth",level:6},{value:"getHoursPoweredCount()",id:"gethourspoweredcount",level:6},{value:"getIPE0Health()",id:"getipe0health",level:6},{value:"getIPE1Health()",id:"getipe1health",level:6},{value:"getIPE2Health()",id:"getipe2health",level:6},{value:"getIPE3Health()",id:"getipe3health",level:6},{value:"getIPEAppVersion()",id:"getipeappversion",level:6},{value:"getInstallDate()",id:"getinstalldate",level:6},{value:"getLaserOnTime()",id:"getlaserontime",level:6},{value:"getManufactureDate()",id:"getmanufacturedate",level:6},{value:"getManufacturerName()",id:"getmanufacturername",level:6},{value:"getMechanicalRevision()",id:"getmechanicalrevision",level:6},{value:"getModelName()",id:"getmodelname",level:6},{value:"getMotorHealth()",id:"getmotorhealth",level:6},{value:"getMotorOnTime()",id:"getmotorontime",level:6},{value:"getPOSZeroRequests()",id:"getposzerorequests",level:6},{value:"getPhysicalDeviceDescription()",id:"getphysicaldevicedescription",level:6},{value:"getPhysicalDeviceName()",id:"getphysicaldevicename",level:6},{value:"getPowerNotify()",id:"getpowernotify",level:6},{value:"getPowerState()",id:"getpowerstate",level:6},{value:"getSDRAMCfgVersion()",id:"getsdramcfgversion",level:6},{value:"getScaleSentryEvents()",id:"getscalesentryevents",level:6},{value:"getScaleSentryHealth()",id:"getscalesentryhealth",level:6},{value:"getScannerRevision()",id:"getscannerrevision",level:6},{value:"getSerialNumber()",id:"getserialnumber",level:6},{value:"getTDRForcedResets()",id:"gettdrforcedresets",level:6},{value:"getTotalResets()",id:"gettotalresets",level:6},{value:"getUSBHandheldConnected()",id:"getusbhandheldconnected",level:6},{value:"getUSBLoaderVersion()",id:"getusbloaderversion",level:6},{value:"getUSBSerialDongleConnected()",id:"getusbserialdongleconnected",level:6},{value:"getUnifiedPOSVersion()",id:"getunifiedposversion",level:6},{value:"getUniversalInterfaceBootloaderROMID()",id:"getuniversalinterfacebootloaderromid",level:6},{value:"getVerticalIPEForcedResets()",id:"getverticalipeforcedresets",level:6},{value:"getVerticalLaserHealth()",id:"getverticallaserhealth",level:6},{value:"getVirtualScanLineLibraryVersion()",id:"getvirtualscanlinelibraryversion",level:6},{value:"getVisionLibraryVersion()",id:"getvisionlibraryversion",level:6},{value:"Attribute Table",id:"attribute-table",level:4}],d={toc:p},g="wrapper";function m(t){let{components:e,...a}=t;return(0,r.kt)(g,(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"JavaPOS supports remote management using jmx and MBeans. A subset of information from the Information, Health and Statistics commands are used to populate an MBean for use with Jconsole or some other jmx capable viewer. The following page describes the Datalogic JavaPOS MBean and the use of JavaPOS using MBeans as well as a technical reference to the exact properties that are covered in the ScannerScale MBean."),(0,r.kt)("p",null,"It is important to note that the JavaPOS support for Remote management is a capability rather than a feature. The POS developer is expected to repopulate the MBean or update the values when new values expect to be displayed or updated. The only time that the JavaPOS API updates the MBean is during claim. No other updates are performed at any time. Developers are encouraged to place their own update routines into their POS software to expand the functionality of MBeans tailored to their specific use case."),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"This section covers the configuration areas that are related to MBeans support on JavaPOS."),(0,r.kt)("h3",{id:"system-properties"},"System Properties"),(0,r.kt)("h4",{id:"comsunmanagementjmxremote"},"com.sun.management.jmxremote"),(0,r.kt)("h3",{id:"javapos-configuration"},"JavaPOS Configuration"),(0,r.kt)("h4",{id:"dlsproperties-settings"},"dls.properties Settings"),(0,r.kt)("p",null,"Datalogic JavaPOS performs API-wide configuration using a file named \u201cdls.properties\u201d, located in the root directory of where the POS application is launched."),(0,r.kt)("h5",{id:"generatestatisticsoneveryclaim"},"GenerateStatisticsOnEveryClaim"),(0,r.kt)("p",null,"In order for Datalogic JavaPOS to update the MBean instance, the dls.properties property \u201cGenerateStatisticsOnEveryClaim\u201d must be set to \u201cTrue\u201d. Setting this property to any other value than \u201cTrue\u201d will result in the statistics being generated only during the initial claim of the device and then not generated on subsequent claim operations. Setting this property to \u201cTrue\u201d will result in new statistics being populated from the device each time the device is claimed."),(0,r.kt)("h4",{id:"jposxml-settings"},"jpos.xml Settings"),(0,r.kt)("p",null,"Datalogic JavaPOS performs device specific configuration using a file named \u201cjpos.xml\u201d, located in the root directory of where the POS application is launched. For a given device profile, the following properties pertain to enabling Remote Management using MBeans."),(0,r.kt)("h5",{id:"canacceptstatisticscmd-property"},"canAcceptStatisticsCmd Property"),(0,r.kt)("p",null,"The canAcceptStatisticsCmd Property must be set to True for any device that can accept a statistics command. In order for JavaPOS to populate the MBean instance, the device in question must accept a statistics command."),(0,r.kt)("h5",{id:"sendihsonclaim-property"},"sendIHSOnClaim Property"),(0,r.kt)("p",null,"The sendIHSOnClaim Property must be set to True for any device that wishes to have Information, Health and Statistics commands sent during the claim process. In order for the MBean instance to be populated, statistics are gathered during claim."),(0,r.kt)("h5",{id:"mbeansenabled-property"},"MBeansEnabled Property"),(0,r.kt)("p",null,"The MBeansEnabled Property must be set to True for any device that wishes to utilize remote management using jmx. Setting this property to any other value than True will result in the ScannerScale MBean not being populated and the MBean not being registered."),(0,r.kt)("h3",{id:"programming"},"Programming"),(0,r.kt)("h4",{id:"applicable-classes"},"Applicable Classes"),(0,r.kt)("h5",{id:"comdlsjposservice-package"},"com.dls.jpos.service Package"),(0,r.kt)("h6",{id:"scannerscalejava"},"ScannerScale.java"),(0,r.kt)("p",null,"This is the generic implementation of the ScannerScaleMBean interface. This class is meant to provide very basic MBeans compatible information gathered during claim. The MBean is populated using a Hashtable that is provided to the populate method. The keys in this Hashtable must correspond to the Constant values listed in the table at the end of this document in order to populate the MBean."),(0,r.kt)("p",null,"The ScannerScale instance is only ever populated once, during claim. The ScannerScale class is instantiated and then the statistics Hashtable gathered during claim is passed to the populate method. No other updates to the MBean are performed."),(0,r.kt)("h6",{id:"scannerscalembeanjava"},"ScannerScaleMBean.java"),(0,r.kt)("p",null,"This is the MBean interface definition for the ScannerScale JavaPOS MBean. POS Developers are encouraged to implement their own implementation of the interface rather than relying on the simple implementation provided in ScannerScale.java."),(0,r.kt)("h6",{id:"scannerscaleagentjava"},"ScannerScaleAgent.java"),(0,r.kt)("p",null,"This class encapsulates the registration process with an MBeans capable service. This class is provided as a simple implementation of MBeans for developers who do not wish or do not need to access a full service MBeans implementation. POS developers are encouraged to develop their own MBeans agent to suit their particular needs."),(0,r.kt)("p",null,"This agent iteration registers with the platform MBean server as \u201cCIMV2:name=Scanner\u201d or \u201cCIMV2:name=Scale\u201d depending on the applicable device. Custom registration, or using names other than \u201cScanner\u201d or \u201cScale\u201d require replacing this class with an appropriate agent class."),(0,r.kt)("h3",{id:"reference"},"Reference"),(0,r.kt)("h4",{id:"scannerscale-mbean"},"ScannerScale MBean"),(0,r.kt)("h5",{id:"access-methods"},"Access Methods"),(0,r.kt)("h6",{id:"getapplicationrevisionlevel"},"getApplicationRevisionLevel()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_APPLICATION_REVISION tag. Appears as \u201cApplicationRevisionLevel\u201d."),(0,r.kt)("h6",{id:"getbootloaderromid"},"getBootloaderROMID()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_SCANNER_BOOT_ROM_ID tag. Appears as \u201cBootloaderROMID\u201d."),(0,r.kt)("h6",{id:"getbus"},"getBus()"),(0,r.kt)("p",null,"Populated from statistics during jpos.xml loading using the DLSJposConst.DLS_S_INTERFACE tag. Appears as \u201cBus\u201d."),(0,r.kt)("h6",{id:"getcamerahealth"},"getCameraHealth()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_CAMERA_HEALTH tag. Appears as \u201cCameraHealth\u201d."),(0,r.kt)("h6",{id:"getcapcomparefirmwareversion"},"getCapCompareFirmwareVersion()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_CAP_COMP_FW_VER tag. Appears as \u201cCapCompareFirmwareVersion\u201d."),(0,r.kt)("h6",{id:"getcappowerreporting"},"getCapPowerReporting()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_CAP_PWR_REPORT tag. Appears as \u201cCapPowerReporting\u201d."),(0,r.kt)("h6",{id:"getcapstatisticsreporting"},"getCapStatisticsReporting()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_CAP_STATS_REPORT tag. Appears as \u201cCapStatisticsReporting\u201d."),(0,r.kt)("h6",{id:"getcapupdatefirmware"},"getCapUpdateFirmware()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_CAP_UPDATE_FW tag. Appears as \u201cCapUpdateFirmware\u201d."),(0,r.kt)("h6",{id:"getcapupdatestatistics"},"getCapUpdateStatistics()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_CAP_UPDATE_STATS tag. Appears as \u201cCapUpdateStatistics\u201d."),(0,r.kt)("h6",{id:"getcaption"},"getCaption()"),(0,r.kt)("p",null,"Populated by assigning the branded manufacturer name from the brand.properties after claim. Appears as \u201cCaption\u201d."),(0,r.kt)("h6",{id:"getcommunicationerrorcount"},"getCommunicationErrorCount()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_COMM_ERROR_COUNT tag. Appears as \u201cCommunicationErrorCount\u201d."),(0,r.kt)("h6",{id:"getconfigurationfileid"},"getConfigurationFileID()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_SCANNER_CONFIG_FILE_ID tag. Appears as \u201cConfigurationFileID\u201d."),(0,r.kt)("h6",{id:"getdescription"},"getDescription()"),(0,r.kt)("p",null,"Populated by appending \u201c Device\u201d to the branded manufacturer name from the brand.properties after claim. Appears as \u201cDescription\u201d."),(0,r.kt)("h6",{id:"getdevicecategory"},"getDeviceCategory()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_DEVICE_CATEGORY tag. Appears as \u201cDeviceCategory\u201d."),(0,r.kt)("h6",{id:"getdevicecontrolversion"},"getDeviceControlVersion()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_CONTROL_VERSION tag. Appears as \u201cDeviceControlVersion\u201d."),(0,r.kt)("h6",{id:"getdeviceid"},"getDeviceID()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_SERIAL_NUMBER tag. Appears as \u201cDeviceID\u201d."),(0,r.kt)("h6",{id:"getdeviceserviceversion"},"getDeviceServiceVersion()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_SERVICE_VERSION tag. Appears as \u201cDeviceServiceVersion\u201d."),(0,r.kt)("h6",{id:"geteasdeactivatecount"},"getEASDeactivateCount()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_EAS_DEACTIVATED tag. Appears as \u201cEASDeactivatedCount\u201d."),(0,r.kt)("h6",{id:"geteasmanualcount"},"getEASManualCount()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_EAS_MANUAL tag. Appears as \u201cEASManualCount\u201d."),(0,r.kt)("h6",{id:"geteasruntimefaults"},"getEASRuntimeFaults()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_EAS_RT_FAULTS tag. Appears as \u201cEASRuntimeFaults\u201d."),(0,r.kt)("h6",{id:"geteassystemhealth"},"getEASSystemHealth()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_EAS_HEALTH tag. Appears as \u201cEASSystemHealth\u201d."),(0,r.kt)("h6",{id:"getenforcedzeroevents"},"getEnforcedZeroEvents()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_ENFORCE_ZERO_EVENTS tag. Appears as \u201cEnforcedZeroEvents\u201d."),(0,r.kt)("h6",{id:"geterrorresets"},"getErrorResets()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_ERROR_RESETS tag. Appears as \u201cErrorResets\u201d."),(0,r.kt)("h6",{id:"getfpgaversion"},"getFPGAVersion()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_FPGA_VERSION tag. Appears as \u201cFPGAVersion\u201d."),(0,r.kt)("h6",{id:"getfirmwarerevision"},"getFirmwareRevision()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_FIRMWARE_VERSION tag. Appears as \u201cFirmwareRevision\u201d."),(0,r.kt)("h6",{id:"getforced2dresets"},"getForced2DResets()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_2D_FORCED_RESETS tag. Appears as \u201cForced2DResets\u201d."),(0,r.kt)("h6",{id:"getgoodscancount-obsolete"},"getGoodScanCount() Obsolete"),(0,r.kt)("p",null,"The getGoodScanCount method always returns a value of \u201c\u201d. The code to populate this member was removed to prevent confusion. The JavaPOS Mbean is only ever populated during claim, so users were being confused by this attribute not updating as they scanned labels. At present, \u201cGood Scan Count\u201d is not updated, but is still an accessible member of the MBean."),(0,r.kt)("h6",{id:"getgoodweightreadcount"},"getGoodWeightReadCount()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_GOOD_WEIGHT_READ_COUNT tag. Appears as \u201cGoodWeightReadCount\u201d."),(0,r.kt)("h6",{id:"gethorizontalipeforcedresets"},"getHorizontalIPEForcedResets()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_HORZ_IPE_FORCED_RESETS tag. Appears as \u201cHorizontalIPEForcedResets\u201d."),(0,r.kt)("h6",{id:"gethorizontallaserhealth"},"getHorizontalLaserHealth()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_H_LASER_HEALTH tag. Appears as \u201cHorizontalLaserHealth\u201d."),(0,r.kt)("h6",{id:"gethourspoweredcount"},"getHoursPoweredCount()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_HOURS_POWERED_COUNT tag. Appears as \u201cHoursPoweredCount\u201d."),(0,r.kt)("h6",{id:"getipe0health"},"getIPE0Health()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_IPE_0_HEALTH tag. Appears as \u201cIPE0Health\u201d."),(0,r.kt)("h6",{id:"getipe1health"},"getIPE1Health()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_IPE_1_HEALTH tag. Appears as \u201cIPE1Health\u201d."),(0,r.kt)("h6",{id:"getipe2health"},"getIPE2Health()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_IPE_2_HEALTH tag. Appears as \u201cIPE2Health\u201d."),(0,r.kt)("h6",{id:"getipe3health"},"getIPE3Health()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_IPE_3_HEALTH tag. Appears as \u201cIPE3Health\u201d."),(0,r.kt)("h6",{id:"getipeappversion"},"getIPEAppVersion()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_IPE_APP_VERSION tag. Appears as \u201cIPEAppVersion\u201d."),(0,r.kt)("h6",{id:"getinstalldate"},"getInstallDate()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_INSTALL_DATE tag. Appears as \u201cInstallDate\u201d."),(0,r.kt)("h6",{id:"getlaserontime"},"getLaserOnTime()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_LASER_TIME tag. Appears as \u201cLaserOnTime\u201d."),(0,r.kt)("h6",{id:"getmanufacturedate"},"getManufactureDate()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_MANUFACTURE_DATE tag. Appears as \u201cManufactureDate\u201d."),(0,r.kt)("h6",{id:"getmanufacturername"},"getManufacturerName()"),(0,r.kt)("p",null,"Populated by assigning the branded manufacturer name from the brand.properties after claim. Appears as \u201cManufacturerName\u201d."),(0,r.kt)("h6",{id:"getmechanicalrevision"},"getMechanicalRevision()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_SCANNER_REVISION tag. Appears as \u201cMechanicalRevision\u201d."),(0,r.kt)("h6",{id:"getmodelname"},"getModelName()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_MODEL_NAME tag. Appears as \u201cModelName\u201d."),(0,r.kt)("h6",{id:"getmotorhealth"},"getMotorHealth()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_MOTOR_HEALTH tag. Appear as \u201cMotorHealth\u201d."),(0,r.kt)("h6",{id:"getmotorontime"},"getMotorOnTime()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_MOTOR_TIME tag. Appears as \u201cMotorOnTime\u201d."),(0,r.kt)("h6",{id:"getposzerorequests"},"getPOSZeroRequests()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_POS_ZERO_REQUESTS tag. Appears as \u201cPOSZeroRequests\u201d."),(0,r.kt)("h6",{id:"getphysicaldevicedescription"},"getPhysicalDeviceDescription()"),(0,r.kt)("p",null,"Populated by appending \u201c Device\u201d to the branded manufacturer name from the brand.properties after claim. Appears as \u201cPhysicalDeviceDescription\u201d."),(0,r.kt)("h6",{id:"getphysicaldevicename"},"getPhysicalDeviceName()"),(0,r.kt)("p",null,"Populated by appending \u201c Device\u201d to the branded manufacturer name from the brand.properties after claim. Appears as \u201cPhysicalDeviceName\u201d."),(0,r.kt)("h6",{id:"getpowernotify"},"getPowerNotify()"),(0,r.kt)("p",null,"Populated from statistics by comparing the string value in statistics stored using the DLSJposConst.DLS_S_POWER_NOTIFY tag to the constant string \u201cJPOS_PN_ENABLED\u201d. Assigns JposConst.JPOS_PN_ENABLED if the string matches or JposConst.JPOS_PN_DISABLED if the string does not match. Appears as \u201cPowerNotify\u201d."),(0,r.kt)("h6",{id:"getpowerstate"},"getPowerState()"),(0,r.kt)("p",null,"This field is not populated from statistics and is not directly populated in any way. It does not appear to be supported and appears most likely for backward compatibility purposes. The field is able to be populated and would work correctly if used by a developer, however, no population of values is done during claim or any other time."),(0,r.kt)("h6",{id:"getsdramcfgversion"},"getSDRAMCfgVersion()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_SDRAM_CFG_VERSION tag. Appears as \u201cSDRAMCfgVersion\u201d."),(0,r.kt)("h6",{id:"getscalesentryevents"},"getScaleSentryEvents()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_SCALE_SENTRY_EVENTS tag. Appears as \u201cScaleSentryEvents\u201d."),(0,r.kt)("h6",{id:"getscalesentryhealth"},"getScaleSentryHealth()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_SCALE_SENTRY_HEALTH tag. Appears as \u201cScaleSentryHealth\u201d."),(0,r.kt)("h6",{id:"getscannerrevision"},"getScannerRevision()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_SCANNER_BOARD_SERIAL tag. Appears as \u201cScannerRevision\u201d"),(0,r.kt)("h6",{id:"getserialnumber"},"getSerialNumber()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_SERIAL_NUMBER tag. Appears as \u201cSerialNumber\u201d."),(0,r.kt)("h6",{id:"gettdrforcedresets"},"getTDRForcedResets()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_TDR_FORCED_RESETS tag. Appears as \u201cTDRForcedResets\u201d."),(0,r.kt)("h6",{id:"gettotalresets"},"getTotalResets()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_TOTAL_RESETS tag. Appears as \u201cTotalResets\u201d."),(0,r.kt)("h6",{id:"getusbhandheldconnected"},"getUSBHandheldConnected()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_NUM_ATTACHED_DEVICES tag. Appears as \u201cUSBHandheldConnected\u201d."),(0,r.kt)("h6",{id:"getusbloaderversion"},"getUSBLoaderVersion()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_USB_LOADER_VERSION tag. Appears as \u201cUSBLoaderVersion\u201d."),(0,r.kt)("h6",{id:"getusbserialdongleconnected"},"getUSBSerialDongleConnected()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_USB_SERIAL_CONNECTED tag. Appears as \u201cUSBSerialDongleConnected\u201d."),(0,r.kt)("h6",{id:"getunifiedposversion"},"getUnifiedPOSVersion()"),(0,r.kt)("p",null,"getUniversalInterfaceApplicationROMID()\nPopulated from statistics during claim using the DLSJposConst.DLS_S_UNIVERSAL_ROM_ID tag. Appears as \u201cUniversalInterfaceApplicationROMID\u201d."),(0,r.kt)("h6",{id:"getuniversalinterfacebootloaderromid"},"getUniversalInterfaceBootloaderROMID()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_UNIVERSAL_BOOT_ROM_ID tag. Appears as \u201cUniversalInterfaceBootloaderROMID\u201d."),(0,r.kt)("h6",{id:"getverticalipeforcedresets"},"getVerticalIPEForcedResets()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_VERT_IPE_FORCED_RESETS tag. Appears as \u201cVerticalIPEForcedResets\u201d."),(0,r.kt)("h6",{id:"getverticallaserhealth"},"getVerticalLaserHealth()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_V_LASER_HEALTH tag. Appears as \u201cVerticalLaserHealth\u201d."),(0,r.kt)("h6",{id:"getvirtualscanlinelibraryversion"},"getVirtualScanLineLibraryVersion()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_VSL_VERSION tag. Appears as \u201cVirtualScanLineLibraryVersion\u201d."),(0,r.kt)("h6",{id:"getvisionlibraryversion"},"getVisionLibraryVersion()"),(0,r.kt)("p",null,"Populated from statistics during claim using the DLSJposConst.DLS_S_VL_VERSION tag. Appears as \u201cVisionLibaryVersion\u201d."),(0,r.kt)("h4",{id:"attribute-table"},"Attribute Table"),(0,r.kt)("p",null,"The following is a table denoting the mapping between jmx Attribute name, DLSJPosConst constant name for developers, the actual value of that DLSJposConst constant and finally, the name of the MBean method defined in the ScannerScaleMBean interface that accesses each attribute."),(0,r.kt)("p",null,'The ScannerScale MBean is populated during claim by copying values from a Hashtable into the MBean member variables. The Hashtable is a simple key/value mapping between the names denoted in the "Constant Value" column and their values as supplied by the device.  This Hashtable is used to update the statistics by supplying it as a parameter to the populate() method.  Once populated, the item will be visible in Jconsole or other viewer as the Attribute named in the corresponding "MBean Attribute" column and is accessible using the method named in the corresponding "MBean accessor" column.  The constant value for the applicable key name is listed in the corresponding "DLSJposConst constant" column.'),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"MBean Attribute"),(0,r.kt)("th",{parentName:"tr",align:"left"},"DLSJposConst constant"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Constant Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"MBean accessor"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ApplicationRevisionLevel"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_APPLICATION_REVISION"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ApplicationRevisionLevel"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getApplicationRevisionLevel()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"BootloaderROMID"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_SCANNER_BOOT_ROM_ID"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ScannerBootROMID"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getBootloaderROMID()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Bus"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_INTERFACE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Interface"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getBus()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CameraHealth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_CAMERA_HEALTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CameraHealth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getCameraHealth()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CapCompareFirmwareVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_CAP_COMP_FW_VER"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CapCompareFirmwareVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getCapCompareFirmwareVersion()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CapPowerReporting"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_CAP_PWR_REPORT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CapPowerReporting"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getCapPowerReporting()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CapStatisticsReporting"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_CAP_STATS_REPORT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CapStatisticsReporting"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getCapStatisticsReporting()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CapUpdateFirmware"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_CAP_UPDATE_FW"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CapUpdateFirmware"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getCapUpdateFirmware()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CapUpdateStatistics"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_CAP_UPDATE_STATS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CapUpdateStatistics"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getCapUpdateStatistics()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CommunicationErrorCount"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_COMM_ERROR_COUNT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CommunicationErrorCount"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getCommunicationErrorCount()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ConfigurationFileID"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_SCANNER_CONFIG_FILE_ID"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ConfigFileVersionNumber"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getConfigurationFileID()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DeviceCategory"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_DEVICE_CATEGORY"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DeviceCategory"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getDeviceCategory()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DeviceControlVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_CONTROL_VERSION"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ControlVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getDeviceControlVersion()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DeviceID"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_SERIAL_NUMBER"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SerialNumber"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getDeviceID()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"DeviceServiceVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_SERVICE_VERSION"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ServiceVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getDeviceServiceVersion()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"EASDeactivatedCount"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_EAS_DEACTIVATED"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EASDeactivations"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getEASDeactivatedCount()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"EASManualCount"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_EAS_MANUAL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EASManualPresses"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getEASManualCount()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"EASRuntimeFaults"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_EAS_RT_FAULTS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EASRuntimeFaults"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getEASRuntimeFaults()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"EASSystemHealth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_EAS_HEALTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EASHealth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getEASSystemHealth()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"EnforcedZeroEvents"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_ENFORCE_ZERO_EVENTS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EnforcedZeroEvents"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getEnforcedZeroEvents()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ErrorResets"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_ERROR_RESETS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ErrorResets"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getErrorResets()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"FirmwareRevision"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_FIRMWARE_VERSION"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FirmwareVersionNumber"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getFirmwareRevision()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Forced2DResets"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_2D_FORCED_RESETS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Forced2DResets"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getForced2DResets()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"FPGAVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_FPGA_VERSION"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FPGAVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getFPGAVersion()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"GoodWeightReadCount"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_GOOD_WEIGHT_READ_COUNT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GoodWeightReadCount"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getGoodWeightReadCount()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"HorizontalIPEForcedResets"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_HORZ_IPE_FORCED_RESETS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"HorizontalIPEForcedResets"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getHorizontalIPEForcedResets()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"HorizontalLaserHealth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_H_LASER_HEALTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"HorizontalLaserHealth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getHorizontalLaserHealth()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"HoursPoweredCount"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_HOURS_POWERED_COUNT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"HoursPoweredCount"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getHoursPoweredCount()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"InstallDate"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_INSTALL_DATE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"InstallDate"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getInstallDate()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"IPE0Health"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_IPE_0_HEALTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IPE0Health"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getIPE0Health()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"IPE1Health"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_IPE_1_HEALTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IPE1Health"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getIPE1Health()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"IPE2Health"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_IPE_2_HEALTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IPE2Health"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getIPE2Health()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"IPE3Health"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_IPE_3_HEALTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IPE3Health"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getIPE3Health()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"IPEAppVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_IPE_APP_VERSION"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IPEAppVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getIPEAppVersion()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"LaserOnTime"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_LASER_TIME"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LaserTime"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getLaserOnTime()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ManufactureDate"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_MANUFACTURE_DATE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ManufactureDate"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getManufactureDate()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MechanicalRevision"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_SCANNER_REVISION"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ScannerRevisionNumber"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getMechanicalRevision()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ModelName"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_MODEL_NAME"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ModelNumber"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getModelName()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MotorHealth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_MOTOR_HEALTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MotorHealth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getMotorHealth()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MotorOnTime"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_MOTOR_TIME"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MotorTime"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getMotorOnTime()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"POSZeroRequests"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_POS_ZERO_REQUESTS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"POSZeroRequests"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getPOSZeroRequests()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"PowerNotify"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_POWER_NOTIFY"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PowerNotify"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getPowerNotify()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ScaleSentryEvents"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_SCALE_SENTRY_EVENTS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ScaleSentryEvents"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getScaleSentryEvents()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ScaleSentryHealth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_SCALE_SENTRY_HEALTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ScaleSentryHealth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getScaleSentryHealth()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ScannerRevision"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_SCANNER_BOARD_SERIAL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ScannerBoardSerialNumber"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getScannerRevision()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"SDRAMCfgVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_SDRAM_CFG_VERSION"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDRAMCfgVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getSDRAMCfgVersion()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"SerialNumber"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_SERIAL_NUMBER"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SerialNumber"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getSerialNumber()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"TDRForcedResets"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_TDR_FORCED_RESETS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TDRForcedResets"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getTDRForcedResets()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"TotalResets"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_TOTAL_RESETS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TotalResets"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getTotalResets()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"UniversalInterfaceApplicationROMID"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_UNIVERSAL_ROM_ID"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CometROMID"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getUniversalInterfaceApplicationROMID()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"UniversalInterfaceBootloaderROMID"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_UNIVERSAL_BOOT_ROM_ID"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CometBootROMID"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getUniversalInterfaceBootloaderROMID()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"USBHandheldConnected"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_NUM_ATTACHED_DEVICES"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NumberOfAttachedDevices"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getUSBHandheldConnected()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"USBLoaderVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_USB_LOADER_VERSION"),(0,r.kt)("td",{parentName:"tr",align:"left"},"USBLoaderVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getUSBLoaderVersion()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"USBSerialDongleConnected"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_USB_SERIAL_CONNECTED"),(0,r.kt)("td",{parentName:"tr",align:"left"},"USBSerialDongleConnected"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getUSBSerialDongleConnected()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"VerticalIPEForcedResets"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_VERT_IPE_FORCED_RESETS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"VerticalIPEForcedResets"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getVerticalIPEForcedResets()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"VerticalLaserHealth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_V_LASER_HEALTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"VerticalLaserHealth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getVerticalLaserHealth()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"VirtualScanLineLibraryVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_VSL_VERSION"),(0,r.kt)("td",{parentName:"tr",align:"left"},"VirtualScanLineLibraryVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getVirtualScanLineLibraryVersion")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"VisionLibraryVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DLSJposConst.DLS_S_VL_VERSION"),(0,r.kt)("td",{parentName:"tr",align:"left"},"VisionLibraryVersion"),(0,r.kt)("td",{parentName:"tr",align:"left"},"getVisionLibraryVersion()")))))}m.isMDXComponent=!0}}]);