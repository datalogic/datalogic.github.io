"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[3137],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>m});var a=n(67294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,o=function(t,e){if(null==t)return{};var n,a,o={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var i=a.createContext({}),u=function(t){var e=a.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},c=function(t){var e=u(t.components);return a.createElement(i.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},f=a.forwardRef((function(t,e){var n=t.components,o=t.mdxType,r=t.originalType,i=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),p=u(n),f=o,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||r;return n?a.createElement(m,l(l({ref:e},c),{},{components:n})):a.createElement(m,l({ref:e},c))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var r=n.length,l=new Array(r);l[0]=f;var s={};for(var i in e)hasOwnProperty.call(e,i)&&(s[i]=e[i]);s.originalType=t,s[p]="string"==typeof t?t:o,l[1]=s;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},85162:(t,e,n)=>{n.d(e,{Z:()=>l});var a=n(67294),o=n(86010);const r={tabItem:"tabItem_Ymn6"};function l(t){let{children:e,hidden:n,className:l}=t;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,l),hidden:n},e)}},74866:(t,e,n)=>{n.d(e,{Z:()=>y});var a=n(87462),o=n(67294),r=n(86010),l=n(12466),s=n(16550),i=n(91980),u=n(67392),c=n(50012);function p(t){return function(t){var e,n;return null!=(e=null==(n=o.Children.map(t,(t=>{if(!t||(0,o.isValidElement)(t)&&function(t){const{props:e}=t;return!!e&&"object"==typeof e&&"value"in e}(t))return t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof t.type?t.type:t.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?e:[]}(t).map((t=>{let{props:{value:e,label:n,attributes:a,default:o}}=t;return{value:e,label:n,attributes:a,default:o}}))}function d(t){const{values:e,children:n}=t;return(0,o.useMemo)((()=>{const t=null!=e?e:p(n);return function(t){const e=(0,u.l)(t,((t,e)=>t.value===e.value));if(e.length>0)throw new Error('Docusaurus error: Duplicate values "'+e.map((t=>t.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(t),t}),[e,n])}function f(t){let{value:e,tabValues:n}=t;return n.some((t=>t.value===e))}function m(t){let{queryString:e=!1,groupId:n}=t;const a=(0,s.k6)(),r=function(t){let{queryString:e=!1,groupId:n}=t;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:e,groupId:n});return[(0,i._X)(r),(0,o.useCallback)((t=>{if(!r)return;const e=new URLSearchParams(a.location.search);e.set(r,t),a.replace({...a.location,search:e.toString()})}),[r,a])]}function b(t){const{defaultValue:e,queryString:n=!1,groupId:a}=t,r=d(t),[l,s]=(0,o.useState)((()=>function(t){var e;let{defaultValue:n,tabValues:a}=t;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((t=>t.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const o=null!=(e=a.find((t=>t.default)))?e:a[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:e,tabValues:r}))),[i,u]=m({queryString:n,groupId:a}),[p,b]=function(t){let{groupId:e}=t;const n=function(t){return t?"docusaurus.tab."+t:null}(e),[a,r]=(0,c.Nk)(n);return[a,(0,o.useCallback)((t=>{n&&r.set(t)}),[n,r])]}({groupId:a}),S=(()=>{const t=null!=i?i:p;return f({value:t,tabValues:r})?t:null})();(0,o.useLayoutEffect)((()=>{S&&s(S)}),[S]);return{selectedValue:l,selectValue:(0,o.useCallback)((t=>{if(!f({value:t,tabValues:r}))throw new Error("Can't select invalid tab value="+t);s(t),u(t),b(t)}),[u,b,r]),tabValues:r}}var S=n(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(t){let{className:e,block:n,selectedValue:s,selectValue:i,tabValues:u}=t;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),d=t=>{const e=t.currentTarget,n=c.indexOf(e),a=u[n].value;a!==s&&(p(e),i(a))},f=t=>{var e;let n=null;switch(t.key){case"Enter":d(t);break;case"ArrowRight":{var a;const e=c.indexOf(t.currentTarget)+1;n=null!=(a=c[e])?a:c[0];break}case"ArrowLeft":{var o;const e=c.indexOf(t.currentTarget)-1;n=null!=(o=c[e])?o:c[c.length-1];break}}null==(e=n)||e.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},e)},u.map((t=>{let{value:e,label:n,attributes:l}=t;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,key:e,ref:t=>c.push(t),onKeyDown:f,onClick:d},l,{className:(0,r.Z)("tabs__item",g.tabItem,null==l?void 0:l.className,{"tabs__item--active":s===e})}),null!=n?n:e)})))}function v(t){let{lazy:e,children:n,selectedValue:a}=t;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const t=r.find((t=>t.props.value===a));return t?(0,o.cloneElement)(t,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((t,e)=>(0,o.cloneElement)(t,{key:e,hidden:t.props.value!==a}))))}function k(t){const e=b(t);return o.createElement("div",{className:(0,r.Z)("tabs-container",g.tabList)},o.createElement(h,(0,a.Z)({},t,e)),o.createElement(v,(0,a.Z)({},t,e)))}function y(t){const e=(0,S.Z)();return o.createElement(k,(0,a.Z)({key:String(e)},t))}},12949:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var a=n(87462),o=(n(67294),n(3905)),r=n(74866),l=n(85162);n(90814);const s={id:"api",title:"SoftSpot API",sidebar_label:"SoftSpot API"},i=void 0,u={unversionedId:"softspot/api",id:"softspot/api",title:"SoftSpot API",description:"Command Intents",source:"@site/docs/softspot/api.md",sourceDirName:"softspot",slug:"/softspot/api",permalink:"/softspot/api",draft:!1,tags:[],version:"current",frontMatter:{id:"api",title:"SoftSpot API",sidebar_label:"SoftSpot API"},sidebar:"SoftSpot",previous:{title:"Export/Import Settings",permalink:"/softspot/export"},next:{title:"SoftSpot v2",permalink:"/softspot/legacy"}},c={},p=[{value:"Command Intents",id:"command-intents",level:2},{value:"Enable SoftSpot",id:"enable-softspot",level:3},{value:"Disable SoftSpot",id:"disable-softspot",level:3},{value:"Show SoftSpot",id:"show-softspot",level:3},{value:"Hide SoftSpot",id:"hide-softspot",level:3},{value:"Sample code",id:"sample-code",level:3}],d={toc:p},f="wrapper";function m(t){let{components:e,...n}=t;return(0,o.kt)(f,(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"command-intents"},"Command Intents"),(0,o.kt)("p",null,"Applications can send commands to Datalogic SoftSpot through a set of API intents.  These intents perform the same actions that are available through the SoftSpot application.  They can be useful to issues commands in response to a system event, such as the start of a user login, or the reporting of an error."),(0,o.kt)("p",null,"To avoid the potential for any application other than Datalogic SoftSpot from processing the Intent, all intents should be created using the following package name for the recipient:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"com.datalogic.softspot")),(0,o.kt)("p",null,"The available intents with specific details on their behavior are listed below."),(0,o.kt)("h3",{id:"enable-softspot"},"Enable SoftSpot"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intent Action:")," ",(0,o.kt)("inlineCode",{parentName:"li"},"com.datalogic.softspot.ENABLE")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intent Data:")," None"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intent Extra Data:")," None")),(0,o.kt)("p",null,"SoftSpot is enabled (started) using the existing configuration settings.  If SoftSpot is already started, this command will be ignored."),(0,o.kt)("h3",{id:"disable-softspot"},"Disable SoftSpot"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intent Action:")," ",(0,o.kt)("inlineCode",{parentName:"li"},"com.datalogic.softspot.DISABLE")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intent Data:")," None"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intent Extra Data:")," None")),(0,o.kt)("p",null,"Any currently running SoftSpot is disabled.  If SoftSpot was not started, this command will be ignored."),(0,o.kt)("h3",{id:"show-softspot"},"Show SoftSpot"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intent Action:")," ",(0,o.kt)("inlineCode",{parentName:"li"},"com.datalogic.softspot.SHOW")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intent Data:")," None"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intent Extra Data:")," None")),(0,o.kt)("p",null,"Show any currently running SoftSpot (assuming it was hidden).  If SoftSpot was not enabled, this command will be ignored."),(0,o.kt)("h3",{id:"hide-softspot"},"Hide SoftSpot"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intent Action:")," ",(0,o.kt)("inlineCode",{parentName:"li"},"com.datalogic.softspot.HIDE")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intent Data:")," None"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intent Extra Data:")," None")),(0,o.kt)("p",null,"Hide any currently visible SoftSpot.  If SoftSpot was not enabled, this command will be ignored."),(0,o.kt)("h3",{id:"sample-code"},"Sample code"),(0,o.kt)("p",null,"The following code fragment illustrates how to issue each of the SoftSpot intents from an activity."),(0,o.kt)(r.Z,{defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'fun spotDemo()\n{\n    val spotPackage = "com.datalogic.softspot"\n\n    // Create/Send intent to enable SoftSpot.\n    val enableSpot = Intent("com.datalogic.softspot.ENABLE")\n    enableSpot.setPackage(spotPackage)\n    sendBroadcast(enableSpot)\n\n    // Create/Send intent to hide SoftSpot.\n    val hideSpot = Intent("com.datalogic.softspot.HIDE")\n    hideSpot.setPackage(spotPackage)\n    sendBroadcast(hideSpot)\n\n    // Create/Send intent to show SoftSpot.\n    val showSpot = Intent("com.datalogic.softspot.SHOW")\n    showSpot.setPackage(spotPackage)\n    sendBroadcast(showSpot)\n\n    // Create/Send intent to disable SoftSpot.\n    val disableSpot = Intent("com.datalogic.softspot.DISABLE")\n    disableSpot.setPackage(spotPackage)\n    sendBroadcast(disableSpot)\n}\n'))),(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'void spotDemo()\n{\n    String spotPackage = "com.datalogic.softspot";\n\n    // Create/Send intent to enable SoftSpot.\n    Intent enableSpot = new Intent("com.datalogic.softspot.ENABLE");\n    enableSpot.setPackage(spotPackage);\n    sendBroadcast(enableSpot);\n\n    // Create/Send intent to hide SoftSpot.\n    Intent hideSpot = new Intent("com.datalogic.softspot.HIDE");\n    hideSpot.setPackage(spotPackage);\n    sendBroadcast(hideSpot);\n\n    // Create/Send intent to show SoftSpot.\n    Intent showSpot = new Intent("com.datalogic.softspot.SHOW");\n    showSpot.setPackage(spotPackage);\n    sendBroadcast(showSpot);\n\n    // Create/Send intent to disable SoftSpot.\n    Intent disableSpot = new Intent("com.datalogic.softspot.DISABLE");\n    disableSpot.setPackage(spotPackage);\n    sendBroadcast(disableSpot);\n}\n')))))}m.isMDXComponent=!0}}]);