"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[101],{3905:function(e,a,t){t.d(a,{Zo:function(){return p},kt:function(){return b}});var r=t(67294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,r,l=function(e,a){if(null==e)return{};var t,r,l={},n=Object.keys(e);for(r=0;r<n.length;r++)t=n[r],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)t=n[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=r.createContext({}),c=function(e){var a=r.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},p=function(e){var a=c(e.components);return r.createElement(o.Provider,{value:a},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},k=r.forwardRef((function(e,a){var t=e.components,l=e.mdxType,n=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(t),k=l,b=d["".concat(o,".").concat(k)]||d[k]||u[k]||n;return t?r.createElement(b,s(s({ref:a},p),{},{components:t})):r.createElement(b,s({ref:a},p))}));function b(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var n=t.length,s=new Array(n);s[0]=k;var i={};for(var o in a)hasOwnProperty.call(a,o)&&(i[o]=a[o]);i.originalType=e,i[d]="string"==typeof e?e:l,s[1]=i;for(var c=2;c<n;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},4569:function(e,a,t){t.r(a),t.d(a,{assets:function(){return p},contentTitle:function(){return o},default:function(){return b},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return d}});var r=t(87462),l=t(63366),n=(t(67294),t(3905)),s=["components"],i={id:"api",title:"Cordova API",sidebar_label:"API"},o=void 0,c={unversionedId:"cordova/api",id:"cordova/api",title:"Cordova API",description:"API Reference",source:"@site/docs/cordova/api.md",sourceDirName:"cordova",slug:"/cordova/api",permalink:"/cordova/api",draft:!1,tags:[],version:"current",frontMatter:{id:"api",title:"Cordova API",sidebar_label:"API"},sidebar:"CordovaSDK",previous:{title:"Frequently Asked Questions",permalink:"/cordova/faq"},next:{title:"Sample Apps",permalink:"/cordova/samples"}},p={},d=[{value:"API Reference",id:"api-reference",level:2},{value:"Namespaces",id:"namespaces",level:3},{value:"barcodeManager",id:"barcodemanager",level:3},{value:".addReadListner(<code>successCallback</code>, <code>errorCallback</code>): Object",id:"addreadlistnersuccesscallback-errorcallback-object",level:4},{value:"Response",id:"response",level:5},{value:"Example",id:"example",level:5},{value:".pressTrigger(<code>successCallback</code>, <code>errorCallback</code>): Object",id:"presstriggersuccesscallback-errorcallback-object",level:4},{value:"Response",id:"response-1",level:5},{value:"Example",id:"example-1",level:5},{value:".releaseTrigger(<code>successCallback</code>, <code>errorCallback</code>): Object",id:"releasetriggersuccesscallback-errorcallback-object",level:4},{value:"Response",id:"response-2",level:5},{value:"Example",id:"example-2",level:5},{value:"autoScanTrigger",id:"autoscantrigger",level:3},{value:".isAvailable(<code>successCallback</code>, <code>errorCallback</code>): Object",id:"isavailablesuccesscallback-errorcallback-object",level:4},{value:"Response",id:"response-3",level:5},{value:"Example",id:"example-3",level:5},{value:".getSupportedRanges(<code>successCallback</code>, <code>errorCallback</code>): Object",id:"getsupportedrangessuccesscallback-errorcallback-object",level:4},{value:"Response",id:"response-4",level:5},{value:"Example",id:"example-4",level:5},{value:".getCurrentRange(<code>successCallback</code>, <code>errorCallback</code>): Object",id:"getcurrentrangesuccesscallback-errorcallback-object",level:4},{value:"Response",id:"response-5",level:5},{value:"Example",id:"example-5",level:5},{value:".setCurrentRange(<code>id</code>, <code>successCallback</code>, <code>errorCallback</code>): Object",id:"setcurrentrangeid-successcallback-errorcallback-object",level:4},{value:"Response",id:"response-6",level:5},{value:"Example",id:"example-6",level:5},{value:"keyboardManager",id:"keyboardmanager",level:3},{value:".getAllAvailableTriggers (<code>successCallback</code>, <code>errorCallback</code>): Object",id:"getallavailabletriggers-successcallback-errorcallback-object",level:4},{value:"Response",id:"response-7",level:5},{value:"Example",id:"example-7",level:5},{value:".setAllAvailableTriggers(<code>enable</code>, <code>successCallback</code>, <code>errorCallback</code>): Object",id:"setallavailabletriggersenable-successcallback-errorcallback-object",level:4},{value:"Response",id:"response-8",level:5},{value:"Example",id:"example-8",level:5},{value:".setTriggers(<code>config</code>, <code>successCallback</code>, <code>errorCallback</code>): Object",id:"settriggersconfig-successcallback-errorcallback-object",level:4},{value:"Response",id:"response-9",level:5},{value:"Example",id:"example-9",level:5},{value:"ledManager",id:"ledmanager",level:3},{value:".setLed(<code>ledConfig</code>, <code>successCallback</code>, <code>errorCallback</code>): Object",id:"setledledconfig-successcallback-errorcallback-object",level:4},{value:"Response",id:"response-10",level:5},{value:"Example",id:"example-10",level:5},{value:"scannerProperties",id:"scannerproperties",level:3},{value:".edit(<code>successCallback</code>, <code>errorCallback</code>): Object",id:"editsuccesscallback-errorcallback-object",level:4},{value:"Response",id:"response-11",level:5},{value:"Example",id:"example-11",level:5},{value:".store(<code>properties</code>, <code>successCallback</code>, <code>errorCallback</code>): Object",id:"storeproperties-successcallback-errorcallback-object",level:4},{value:"Response",id:"response-12",level:5},{value:"Examples",id:"examples",level:5}],u={toc:d},k="wrapper";function b(e){var a=e.components,t=(0,l.Z)(e,s);return(0,n.kt)(k,(0,r.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"api-reference"},"API Reference"),(0,n.kt)("p",null,"All functions are asynchronous. All functions will, at a minimum, include ",(0,n.kt)("inlineCode",{parentName:"p"},"successCallback")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"errorCallback")," parameters, both of which are callback functions."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"successCallback")," will be called in normal cases, and will return an appropriate JSON ",(0,n.kt)("inlineCode",{parentName:"p"},"object"),".")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"errorCallback")," will be called when there was an error, and will return a single error ",(0,n.kt)("inlineCode",{parentName:"p"},"string"),"."))),(0,n.kt)("h3",{id:"namespaces"},"Namespaces"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Namespace"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#barcodemanager"},"barcodeManager")),(0,n.kt)("td",{parentName:"tr",align:null},"receive barcode data")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#autoscantrigger"},"autoScanTrigger")),(0,n.kt)("td",{parentName:"tr",align:null},"work the autoscan features")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#keyboardmanager"},"keyboardManager")),(0,n.kt)("td",{parentName:"tr",align:null},"set usable device triggers")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#ledmanager"},"ledManager")),(0,n.kt)("td",{parentName:"tr",align:null},"control device LEDs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#scannerproperties"},"scannerProperties")),(0,n.kt)("td",{parentName:"tr",align:null},"define availabled symbologies")))),(0,n.kt)("h3",{id:"barcodemanager"},"barcodeManager"),(0,n.kt)("hr",null),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Function"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#addreadlistnersuccesscallback-errorcallback-object"},"addReadListner")),(0,n.kt)("td",{parentName:"tr",align:null},"Register to receive barcode data on each scan.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#presstriggersuccesscallback-errorcallback-object"},"pressTrigger")),(0,n.kt)("td",{parentName:"tr",align:null},"Simulate a trigger button press.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#releasetriggersuccesscallback-errorcallback-object"},"releaseTrigger")),(0,n.kt)("td",{parentName:"tr",align:null},"Simulate a trigger button release.")))),(0,n.kt)("h4",{id:"addreadlistnersuccesscallback-errorcallback-object"},".addReadListner(",(0,n.kt)("inlineCode",{parentName:"h4"},"successCallback"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"errorCallback"),"): Object"),(0,n.kt)("p",null,"Register to receive barcode data on each scan. ",(0,n.kt)("inlineCode",{parentName:"p"},"successCallback")," will be called ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"every time"))," a barcode is successfully scanned. Therefore, you will typically only need to call ",(0,n.kt)("inlineCode",{parentName:"p"},"barcodeManager.addReadListner()")," ",(0,n.kt)("em",{parentName:"p"},"once")," in your application."),(0,n.kt)("h5",{id:"response"},"Response"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"barcodeData")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"string")," - the barcode data scanned."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"barcodeType")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"string")," - will be one of the ",(0,n.kt)("inlineCode",{parentName:"li"},"BarcodeID")," values defined in the ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/datalogic/datalogic-android-sdk/blob/master/sdk/src/main/java/com/datalogic/decode/BarcodeID.java"},"BarcodeID class")," in the ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/datalogic/datalogic-android-sdk"},"Datalogic Android SDK"),".")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "barcodeData": "EUG2997",\n   "barcodeType": "CODE128"\n}\n')),(0,n.kt)("h5",{id:"example"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'declare let barcodeManager : any;\n...\nbarcodeManager.addReadListner(\n   (data) => {\n     parsedData = JSON.parse(data);\n     alert(parsedData.barcodeData + ", " + parsedData.barcodeType);\n   },\n   (err)=>{ alert(err); }\n);\n')),(0,n.kt)("h4",{id:"presstriggersuccesscallback-errorcallback-object"},".pressTrigger(",(0,n.kt)("inlineCode",{parentName:"h4"},"successCallback"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"errorCallback"),"): Object"),(0,n.kt)("p",null,"Call this method to simulate a trigger button press. The method does not always immediately start a capture; instead it behaves like pressing a physical scan button."),(0,n.kt)("h5",{id:"response-1"},"Response"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")," with success message"),(0,n.kt)("h5",{id:"example-1"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"barcodeManager.pressTrigger(\n  (data) => { alert(data); },\n  (err) => { alert(err);}\n);\n")),(0,n.kt)("h4",{id:"releasetriggersuccesscallback-errorcallback-object"},".releaseTrigger(",(0,n.kt)("inlineCode",{parentName:"h4"},"successCallback"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"errorCallback"),"): Object"),(0,n.kt)("p",null,"Call this method to simulate a release of a trigger button. The method does not always immediately stop a capture; instead it behaves like releasing a physical scan button."),(0,n.kt)("h5",{id:"response-2"},"Response"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")," with success message"),(0,n.kt)("h5",{id:"example-2"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"barcodeManager.releaseTrigger(\n  (data) => { alert(data); },\n  (err) => { alert(err);}\n);\n")),(0,n.kt)("h3",{id:"autoscantrigger"},"autoScanTrigger"),(0,n.kt)("hr",null),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Function"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#isavailablesuccesscallback-errorcallback-object"},"isAvailable")),(0,n.kt)("td",{parentName:"tr",align:null},"Determine if the auto scan feature is available on this device.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#getsupportedrangessuccesscallback-errorcallback-object"},"getSupportedRanges")),(0,n.kt)("td",{parentName:"tr",align:null},"Get the supported ranges of the autoscan feature.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#getcurrentrangesuccesscallback-errorcallback-object"},"getCurrentRange")),(0,n.kt)("td",{parentName:"tr",align:null},"Get the current range of the autoscan feature.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#setcurrentrangeid-successcallback-errorcallback-object"},"setCurrentRange")),(0,n.kt)("td",{parentName:"tr",align:null},"Set the current range of the autoscan feature.")))),(0,n.kt)("h4",{id:"isavailablesuccesscallback-errorcallback-object"},".isAvailable(",(0,n.kt)("inlineCode",{parentName:"h4"},"successCallback"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"errorCallback"),"): Object"),(0,n.kt)("p",null,"Determine if the auto scan feature is available on this device."),(0,n.kt)("h5",{id:"response-3"},"Response"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"available")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"boolean")," - indicates if autoscan is supported or not on this device.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{ "available": true }\n')),(0,n.kt)("h5",{id:"example-3"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"declare let autoScanTrigger : any;\nisAvailable : boolean = false;\n...\nautoScanTrigger.isAvailable(\n  (data) => {\n    this.isAvailable = JSON.parse(data).available;\n    alert(this.isAvailable);\n  },\n  (err) => { alert(err); }\n);\n")),(0,n.kt)("h4",{id:"getsupportedrangessuccesscallback-errorcallback-object"},".getSupportedRanges(",(0,n.kt)("inlineCode",{parentName:"h4"},"successCallback"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"errorCallback"),"): Object"),(0,n.kt)("p",null,"Get the supported ranges of the autoscan feature."),(0,n.kt)("h5",{id:"response-4"},"Response"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"supportedRanges")," : ",(0,n.kt)("inlineCode",{parentName:"p"},"array")," - provides array of ranges device supports. The array will be empty if device does not support autoscan. Each object in the array contains:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"id")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"integer")," - unique value for a step in the supported ranges"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"name")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"string")," - descriptive text related to the ",(0,n.kt)("inlineCode",{parentName:"li"},"id"))),(0,n.kt)("p",null,"If AutoScan is not supported by device:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{ "supportedRanges":[] }\n')),(0,n.kt)("p",null,"If AutoScan is supported:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "supportedRanges":[\n  {\n    "id":0,\n    "name":"Near"\n  },\n  {\n    "id":1,\n    "name":"Intermediate"\n  },\n  {\n    "id":2,\n    "name":"Far"\n  }\n  ]\n}\n')),(0,n.kt)("h5",{id:"example-4"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'declare let autoScanTrigger : any;\nautoScanTrigger.getSupportedRanges(\n  (data) => {\n    alert(JSON.parse(data).supportedRanges);\n    if(this.supportedRanges.length == 0)\n      alert("Device does not support Auto Scan");\n  },\n  (err) => { alert(err); }\n);\n')),(0,n.kt)("h4",{id:"getcurrentrangesuccesscallback-errorcallback-object"},".getCurrentRange(",(0,n.kt)("inlineCode",{parentName:"h4"},"successCallback"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"errorCallback"),"): Object"),(0,n.kt)("p",null,"Get the current range of the autoscan feature."),(0,n.kt)("h5",{id:"response-5"},"Response"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"currentRange")," : ",(0,n.kt)("inlineCode",{parentName:"p"},"object")," - contains 2 fields:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"id")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"integer")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"name")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"string"))),(0,n.kt)("p",null,"If AutoScan is not supported by device:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{ "currentRange":null }\n')),(0,n.kt)("p",null,"If AutoScan is supported:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "currentRange":\n  {\n      "id":1,\n      "name":"Intermediate"\n  }\n}\n')),(0,n.kt)("h5",{id:"example-5"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"declare let autoScanTrigger : any;\nautoScanTrigger.getCurrentRange(\n  (data) => {\n    alert(JSON.parse(data).currentRange);\n  },\n  (err) => { alert(err); }\n);\n")),(0,n.kt)("h4",{id:"setcurrentrangeid-successcallback-errorcallback-object"},".setCurrentRange(",(0,n.kt)("inlineCode",{parentName:"h4"},"id"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"successCallback"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"errorCallback"),"): Object"),(0,n.kt)("p",null,"Set the current range of the autoscan feature."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"id")," : ",(0,n.kt)("inlineCode",{parentName:"p"},"integer")," - should match one of the ",(0,n.kt)("inlineCode",{parentName:"p"},"id")," values retrieved by the getSupportedRanges function."),(0,n.kt)("h5",{id:"response-6"},"Response"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")," with success message"),(0,n.kt)("h5",{id:"example-6"},"Example"),(0,n.kt)("p",null,'Set current range to "Intermediate"'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"autoScanTrigger.setCurrentRange(\n  0,\n  (data) => { alert(data); },\n  (err) => { alert(err); }\n);\n")),(0,n.kt)("h3",{id:"keyboardmanager"},"keyboardManager"),(0,n.kt)("hr",null),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Function"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#getallavailabletriggers-successcallback-errorcallback-object"},"getAllAvailableTriggers")),(0,n.kt)("td",{parentName:"tr",align:null},"Get all the available triggers of the device.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#setallavailabletriggersenable-successcallback-errorcallback-object"},"setAllAvailableTriggers")),(0,n.kt)("td",{parentName:"tr",align:null},"Set all the devices triggers on or off.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#settriggersconfig-successcallback-errorcallback-object"},"setTriggers")),(0,n.kt)("td",{parentName:"tr",align:null},"Set one or more triggers on or off.")))),(0,n.kt)("h4",{id:"getallavailabletriggers-successcallback-errorcallback-object"},".getAllAvailableTriggers (",(0,n.kt)("inlineCode",{parentName:"h4"},"successCallback"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"errorCallback"),"): Object"),(0,n.kt)("p",null,"Get all the available triggers of the device."),(0,n.kt)("h5",{id:"response-7"},"Response"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"triggers")," : ",(0,n.kt)("inlineCode",{parentName:"p"},"array")," - each object in the array contains:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"enabled")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"boolean")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"id")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"integer")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"name")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"string"))),(0,n.kt)("p",null,"Typical response:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "triggers":[\n    {\n        "enabled":true,\n        "id":3,\n        "name":"Front Trigger"\n    },\n    {\n        "enabled":false,\n        "id":4,\n        "name":"Auto Scan Trigger"\n    },\n    {\n        "enabled":false,\n        "id":5,\n        "name":"Motion Trigger"\n    }\n    ]\n}\n')),(0,n.kt)("h5",{id:"example-7"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"keyboardManager.getAllAvailableTriggers(\n  (data) => { alert(JSON.parse(data).triggers); },\n  (err) => { alert(err); }\n);\n")),(0,n.kt)("h4",{id:"setallavailabletriggersenable-successcallback-errorcallback-object"},".setAllAvailableTriggers(",(0,n.kt)("inlineCode",{parentName:"h4"},"enable"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"successCallback"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"errorCallback"),"): Object"),(0,n.kt)("p",null,"Set all the devices triggers on or off."),(0,n.kt)("h5",{id:"response-8"},"Response"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")," with success message"),(0,n.kt)("h5",{id:"example-8"},"Example"),(0,n.kt)("p",null,"Turn all triggers on."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"keyboardManager.setAllAvailableTriggers(\n  true,\n  (data) => { alert(data); },\n  (err) => { alert(err); }\n);\n")),(0,n.kt)("h4",{id:"settriggersconfig-successcallback-errorcallback-object"},".setTriggers(",(0,n.kt)("inlineCode",{parentName:"h4"},"config"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"successCallback"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"errorCallback"),"): Object"),(0,n.kt)("p",null,"Set one or more triggers on or off. You will likely call ",(0,n.kt)("inlineCode",{parentName:"p"},"getAllAvailableTriggers"),", edit the ",(0,n.kt)("inlineCode",{parentName:"p"},"enabled")," flags of each returned object as desired, and then resubmit by calling ",(0,n.kt)("inlineCode",{parentName:"p"},"setTriggers"),"."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"config")," : ",(0,n.kt)("inlineCode",{parentName:"p"},"array")," - each object in the array represents an individual trigger. Each object in the array contains:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"id")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"integer")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"enabled")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"boolean"))),(0,n.kt)("h5",{id:"response-9"},"Response"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")," with success message"),(0,n.kt)("h5",{id:"example-9"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"//an array os supported triggers\ntriggers:{id: number, name: string, enabled: boolean}[]  = [];\n...\nkeyboardManager.getAllAvailableTriggers(\n  (data) => {\n    this.triggers = JSON.parse(data).triggers;\n    this.triggers[0].enabled = false;\n\n    keyboardManager.setTriggers(\n      this.triggers,\n      (data) => { alert(data); },\n      (err) => { alert(err);}\n    );\n  },\n  (err) => { alert(err); }\n);\n")),(0,n.kt)("h3",{id:"ledmanager"},"ledManager"),(0,n.kt)("hr",null),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Function"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#setledledconfig-successcallback-errorcallback-object"},"setLed")),(0,n.kt)("td",{parentName:"tr",align:null},"Set various device LEDs.")))),(0,n.kt)("h4",{id:"setledledconfig-successcallback-errorcallback-object"},".setLed(",(0,n.kt)("inlineCode",{parentName:"h4"},"ledConfig"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"successCallback"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"errorCallback"),"): Object"),(0,n.kt)("p",null,"Set the various device LEDs. A list of enum values for LEDs can be found ",(0,n.kt)("a",{parentName:"p",href:"https://datalogic.github.io/android-sdk-docs/reference/com/datalogic/device/notification/Led.html"},"here"),"."),(0,n.kt)("h5",{id:"response-10"},"Response"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")," with success message"),(0,n.kt)("h5",{id:"example-10"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'ledManager.setLed({"led": "LED_GOOD_READ", "enable": false}, null, null);\n')),(0,n.kt)("h3",{id:"scannerproperties"},"scannerProperties"),(0,n.kt)("hr",null),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Function"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#editsuccesscallback-errorcallback-object"},"edit")),(0,n.kt)("td",{parentName:"tr",align:null},"Get a list of supported properties along with the state of each (enabled or disabled).")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#storeproperties-successcallback-errorcallback-object"},"store")),(0,n.kt)("td",{parentName:"tr",align:null},"Apply changes to one or more properties with the values supplied.")))),(0,n.kt)("h4",{id:"editsuccesscallback-errorcallback-object"},".edit(",(0,n.kt)("inlineCode",{parentName:"h4"},"successCallback"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"errorCallback"),"): Object"),(0,n.kt)("p",null,"Get a list of supported scanner properties along with the state of each (enabled or disabled)."),(0,n.kt)("h5",{id:"response-11"},"Response"),(0,n.kt)("p",null,"A single JSON object containing an object for each of the available symbologies. Each symbology contains, at a minimum, these fields:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"enable")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"boolean")," - if scanner is set to detect this barcode type or not"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"supported")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"boolean")," - if the scanner supports the given barcode type or not")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "keyboardWedge":{"enable":true,"supported":true},\n  "aztec":{"enable":true,"supported":true},\n  "codabar":{"enable":true,"supported":true},\n  "code128":{"enable":true,"supported":true},\n  "code39":{"enable":true,"supported":true},\n  "code93":{"enable":false,"supported":true},\n  "composite":{"enable":false,"supported":true},\n  "datamatrix":{"enable":true,"supported":true},\n  "digimarc":{"enable":false,"supported":false},\n  "discrete25":{"enable":false,"supported":true},\n  "ean13":{"enable":true,"supported":true},\n  "ean8":{"enable":true,"supported":true},\n  "gs1DataBar_14":{"enable":true,"supported":true},\n  "gs1DataBar_Expanded":{"enable":true,"supported":true},\n  "gs1DataBar_Limited":{"enable":true,"supported":true},\n  "interleaved25":{"enable":true,"supported":true},\n  "matrix25":{"enable":false,"supported":true},\n  "maxicode":{"enable":false,"supported":true},\n  "microQr":{"enable":false,"supported":true},\n  "micropdf417":{"enable":false,"supported":true},\n  "msi":{"enable":false,"supported":true},\n  "p4State":{"enable":false,"supported":true},\n  "pAus":{"enable":false,"supported":true},\n  "pJap":{"enable":false,"supported":true},\n  "pKix":{"enable":false,"supported":true},\n  "pPlanet":{"enable":false,"supported":true},\n  "pPostnet":{"enable":false,"supported":true},\n  "pRM":{"enable":false,"supported":true},\n  "pdf417":{"enable":true,"supported":true},\n  "qrCode":{"enable":true,"supported":true},\n  "upcA":{"enable":true,"supported":true},\n  "upcE":{"enable":true,"supported":true}\n}\n')),(0,n.kt)("h5",{id:"example-11"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"properties : any = {};\n...\nscannerProperties.edit(\n  (data) => {\n    this.properties =  JSON.parse(data);\n    this.aztec = false;\n    this.codabar = false;\n    this.code128 = true;\n    this.keyboardWedge = false;\n  },\n  (err) => { alert(err); }\n);\n")),(0,n.kt)("h4",{id:"storeproperties-successcallback-errorcallback-object"},".store(",(0,n.kt)("inlineCode",{parentName:"h4"},"properties"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"successCallback"),", ",(0,n.kt)("inlineCode",{parentName:"h4"},"errorCallback"),"): Object"),(0,n.kt)("p",null,"Apply changes to one or more symbologies with the values supplied in ",(0,n.kt)("inlineCode",{parentName:"p"},"properties"),"."),(0,n.kt)("h5",{id:"response-12"},"Response"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")," with success message"),(0,n.kt)("h5",{id:"examples"},"Examples"),(0,n.kt)("p",null,"Enable UPC-E symbology"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'scannerProperties.store({"upcE":{"enable":true,"supported":true}}, null, null);\n')),(0,n.kt)("p",null,"Disable keyboard wedge feature"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'scannerProperties.store({"keyboardWedge":{"enable":false}}, null, null);\n')))}b.isMDXComponent=!0}}]);