"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[66558],{98772:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>u});var o=n(85893),a=n(11151),s=n(74866),l=n(85162);n(9286);const r={id:"api",title:"SoftSpot API",sidebar_label:"SoftSpot API"},i=void 0,c={id:"softspot/api",title:"SoftSpot API",description:"Command Intents",source:"@site/docs/softspot/api.mdx",sourceDirName:"softspot",slug:"/softspot/api",permalink:"/softspot/api",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"api",title:"SoftSpot API",sidebar_label:"SoftSpot API"},sidebar:"SoftSpot",previous:{title:"Export/Import Settings",permalink:"/softspot/export"},next:{title:"SoftSpot v2",permalink:"/softspot/legacy"}},d={},u=[{value:"Command Intents",id:"command-intents",level:2},{value:"Enable SoftSpot",id:"enable-softspot",level:3},{value:"Disable SoftSpot",id:"disable-softspot",level:3},{value:"Show SoftSpot",id:"show-softspot",level:3},{value:"Hide SoftSpot",id:"hide-softspot",level:3},{value:"Sample code",id:"sample-code",level:3}];function p(e){const t={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"command-intents",children:"Command Intents"}),"\n",(0,o.jsx)(t.p,{children:"Applications can send commands to Datalogic SoftSpot through a set of API intents.  These intents perform the same actions that are available through the SoftSpot application.  They can be useful to issues commands in response to a system event, such as the start of a user login, or the reporting of an error."}),"\n",(0,o.jsx)(t.p,{children:"To avoid the potential for any application other than Datalogic SoftSpot from processing the Intent, all intents should be created using the following package name for the recipient:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"com.datalogic.softspot"})}),"\n",(0,o.jsx)(t.p,{children:"The available intents with specific details on their behavior are listed below."}),"\n",(0,o.jsx)(t.h3,{id:"enable-softspot",children:"Enable SoftSpot"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Intent Action:"})," ",(0,o.jsx)(t.code,{children:"com.datalogic.softspot.ENABLE"})]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Intent Data:"})," None"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Intent Extra Data:"})," None"]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"SoftSpot is enabled (started) using the existing configuration settings.  If SoftSpot is already started, this command will be ignored."}),"\n",(0,o.jsx)(t.h3,{id:"disable-softspot",children:"Disable SoftSpot"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Intent Action:"})," ",(0,o.jsx)(t.code,{children:"com.datalogic.softspot.DISABLE"})]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Intent Data:"})," None"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Intent Extra Data:"})," None"]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Any currently running SoftSpot is disabled.  If SoftSpot was not started, this command will be ignored."}),"\n",(0,o.jsx)(t.h3,{id:"show-softspot",children:"Show SoftSpot"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Intent Action:"})," ",(0,o.jsx)(t.code,{children:"com.datalogic.softspot.SHOW"})]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Intent Data:"})," None"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Intent Extra Data:"})," None"]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Show any currently running SoftSpot (assuming it was hidden).  If SoftSpot was not enabled, this command will be ignored."}),"\n",(0,o.jsx)(t.h3,{id:"hide-softspot",children:"Hide SoftSpot"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Intent Action:"})," ",(0,o.jsx)(t.code,{children:"com.datalogic.softspot.HIDE"})]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Intent Data:"})," None"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Intent Extra Data:"})," None"]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Hide any currently visible SoftSpot.  If SoftSpot was not enabled, this command will be ignored."}),"\n",(0,o.jsx)(t.h3,{id:"sample-code",children:"Sample code"}),"\n",(0,o.jsx)(t.p,{children:"The following code fragment illustrates how to issue each of the SoftSpot intents from an activity."}),"\n","\n",(0,o.jsxs)(s.Z,{defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,o.jsx)(l.Z,{value:"kotlin",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:'fun spotDemo()\n{\n    val spotPackage = "com.datalogic.softspot"\n\n    // Create/Send intent to enable SoftSpot.\n    val enableSpot = Intent("com.datalogic.softspot.ENABLE")\n    enableSpot.setPackage(spotPackage)\n    sendBroadcast(enableSpot)\n\n    // Create/Send intent to hide SoftSpot.\n    val hideSpot = Intent("com.datalogic.softspot.HIDE")\n    hideSpot.setPackage(spotPackage)\n    sendBroadcast(hideSpot)\n\n    // Create/Send intent to show SoftSpot.\n    val showSpot = Intent("com.datalogic.softspot.SHOW")\n    showSpot.setPackage(spotPackage)\n    sendBroadcast(showSpot)\n\n    // Create/Send intent to disable SoftSpot.\n    val disableSpot = Intent("com.datalogic.softspot.DISABLE")\n    disableSpot.setPackage(spotPackage)\n    sendBroadcast(disableSpot)\n}\n'})})}),(0,o.jsx)(l.Z,{value:"java",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'void spotDemo()\n{\n    String spotPackage = "com.datalogic.softspot";\n\n    // Create/Send intent to enable SoftSpot.\n    Intent enableSpot = new Intent("com.datalogic.softspot.ENABLE");\n    enableSpot.setPackage(spotPackage);\n    sendBroadcast(enableSpot);\n\n    // Create/Send intent to hide SoftSpot.\n    Intent hideSpot = new Intent("com.datalogic.softspot.HIDE");\n    hideSpot.setPackage(spotPackage);\n    sendBroadcast(hideSpot);\n\n    // Create/Send intent to show SoftSpot.\n    Intent showSpot = new Intent("com.datalogic.softspot.SHOW");\n    showSpot.setPackage(spotPackage);\n    sendBroadcast(showSpot);\n\n    // Create/Send intent to disable SoftSpot.\n    Intent disableSpot = new Intent("com.datalogic.softspot.DISABLE");\n    disableSpot.setPackage(spotPackage);\n    sendBroadcast(disableSpot);\n}\n'})})})]})]})}function h(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},85162:(e,t,n)=>{n.d(t,{Z:()=>l});n(67294);var o=n(36905);const a={tabItem:"tabItem_Ymn6"};var s=n(85893);function l(e){let{children:t,hidden:n,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,o.Z)(a.tabItem,l),hidden:n,children:t})}},74866:(e,t,n)=>{n.d(t,{Z:()=>I});var o=n(67294),a=n(36905),s=n(12466),l=n(16550),r=n(20469),i=n(91980),c=n(67392),d=n(50012);function u(e){var t,n;return null!=(t=null==(n=o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}function p(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=null!=t?t:function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:o,default:a}}=e;return{value:t,label:n,attributes:o,default:a}}))}(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,i._X)(s),(0,o.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function S(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=p(e),[l,i]=(0,o.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:o}=e;if(0===o.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:o}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+o.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const a=null!=(t=o.find((e=>e.default)))?t:o[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[c,u]=f({queryString:n,groupId:a}),[S,g]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[a,s]=(0,d.Nk)(n);return[a,(0,o.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),b=(()=>{const e=null!=c?c:S;return h({value:e,tabValues:s})?e:null})();(0,r.Z)((()=>{b&&i(b)}),[b]);return{selectedValue:l,selectValue:(0,o.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error("Can't select invalid tab value="+e);i(e),u(e),g(e)}),[u,g,s]),tabValues:s}}var g=n(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=n(85893);function v(e){let{className:t,block:n,selectedValue:o,selectValue:l,tabValues:r}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),d=e=>{const t=e.currentTarget,n=i.indexOf(t),a=r[n].value;a!==o&&(c(t),l(a))},u=e=>{var t;let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var o;const t=i.indexOf(e.currentTarget)+1;n=null!=(o=i[t])?o:i[0];break}case"ArrowLeft":{var a;const t=i.indexOf(e.currentTarget)-1;n=null!=(a=i[t])?a:i[i.length-1];break}}null==(t=n)||t.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},t),children:r.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,ref:e=>i.push(e),onKeyDown:u,onClick:d,...s,className:(0,a.Z)("tabs__item",b.tabItem,null==s?void 0:s.className,{"tabs__item--active":o===t}),children:null!=n?n:t},t)}))})}function x(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function j(e){const t=S(e);return(0,m.jsxs)("div",{className:(0,a.Z)("tabs-container",b.tabList),children:[(0,m.jsx)(v,{...t,...e}),(0,m.jsx)(x,{...t,...e})]})}function I(e){const t=(0,g.Z)();return(0,m.jsx)(j,{...e,children:u(e.children)},String(t))}}}]);