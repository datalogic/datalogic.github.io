"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[6306],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(n),u=a,f=d["".concat(s,".").concat(u)]||d[u]||m[u]||i;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},25617:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={id:"samples",title:"Device Sync sample app",sidebar_label:"Sample Apps"},l=void 0,o={unversionedId:"cesync/samples",id:"cesync/samples",title:"Device Sync sample app",description:"A simple command line tool that makes use of the datalogic-ce-sync library.",source:"@site/docs/cesync/samples.md",sourceDirName:"cesync",slug:"/cesync/samples",permalink:"/cesync/samples",draft:!1,tags:[],version:"current",frontMatter:{id:"samples",title:"Device Sync sample app",sidebar_label:"Sample Apps"},sidebar:"CESyncSDK",previous:{title:"API",permalink:"/cesync/api"}},s={},c=[{value:"Run",id:"run",level:2},{value:"Commands",id:"commands",level:2},{value:"Known issues",id:"known-issues",level:2},{value:"Examples",id:"examples",level:2},{value:"To compile",id:"to-compile",level:2}],p={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A simple command line tool that makes use of the ",(0,a.kt)("a",{parentName:"p",href:"/cesync/overview"},"datalogic-ce-sync")," library.\nAlso uses the nice ",(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/CommandLineParser/"},"CommandLineParser")," library."),(0,a.kt)("h2",{id:"run"},"Run"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Compiled versions are stored in the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/datalogic/device-sync/releases"},"releases")," folder."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"device-sync.exe")," will be located inside the ",(0,a.kt)("strong",{parentName:"li"},"device-sync")," folder in a given ZIP file."),(0,a.kt)("li",{parentName:"ul"},"Start a ",(0,a.kt)("strong",{parentName:"li"},"Command Prompt")," and ",(0,a.kt)("strong",{parentName:"li"},"cd")," in to the ",(0,a.kt)("strong",{parentName:"li"},"device-sync")," folder."),(0,a.kt)("li",{parentName:"ul"},"Run ",(0,a.kt)("inlineCode",{parentName:"li"},"device-sync.exe")," at a Command Prompt.  Yes, you must have all those .dll files in the same directory as the executable.")),(0,a.kt)("h2",{id:"commands"},"Commands"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"C:\\publish\\device-sync --help\ndevice-sync 1.0.0\nCopyright (C) 2018 device-sync\n\n  push       Push files to a device\n\n  pull       Pull files from a device\n\n  start      Start a process on the device\n\n  find       Search a directory on the device for directories and files whose names satisfy the mask.\n\n  mkdir      Create a new directory on the device.\n\n  touch      Sets the last modified time of a file on the device\n\n  delete     Delete a specified file from the device\n\n  help       Display more information on a specific command.\n\n  version    Display version information.\n")),(0,a.kt)("h2",{id:"known-issues"},"Known issues"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Commands are finicky with slash direction (backslash vs. forward-slash). Try both, but most use forward-slash.")),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use ",(0,a.kt)("inlineCode",{parentName:"li"},"device-sync --help")," to get usage details."),(0,a.kt)("li",{parentName:"ul"},"Get command specific help, for example: ",(0,a.kt)("inlineCode",{parentName:"li"},"device-sync push --help"))),(0,a.kt)("h2",{id:"to-compile"},"To compile"),(0,a.kt)("p",null,"You will need DotNet Core 2.0 installed on your machine, which is available as part of Visual Studio 2017."),(0,a.kt)("p",null,"cd into the root project directory. Now run the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"dotnet publish -c release -r win10-x64 --self-contained\n")),(0,a.kt)("p",null,"This will generate a folder containing device-sync.exe along with all necessary ",(0,a.kt)("inlineCode",{parentName:"p"},"dll"),"s, such that you can just drop the folder onto any Windows 7/8/10 PC and run the executable.  The folder is generated at:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"bin/release/netcoreapp2.0/win10-x64/publish\n")))}m.isMDXComponent=!0}}]);