"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[39050],{9093:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=t(85893),r=t(11151);const i={id:"propertiesjson",title:"properties.json",sidebar_label:"properties.json"},a=void 0,o={id:"opos/dlrmus/propertiesjson",title:"properties.json",description:"Overview",source:"@site/docs/opos/dlrmus/propertiesjson.md",sourceDirName:"opos/dlrmus",slug:"/opos/dlrmus/propertiesjson",permalink:"/opos/dlrmus/propertiesjson",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"propertiesjson",title:"properties.json",sidebar_label:"properties.json"},sidebar:"OPOS",previous:{title:"Config Files",permalink:"/opos/dlrmus/configfiles"},next:{title:"prf_parser.json",permalink:"/opos/configref/prfparserjson"}},l={},d=[{value:"Overview",id:"overview",level:2},{value:"Miscellaneous parameters",id:"miscellaneous-parameters",level:3},{value:"Profile parameters",id:"profile-parameters",level:3},{value:"Model parameters",id:"model-parameters",level:3},{value:"Complete Listing",id:"complete-listing",level:2}];function c(n){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(e.p,{children:["The file properties.json is used to configure the ",(0,s.jsx)(e.a,{href:"/opos/dlrmus/",children:"DLRMUS"})," application."]}),"\n",(0,s.jsxs)(e.p,{children:["DLRMUS is available in both Windows and Linux implementations and does not rely on ",(0,s.jsx)(e.a,{href:"/opos/overview",children:"OPOS"}),". As such, the configuration of DLRMUS is strictly file-based and does not rely upon the Windows Registry."]}),"\n",(0,s.jsx)(e.admonition,{type:"note",children:(0,s.jsx)(e.p,{children:"properties.json is not an installed file. Instead, it is generated the first time you use DLRMUS. The actual installed file is properties.upd and it is used to generated properties.json. Exactly how properties.upd is used depends upon whether you are doing a clean install or updating and existing installation."})}),"\n",(0,s.jsx)(e.p,{children:"You should become familiar with the JSON format if you are going to modify properties.json because something as simple as a missing comma will cause you grief. To this end, there are many JSON validators available as online services. So, if you change the properties file, a validator will help you find syntax errors."}),"\n",(0,s.jsx)(e.p,{children:"The properties file has the sections"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Miscellaneous parameters"}),"\n",(0,s.jsx)(e.li,{children:"Profiles"}),"\n",(0,s.jsx)(e.li,{children:"Models"}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("b",{children:"Profiles"})," and ",(0,s.jsx)("b",{children:"Models"})," are named objects and can be located using a simple search in a text editor. ",(0,s.jsx)("b",{children:"Miscellaneous parameters"})," have no section name but are seen at the top of the file."]}),"\n",(0,s.jsxs)(e.p,{children:["A fairly ",(0,s.jsx)(e.a,{href:"#complete-listing",children:"complete listing"})," of properties.json can be found below."]}),"\n",(0,s.jsx)(e.h3,{id:"miscellaneous-parameters",children:"Miscellaneous parameters"}),"\n",(0,s.jsx)(e.p,{children:"The miscellaneous parameters are seen at the top of properties.json as"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'  "MaxLogFiles": 10,\n  "SummaryMaxSize": 100,\n  "ConsoleInfo": false,\n  "ConsoleHealth": false,\n  "ConsoleStatistics": false,\n  "ihs_timeout": 5000,\n  "LegacyErrorCodes": true,\n  "ServicePortBufferSize": 200000,\n'})}),"\n",(0,s.jsx)(e.p,{children:"Of these parameters, the MaxLogFiles and SummaryMaxSize will likely be the most important because they control the lifetime of the log files produced by DLRMUs."}),"\n",(0,s.jsx)(e.p,{children:"Log files come in two forms"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"A single summary log providing summary information about successive sessions (uses of DLRMUs)."}),"\n",(0,s.jsx)(e.li,{children:"A sequence of numbered traffic logs, each providing detailed information about a single session."}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"MaxLogFiles controls the maximum number of traffic log files generated before the traffic log files begin to be recycled."}),"\n",(0,s.jsx)(e.p,{children:"SummaryMaxSize, whose units is kilobytes, controls the maximum size of the summary log file. The summary log file will be overwritten when its size exceeds SummaryMaxSize."}),"\n",(0,s.jsx)(e.p,{children:"ConsoleInfo, ConsoleHealth, and ConsoleStatistics all respectively control whether or not Information, Health, and Statistics reports from the device are printed to the console. Note, the same (output) information is recorded in the log files with more context."}),"\n",(0,s.jsx)(e.p,{children:"ihs_timeout, whose units is milliseconds, controls how long an IHS query will wait before timeout. Defaults to 5000 ms (5 seconds)."}),"\n",(0,s.jsx)(e.p,{children:"LegacyErrorCodes is a boolean that controls whether or not DLRMUs will report errors using original (Legacy) error codes, or the new error codes that are unique to each reason DLRMUs might exit"}),"\n",(0,s.jsx)(e.p,{children:"ServicePortBufferSize, whose units is bytes, controls the size of the buffer when writing data to the service port. Service ports allow for much more data to be transferred at once when compared to host ports."}),"\n",(0,s.jsx)(e.h3,{id:"profile-parameters",children:"Profile parameters"}),"\n",(0,s.jsx)(e.p,{children:"A Profile is simply a name representing a family of scanners, related by their interface, and nearly all DLRMUs commands require you to reference a Profile. The profile names provided are identical to those installed with Datalogic's OPOS."}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)("b",{children:"Profiles"})," object contains Profile definitions. In turn, and each ",(0,s.jsx)("b",{children:"Profile"})," object contains its defining parameters."]}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)("b",{children:"Interface"})," parameter is significant because it defines the communication method between the host and the scanner. A Profile (particularly one representing a serial interface) may contain additional communication properties related to its interface (e.g. COM port, baud rate, etc.)"]}),"\n",(0,s.jsx)(e.p,{children:"In the following example, the Profile names are RS232Scanner, SCRS232Scanner, RS232Imager and USBScanner."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'"Profiles": {\n    "RS232Scanner": {\n        "Interface": "RS-232",\n        < more properties >\n    },\n    "SCRS232Scanner": {\n        "Interface": "SC/RS-232",\n        < more properties >\n    },\n    "RS232Imager": {\n        "Interface": "USB/COM",\n        < more properties >\n    },\n    "USBScanner": {\n        "Interface": "USB-OEM",\n        "Usage": "4A00",\n        < more properties >\n    }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"model-parameters",children:"Model parameters"}),"\n",(0,s.jsx)(e.p,{children:"A Model is simply a name representing a specific make of scanner and can be used with some DLRMUs commands to restrict the scope of an operation."}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)("b",{children:"Models"})," object containing Model definitions. In turn, each ",(0,s.jsx)("b",{children:"Model"})," object contains its defining parameters."]}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)("b",{children:"Patterns"})," of a model is a set of character strings used to identify a device given its ",(0,s.jsx)("b",{children:"TopModelNumber"}),'. The TopModelNumber is obtained from the data returned by IHS ("Information, Health and Statistics") commands when the scanner is claimed. It is unlikely you will ever need to make changes in this section.']}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.strong,{children:"lrdms"}),' parameter of a model is a value representing "Linux Read Delay Milliseconds".']}),"\n",(0,s.jsx)(e.p,{children:"As a small example, upon claiming as Magellan fixed retail scanner, configured to use the USB-OEM interface, a snippet of the associated USBScanner.PRF shows"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-properties",children:"# Information\nApplicationROMID = DR9401432\nApplicationRevisionLevel = 0817\n  <-- more data --\x3e\nModelName = 9800i SS\n  <-- more data --\x3e\nTopModelNumber = 984-8675309\n  <-- more data --\x3e\nVisionLibraryVersion = VL5.13.11\n"})}),"\n",(0,s.jsx)(e.p,{children:'The TopModelNumber is seen to start with "984". Locating this string among the Patterns, you will find it associated with the Model "9800i SS" and so the statement "ModelName = 9800i SS" is written into the PRF.'}),"\n",(0,s.jsx)(e.h2,{id:"complete-listing",children:"Complete Listing"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "version": 1,\n\n  "MaxLogFiles": 10,\n  "SummaryMaxSize": 100,\n  "ConsoleInfo": false,\n  "ConsoleHealth": false,\n  "ConsoleStatistics": false,\n  "ihs_timeout": 5000,\n  "LegacyErrorCodes": true,\n  "ServicePortBufferSize": 200000,\n\n  "Profiles": {\n    "ServicePort": {\n      "Interface": "SERVICEPORT",\n      "Affixes": [ 83, 13 ],\n      "BaudRate": 9600,\n      "DataBits": 7,\n      "Parity": "Odd",\n      "StopBits": 1,\n      "UseVirtualPort": 1\n    },\n    "RS232Scanner": {\n      "Interface": "RS-232",\n      "WindowsPort": 1,\n      "LinuxPort": "/dev/ttyS0",\n      "BaudRate": 9600,\n      "DataBits": 8,\n      "Parity": "None",\n      "StopBits": 1\n    },\n    "QS6000": {\n      "Interface": "RS-232",\n      "WindowsPort": 1,\n      "LinuxPort": "/dev/ttyS0",\n      "BaudRate": 9600,\n      "DataBits": 8,\n      "Parity": "None",\n      "StopBits": 1\n    },\n    "QSLScanner": {\n      "Interface": "RS-232",\n      "WindowsPort": 1,\n      "LinuxPort": "/dev/ttyS0",\n      "BaudRate": 9600,\n      "DataBits": 8,\n      "Parity": "Odd",\n      "StopBits": 1\n    },\n    "RS232Imager": {\n      "Interface": "USB/COM",\n      "WindowsPort": 1,\n      "LinuxPort": "/dev/ttyACM0",\n      "UseVirtualPort": 1\n    },\n    "SCRS232Scanner": {\n      "Interface": "SC/RS-232",\n      "Affixes": [ 83, 13 ],\n      "WindowsPort": 1,\n      "LinuxPort": "/dev/ttyS0",\n      "BaudRate": 9600,\n      "DataBits": 7,\n      "Parity": "Odd",\n      "StopBits": 1\n    },\n    "SC-COM": {\n      "Interface": "SC-COM",\n      "Affixes": [ 83, 13 ],\n      "WindowsPort": 1,\n      "LinuxPort": "/dev/ttyACM0",\n      "BaudRate": 9600,\n      "DataBits": 7,\n      "Parity": "Odd",\n      "StopBits": 1,\n      "UseVirtualPort": 1\n    },\n    "MagellanSC": {\n      "Interface": "SC/RS-232",\n      "Affixes": [ 1, 9 ],\n      "WindowsPort": 1,\n      "LinuxPort": "/dev/ttyS0",\n      "BaudRate": 9600,\n      "DataBits": 7,\n      "Parity": "Odd",\n      "StopBits": 1\n    },\n    "HandScanner": {\n      "Interface": "USB-OEM",\n      "Usage": "4B00"\n    },\n    "USBHHScanner": {\n      "Interface": "USB-OEM",\n      "Usage": "4B00"\n    },\n    "TableScanner": {\n      "Interface": "USB-OEM",\n      "Usage": "4A00"\n    },\n    "USBScanner": {\n      "Interface": "USB-OEM",\n      "Usage": "4A00"\n    },\n    "Bologna-USB-HID": {\n      "Interface": "USB-OEM",\n      "Usage": "4A00"\n    }\n  },\n\n  "Models": {\n    "2200 VS": {\n      "Patterns": [\n        "M22"\n      ]\n    },\n    "2300 HS": {\n      "Patterns": [\n        "M23"\n      ]\n    },\n    "8200 SO": {\n      "Patterns": [\n        "821"\n      ]\n    },\n    "8200 SS": {\n      "Patterns": [\n        "822"\n      ]\n    },\n    "8300 SO": {\n      "Patterns": [\n        "831"\n      ]\n    },\n    "8300 SS": {\n      "Patterns": [\n        "832"\n      ]\n    },\n    "8400 SO": {\n      "Patterns": [\n        "841"\n      ]\n    },\n    "8400 SS": {\n      "Patterns": [\n        "842"\n      ]\n    },\n    "8500 S0": {\n      "Patterns": [\n        "851"\n      ]\n    },\n    "8500 SS": {\n      "Patterns": [\n        "852"\n      ]\n    },\n    "8500XT SO": {\n      "Patterns": [\n        "859"\n      ]\n    },\n    "8500XT SS": {\n      "Patterns": [\n        "858",\n        "855"\n      ]\n    },\n    "8500XTS SO": {\n      "Patterns": [\n        "857"\n      ]\n    },\n    "8500XTS SS": {\n      "Patterns": [\n        "868",\n        "865"\n      ]\n    },\n    "9500 SO": {\n      "Patterns": [\n        "951",\n        "955"\n      ]\n    },\n    "9500 SS": {\n      "Patterns": [\n        "952",\n        "953",\n        "954"\n      ]\n    },\n    "1100i": {\n      "Patterns": [\n        "11",\n        "MG11"\n      ]\n    },\n    "1500i": {\n      "Patterns": [\n        "MG150",\n        "150"\n      ]\n    },\n    "3200 VS": {\n      "Patterns": [\n        "32"\n      ]\n    },\n    "3300 HS": {\n      "Patterns": [\n        "33"\n      ]\n    },\n    "3410 VS": {\n      "Patterns": [\n        "M341"\n      ]\n    },\n    "3450 VS": {\n      "Patterns": [\n        "M345",\n        "M346",\n        "M347"\n      ]\n    },\n    "3510 HS": {\n      "Patterns": [\n        "M351"\n      ]\n    },\n    "3550 HS": {\n      "Patterns": [\n        "M355"\n      ]\n    },\n    "9300i SO": {\n      "Patterns": [\n        "931"\n      ]\n    },\n    "9300i SS": {\n      "Patterns": [\n        "932",\n        "936"\n      ]\n    },\n    "9400i SO": {\n      "Patterns": [\n        "941"\n      ]\n    },\n    "9400i SS": {\n      "Patterns": [\n        "942",\n        "946"\n      ]\n    },\n    "9600i SO": {\n      "Patterns": [\n        "961"\n      ]\n    },\n    "9600i SS": {\n      "Patterns": [\n        "962"\n      ]\n    },\n    "9800i SO": {\n      "Patterns": [\n        "981"\n      ]\n    },\n    "9800i SS": {\n      "Patterns": [\n        "982",\n        "984"\n      ]\n    },\n    "9900i SS": {\n      "Patterns": [\n        "991"\n      ]\n    },\n    "9900i SO": {\n      "Patterns": [\n        "992"\n      ]\n    },\n    "GD4500": {\n      "Patterns": [\n        "123"\n      ]\n    },\n    "GBT4500": {\n      "Patterns": [\n        "GBT45"\n      ]\n    },\n    "GD4400": {\n      "Patterns": [\n        "G40"\n      ]\n    },\n    "GFS4470": {\n      "Patterns": [\n        "GFS4470"\n      ]\n    },\n    "GFS4490": {\n      "Patterns": [\n        "GFS4490"\n      ]\n    },\n    "QD2430": {\n      "Patterns": [\n        "QD2430"\n      ],\n      "lrdms": 4\n    },\n    "QW2400": {\n      "Patterns": [\n        "QW2400"\n      ],\n      "lrdms": 4\n    },\n    "QD2590": {\n      "Patterns": [\n        "QD2590"\n      ],\n      "lrdms": 4\n    },\n    "QW2500": {\n      "Patterns": [\n        "QW2500"\n      ],\n      "lrdms": 4\n    }\n  }\n}\n'})})]})}function p(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},11151:(n,e,t)=>{t.d(e,{Z:()=>o,a:()=>a});var s=t(67294);const r={},i=s.createContext(r);function a(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);