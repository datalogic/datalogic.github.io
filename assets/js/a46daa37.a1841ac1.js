"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[80322],{17962:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>o});var a=t(85893),i=t(11151);const l={id:"intent-integration",title:"Intent Integration",sidebar_label:"Intent Integration"},s=void 0,c={id:"aladdin/intent-integration",title:"Intent Integration",description:"Introduction",source:"@site/docs/aladdin/intent-integration.md",sourceDirName:"aladdin",slug:"/aladdin/intent-integration",permalink:"/aladdin/intent-integration",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"intent-integration",title:"Intent Integration",sidebar_label:"Intent Integration"},sidebar:"Aladdin",previous:{title:"SDK Integration",permalink:"/aladdin/sdk-integration"},next:{title:"Web Socket Integration",permalink:"/aladdin/web-socket"}},d={},o=[{value:"Introduction",id:"introduction",level:2},{value:"Intent Integration in Aladdin",id:"intent-integration-in-aladdin",level:2},{value:"Client Application Implementation",id:"client-application-implementation",level:2},{value:"1. Barcode event",id:"1-barcode-event",level:3},{value:"2. Connection status event",id:"2-connection-status-event",level:3},{value:"3. Get Last Scan Data",id:"3-get-last-scan-data",level:3},{value:"4. Get Connection State",id:"4-get-connection-state",level:3},{value:"Validating the Integration",id:"validating-the-integration",level:2}];function r(e){const n={code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsx)(n.p,{children:"This section outlines the capabilities of our Intent, which facilitates seamless integration with the Android Aladdin application. The Intent provides a sophisticated registering model, enabling developers to efficiently receive and manage scanned data. With built-in functionalities for sharing data, developers gain a professional and adaptable solution for incorporating scanned data into their applications."}),"\n",(0,a.jsx)(n.h2,{id:"intent-integration-in-aladdin",children:"Intent Integration in Aladdin"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Select Intent option in the Integration UI of Aladdin application."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"A UI will appear to enter name for barcode action, barcode data, label type and scan time extra name in respective input fields."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"The input fields will be pre-populated with default names, but you can change these names."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Intent",src:t(32794).Z+"",width:"260",height:"502"})}),"\n",(0,a.jsx)(n.p,{children:"Below are the default values used in Aladdin app for barcode action, barcode data, label type and scan time extra name."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Barcode event action name: ",(0,a.jsx)("font",{className:"mygreen",children:"com.datalogic.aladdinapp.intent.ACTION_SEND_BAR_CODE_DATA"})]}),"\n",(0,a.jsxs)(n.li,{children:["Barcode data extra name: ",(0,a.jsx)("font",{className:"mygreen",children:"com.datalogic.aladdinapp. extra.BARCODE_DATA"})]}),"\n",(0,a.jsxs)(n.li,{children:["Barcode label type extra name: ",(0,a.jsx)("font",{className:"mygreen",children:"com.datalogic.aladdinapp.extra.BARCODE_CODE_TYPE"})]}),"\n",(0,a.jsxs)(n.li,{children:["Barcode scan time extra name: ",(0,a.jsx)("font",{className:"mygreen",children:"com.datalogic.aladdinapp.extra.BARCODE_SCAN_TIME"})]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"If you have selected Intent as integration method, whenever the HHS scans a barcode, the application will send a broadcast with barcode event action name, barcode data extra name, barcode label type extra name and barcode scan time extra name which you entered in step 3."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["In Aladdin application, the \u201c",(0,a.jsx)("font",{className:"mygreen",children:"com.datalogic.aladdinapp.intent"}),"\u201d value is fixed. You will only enter the name and extra names."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"client-application-implementation",children:"Client Application Implementation"}),"\n",(0,a.jsx)(n.h3,{id:"1-barcode-event",children:"1. Barcode event"}),"\n",(0,a.jsx)(n.p,{children:"To receive a barcode event in the client application, the client must implement a broadcast receiver with the action and extras name that you entered in the Aladdin application."}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'class BarCodeReceiver : BroadcastReceiver() {\n\n    override fun onReceive(context: Context, intent: Intent) {\n\n        if ("com.datalogic.aladdinapp.intent.ACTION_SEND_BAR_CODE_DATA" == intent.action) {\n\n            val data = intent.getStringExtra("com.datalogic.aladdinapp.extra.BARCODE_DATA")\n\n            val codeType = intent.getStringExtra("com.datalogic.aladdinapp.extra.BARCODE_CODE_TYPE")\n\n            val scanTime = intent.getStringExtra("com.datalogic.aladdinapp.extra.BARCODE_SCAN_TIME")\n\n            Toast.makeText(context, data, Toast.LENGTH_SHORT).show()\n        }\n    }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Define an ",(0,a.jsx)("font",{className:"myred",children:"IntentFilter"})," for the specified actions:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val barCodeReceiver = BarCodeReceiver()\n\nval barCodeIntent = IntentFilter("com.datalogic.aladdinapp.intent.ACTION_SEND_BAR_CODE_DATA")\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Register the broadcast receiver instance with a context. The usual place for this call would be in the ",(0,a.jsx)("font",{className:"myred",children:"onCreate"})," method of a ",(0,a.jsx)("font",{className:"myred",children:"Service"})," or an ",(0,a.jsx)("font",{className:"myred",children:"Activity"})," class:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"registerReceiver(barCodeReceiver, barCodeIntent)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"2-connection-status-event",children:"2. Connection status event"}),"\n",(0,a.jsxs)(n.p,{children:["You can get scanner connection state by registering to below action name ",(0,a.jsx)("font",{className:"mygreen",children:"com.datalogic.aladdinapp.intent.ACTION_SEND_SCANNER_STATE"})," and extras name as ",(0,a.jsx)("font",{className:"mygreen",children:"com.datalogic.aladdinapp.extra.SCANNER_STATE"})]}),"\n",(0,a.jsx)(n.p,{children:"Implement a broadcast receiver."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'class ScannerStateReceiver : BroadcastReceiver() {\n    override fun onReceive(context: Context, intent: Intent) {\n        if ("com.datalogic.aladdinapp.intent.ACTION_SEND_SCANNER_STATE" == intent.action) {\n            val data =\n              intent.getBooleanExtra("com.datalogic.aladdinapp.extra.SCANNER_STATE", false)\n            if (data) {\n                Toast.makeText(context, "Connected to scanner", Toast.LENGTH_SHORT).show()\n            } else {\n                Toast.makeText(context, "Disconnected from scanner", Toast.LENGTH_SHORT).show()\n            }\n        }\n    }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Define an ",(0,a.jsx)("font",{className:"myred",children:"IntentFilter"})," for the specified actions:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val scanStateReceiver = ScannerStateReceiver()\nval connectionStateIntent = \n  IntentFilter("com.datalogic.aladdinapp.intent.ACTION_SEND_SCANNER_STATE")\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Register the broadcast receiver instance with a context. The usual place for this call would be in the ",(0,a.jsx)("font",{className:"myred",children:"onCreate"})," method of a ",(0,a.jsx)("font",{className:"myred",children:"Service"})," or an ",(0,a.jsx)("font",{className:"myred",children:"Activity"})," class:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"registerReceiver(scanStateReceiver, connectionStateIntent)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"3-get-last-scan-data",children:"3. Get Last Scan Data"}),"\n",(0,a.jsxs)(n.p,{children:["You can get the last scanned data by sending the below broadcast. The Aladdin application will send the latest bar code details in following action: \u201c",(0,a.jsx)("font",{className:"mygreen",children:"com.datalogic.aladdinapp.intent.ACTION_SEND_BAR_CODE_DATA"}),"\u201d"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val intent = Intent("com.datalogic.aladdinapp.intent.ACTION_GET_LATEST_SCAN_DATA")\nsendBroadcast(intent)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"4-get-connection-state",children:"4. Get Connection State"}),"\n",(0,a.jsxs)(n.p,{children:["You can get the scanner connection state by sending the below broadcast. The Aladdin application will send the connection details in the following action: \u201c",(0,a.jsx)("font",{className:"mygreen",children:"com.datalogic.aladdinapp.intent.ACTION_SEND_SCANNER_STATE"}),"\u201d"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val intent = Intent("com.datalogic.aladdinapp.intent.ACTION_GET_SCANNER_STATE")\nsendBroadcast(intent)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"validating-the-integration",children:"Validating the Integration"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Select Intent as integration method in the Aladdin app."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"The Intent setting UI will appear with some pre-populated data. You can change the content of each input text field and tap the Save button to confirm. Please, note that each field should contain unique data and the same data should not be repeated."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Open the Intent client application."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'Tap the "Register to Aladdin" button.'}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"A pop-up will appear with 4 input pre-populated text fields. The name of each field must be the same you entered in step 2."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Intent_test_1",src:t(8340).Z+"",width:"219",height:"453"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Intent_test_2",src:t(83434).Z+"",width:"217",height:"413"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Intent_test_3",src:t(22418).Z+"",width:"219",height:"424"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"You can now scan any barcode/QR code with your HHS device. The barcode details will be displayed in a toast message in the client application."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Intent_test_4",src:t(31974).Z+"",width:"217",height:"481"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'You can also tap "Get latest bar code" and retrieve the last barcode data.'}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'To check the scanner status, tap "Get Scanner Status".'}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Intent_test_5",src:t(84383).Z+"",width:"219",height:"408"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'To unregister from the Aladdin application, tap "Unregister from Aladdin".'}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Intent_test_6",src:t(98923).Z+"",width:"213",height:"473"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"The client could register to Aladdin irrespective of any integration method selected in the application, but it cannot receive barcode data or connection state if Intent is not selected as integration method in Aladdin."}),"\n",(0,a.jsx)(n.li,{children:"If Intent is selected as integration method, but the barcode action name, barcode data, label type, scan time and extra names entered in the Aladdin app and in the intent client app are not the same, you will not be able to receive barcode events in the client app. You can only get the scanner status. You can unregister from Aladdin and then register anew with the same key values entered in the Aladdin app."}),"\n",(0,a.jsx)(n.li,{children:'If Intent is not selected as integration method in the Aladdin app and you try to register to the Intent client application, registration will be successful but the "Get latest bar code" and the "Get Scanner Status" buttons will be disabled and you will not be able to receive new barcode data scanned by HHS.'}),"\n",(0,a.jsx)(n.li,{children:'To ensure that you get proper barcode events in the client app, the key name for "barcode action", "barcode data extra name", "label type extra" and "scan time extra name" should be same in both Aladdin and Intent client app.'}),"\n",(0,a.jsx)(n.li,{children:"User input for barcode extra names (barcode data extra name, label type extra name and scan time extra name) should be unique."}),"\n",(0,a.jsx)(n.li,{children:"If all data are equal and unique in both client and Aladdin app, you will get the barcode details in the toast message."}),"\n",(0,a.jsx)(n.li,{children:"If the names of the barcode actions are not equal and the extra names are not matching in both Aladdin application and Intent client app, you will not receive the toast message."}),"\n",(0,a.jsx)(n.li,{children:"If the names of the actions are equal and the extra names are not matching in both Aladdin application and Intent client application, you will not receive the barcode data in the toast message. According to the toast message, you need to change the input data and try again."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}},8340:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/intent-test1-f3b6ef737c35a0f1f02efc09cf5fbaf4.png"},83434:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/intent-test2-a68eece74e60c0bc70daf59fa9f3e8f4.png"},22418:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/intent-test3-de8034f4ed1cf2a1e18ff6cd68bb68bc.png"},31974:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/intent-test4-c0e9314b1a9fc78ac5bbb2037dd3a5b9.png"},84383:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/intent-test5-97f625ee6da6b5194be9a725841453dd.png"},98923:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/intent-test6-4b8cd576eb74f9bbcd8f93f621ce8cf2.png"},32794:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/intent-e2e957e28f2f4b7baeee0cc35215e275.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var a=t(67294);const i={},l=a.createContext(i);function s(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);