"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[7176],{49180:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>k,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var l=a(85893),t=a(11151);const s={id:"prfparserjson",title:"Configuration Reference (prf_parser.json)",sidebar_label:"prf_parser.json"},r=void 0,i={id:"opos/configref/prfparserjson",title:"Configuration Reference (prf_parser.json)",description:"Overview",source:"@site/docs/opos/configref/prfparserjson.md",sourceDirName:"opos/configref",slug:"/opos/configref/prfparserjson",permalink:"/opos/configref/prfparserjson",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"prfparserjson",title:"Configuration Reference (prf_parser.json)",sidebar_label:"prf_parser.json"},sidebar:"OPOS",previous:{title:"ECICodePage.csv",permalink:"/opos/configref/ecicodepagecsv"},next:{title:"OPOS Registry Settings",permalink:"/opos/configref/registrysettings"}},o={},u=[{value:"Overview",id:"overview",level:2},{value:"Default configuration file",id:"default-configuration-file",level:2}];function m(n){const e={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(e.p,{children:"prf_parser.json resides in the Configuration folder of the OPOS installation and it is used by both OPOS and the DLRMUS application. Upon claiming a scanner, these applications issue Information, Health and Statistics (IHS) commands. The data returned by these commands is then interpreted and routed (to PRF and/or MOF files) based upon the properties defined in the file prf_parser.json"}),"\n",(0,l.jsx)(e.p,{children:"The following files are generated when claiming a scanner."}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{style:{textAlign:"center"},children:"Type"}),(0,l.jsx)(e.th,{style:{textAlign:"left"},children:"Explanation"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:".PRF"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"The name of the PRF file is based upon the selected Profile (e.g. USBScanner.PRF)"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:".MOF"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"The MOF is used to update Windows WMI and its name is based upon the selected Profile (e.g. USBScanner.MOF). You will not be able to view the MOF unless you disable the DLWMIService. However, disabling the DLWMIService also prevents OPOS from updating Windows WMI."})]})]})]}),"\n",(0,l.jsxs)(e.p,{children:["The visibility of each data item is controlled by its ",(0,l.jsx)("b",{children:"mask"})," property."]}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{style:{textAlign:"center"},children:"Mask"}),(0,l.jsx)(e.th,{style:{textAlign:"left"},children:"Effect"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"0"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Data appears in neither the PRF nor MOF"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"1"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Data appears only in the PRF"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"2"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Data appears only in the MOF"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{style:{textAlign:"center"},children:"3"}),(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"Data appears in both the PRF and MOF"})]})]})]}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsx)(e.tr,{children:(0,l.jsx)(e.th,{style:{textAlign:"left"},children:"Note"})})}),(0,l.jsx)(e.tbody,{children:(0,l.jsx)(e.tr,{children:(0,l.jsx)(e.td,{style:{textAlign:"left"},children:"The first bit of the TopModelNumber mask will always be set to 1, regardless of how its mask is set in the file."})})})]}),"\n",(0,l.jsxs)(e.p,{children:["As of DLRMUS 1.0.19, two new properties have been added: ",(0,l.jsx)(e.strong,{children:"complexValue"})," and ",(0,l.jsx)(e.strong,{children:"complexIdentifier"})," to support new methods for parsing IHS data."]}),"\n",(0,l.jsxs)(e.p,{children:["If the name given to a data field depends on what follows an initial field identifier, ",(0,l.jsx)(e.strong,{children:"complexIdentifier"})," is used to translate identifier combinations into a string."]}),"\n",(0,l.jsxs)(e.p,{children:["If the value given to a data field is intended to be determined by translating device output into a specific string, ",(0,l.jsx)(e.strong,{children:"complexValue"})," is used to match these patterns."]}),"\n",(0,l.jsx)(e.h2,{id:"default-configuration-file",children:"Default configuration file"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-json",children:'{\n  "Information": [\n    {\n      "key": "M",\n      "name": "TopModelNumber",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "S",\n      "name": "SerialNumber",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "m",\n      "name": "MainBoardNumber",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "A",\n      "name": "ApplicationROMID",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "R",\n      "name": "ApplicationRevisionLevel",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "C",\n      "name": "ConfigurationFileID",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "B",\n      "name": "BootloaderROMID",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "H",\n      "name": "HardwareID",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "h",\n      "name": "ConnectedDevices",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "s",\n      "name": "HandheldSerialNumber",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "c",\n      "name": "UIHardwareType",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "k",\n      "name": "UIHardwareDensity",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "U",\n      "name": "UniversalInterfaceApplicationROMID",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "u",\n      "name": "UniversalInterfaceBootloaderROMID",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "t",\n      "name": "FormatterVersion",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "d",\n      "name": "DWMSDKVersion",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "W",\n      "name": "InternalScaleInformation",\n      "value": null,\n      "mask": 0\n    },\n    {\n      "key": "D",\n      "name": "RemoteDisplayVersion",\n      "value": null,\n      "mask": 0\n    },\n    {\n      "key": "E",\n      "name": "SmartEASVersion",\n      "value": null,\n      "mask": 1\n    },\n    {\n      "key": "I",\n      "name": "Interface",\n      "value": "Unknown",\n      "complexValue": {\n        "05": "RS232",\n        "4": "IBM-4683 Port 17",\n        "5": "RS232-STD",\n        "8": "IBM-4683 Port 5B",\n        "10": "USB-COM-RS232-DL",\n        "12": "RS232-WN",\n        "1e": "USB-COM-SC",\n        "20": "RS232-SC",\n        "23": "IBM-4683 Port 9B",\n        "35": "USB Keyboard",\n        "45": "OEM USB",\n        "47": "USB-COM",\n        "77": "USB-HID"\n      },\n      "mask": 3\n    },\n    {\n      "key": "r",\n      "name": "RFScannerRadioVersion",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "L",\n      "name": "SecondScannerVersion",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "b",\n      "name": "SecondScannerBootloader",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "X",\n      "name": "SecondModelNumber",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "V",\n      "name": "VisionLibraryVersion",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "v",\n      "name": "VirtualScanLineLibraryVersion",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "F",\n      "name": "FPGAVersion",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "Q",\n      "name": "SDRAMCfgVersion",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "P",\n      "name": "IPEAppVersion",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "T",\n      "name": "TDRType",\n      "value": "Unknown",\n      "complexValue": {\n        "I1": "T7 IR TDR",\n        "I2": "T8.2 IR TDR",\n        "I3": "T9 IR TDR",\n        "I4": "T12 IR TDR",\n        "I": "Unknown TDR Status",\n        "N1": "7 Standard TDR",\n        "N2": "8.2 Standard TDR",\n        "N3": "9 Standard TDR",\n        "N4": "12 Standard TDR",\n        "N": "Unknown TDR Status",\n        "L0": "Legacy TDR (height unknown)",\n        "LO": "Legacy TDR (height unknown)",\n        "L": "Unknown TDR Status",\n        "U0": "TDR preset: undefined height",\n        "U": "Unknown TDR Status",\n        "??": "TDR present: not ready yet",\n        "?": "Unknown TDR Status"\n      },\n      "mask": 3\n    },\n    {\n      "key": "f",\n      "name": "TDRFPGAVersion",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "l",\n      "name": "USBLoaderVersion",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "i",\n      "name": "InterfaceNumHandhelds",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "Y",\n      "name": "SecondSerialNumber",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "Z",\n      "name": "SecondSoftwareVersionNumber",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "N",\n      "name": "NumConnSatDevices",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "q",\n      "name": "SoftwareID",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "n",\n      "name": "SatelliteDeviceType",\n      "value": null,\n      "complexIdentifier": {\n        "n1" :  "Satellite1DeviceType",\n        "n2" :  "Satellite2DeviceType",\n        "n3" :  "Satellite3DeviceType"\n      },\n      "complexValue": {\n        "T": "TDR",\n        "O": "CCMH",\n        "o": "CCMV"\n      },\n      "mask": 3\n    },\n    {\n      "key": "p",\n      "name": "SatellitePCBSerial",\n      "value": null,\n      "complexIdentifier": {\n        "p1" :  "Satellite1PCBSerial",\n        "p2" :  "Satellite2PCBSerial",\n        "p3" :  "Satellite3PCBSerial"\n      },\n      "mask": 3\n    },\n    {\n      "key": "x",\n      "name": "SatelliteFocusedSerial",\n      "value": null,\n      "complexIdentifier": {\n        "x1" :  "Satellite1FocusedSerial",\n        "x2" :  "Satellite2FocusedSerial",\n        "x3" :  "Satellite3FocusedSerial"\n      },\n      "mask": 3\n    },\n    {\n      "key": "a",\n      "name": "SatelliteAssemblySerial",\n      "value": null,\n      "complexIdentifier": {\n        "a1" :  "Satellite1AssemblySerial",\n        "a2" :  "Satellite2AssemblySerial",\n        "a3" :  "Satellite3AssemblySerial"\n      },\n      "mask": 3\n    },\n    {\n      "key": "z",\n      "name": "SatelliteSoftwareVer",\n      "value": null,\n      "complexIdentifier": {\n        "z1" :  "Satellite1SoftwareVer",\n        "z2" :  "Satellite2SoftwareVer",\n        "z3" :  "Satellite3SoftwareVer"\n      },\n      "mask": 3\n    },\n    {\n      "key": "Batt_DesCap",\n      "name": "Batt_DesCap",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "Batt_Year",\n      "name": "Batt_Year",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "Batt_Month",\n      "name": "Batt_Month",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "Batt_SN",\n      "name": "Batt_SN",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "Batt_Model",\n      "name": "Batt_Model",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "!Dev",\n      "name": "DeviceCategory",\n      "value": "",\n      "mask": 3\n    },\n    {\n      "key": "!Mfg",\n      "name": "ManufacturerName",\n      "value": "Datalogic S.r.l.",\n      "mask": 3\n    },\n    {\n      "key": "!Mod",\n      "name": "ModelName",\n      "value": "",\n      "mask": 3\n    },\n    {\n      "key": "!DevName",\n      "name": "PhysicalDeviceName",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "!FWRev",\n      "name": "FirmwareRevision",\n      "value": null,\n      "mask": 3\n    }\n  ],\n  "Health": [\n    {\n      "key": "m",\n      "name": "MotorHealth",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "h",\n      "name": "HorizontalLaserHealth",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "v",\n      "name": "VerticalLaserHealth",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "s",\n      "name": "ScaleHealth",\n      "value": null,\n      "mask": 0\n    },\n    {\n      "key": "d",\n      "name": "RemoteDisplayHealth",\n      "value": null,\n      "mask": 0\n    },\n    {\n      "key": "e",\n      "name": "EASSystemHealth",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "c",\n      "name": "CameraHealth",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "r",\n      "name": "RadioHealth",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "H",\n      "name": "USBHandheldConnected",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "D",\n      "name": "USBSerialDongleConnected",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "0",\n      "name": "IPE0Health",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "1",\n      "name": "IPE1Health",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "2",\n      "name": "IPE2Health",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "3",\n      "name": "IPE3Health",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "S",\n      "name": "ScaleSentryHealth",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "i",\n      "name": "ImagerHealth",\n      "value": null,\n      "complexIdentifier": {\n        "i1" :  "Imager1Health",\n        "i2" :  "Imager2Health",\n        "i3" :  "Imager3Health",\n        "i4" :  "Imager4Health"\n      },\n      "mask": 3\n    },\n    {\n      "key": "T",\n      "name": "TDRConnectionStatus",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "O",\n      "name": "CCMHConnectionStatus",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "o",\n      "name": "CCMVConnectionStatus",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "Batt_RealT",\n      "name": "Batt_RealT",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "Batt_RealV",\n      "name": "Batt_RealV",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "Batt_RealC",\n      "name": "Batt_RealC",\n      "value": null,\n      "mask": 3\n    }\n\n  ],\n  "Statistics": [\n    {\n      "key": "P",\n      "name": "PowerOnHours",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "m",\n      "name": "MotorOnTime",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "l",\n      "name": "LaserOnTime",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "L",\n      "name": "GoodScanCount",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "C",\n      "name": "CustomData",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "e",\n      "name": "EASManualCount",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "E",\n      "name": "EASDeactivateCount",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "B",\n      "name": "NumberBatteryChargingCycles",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "T",\n      "name": "NumberTriggerPulls",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "K",\n      "name": "NumberKeyPresses",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "R",\n      "name": "TotalResets",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "r",\n      "name": "ErrorResets",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "V",\n      "name": "VerticalIPEForcedResets",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "H",\n      "name": "HorizontalIPEForcedResets",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "D",\n      "name": "Forced2DResets",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "Q",\n      "name": "TDRForcedResets",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "v",\n      "name": "VerticalIPEExcessiveResets",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "h",\n      "name": "HorizontalIPEExcessiveResets",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "d",\n      "name": "Excessive2DResets",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "q",\n      "name": "TDRExcessiveEesets",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "Z",\n      "name": "POSInitiatedZeroRequests",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "X",\n      "name": "EnforcedZeroEvents",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "S",\n      "name": "ScaleSentryEvents",\n      "value": null,\n      "type": 1,\n      "mask": 0\n    },\n    {\n      "key": "Y",\n      "name": "EASRuntimeFaults",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "I",\n      "name": "BaseIPEDisconnects",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "t",\n      "name": "TDRDisconnects",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "O",\n      "name": "CCMVDisconnects",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "o",\n      "name": "CCMHDisconnects",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "b",\n      "name": "BatteryHealth",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "s",\n      "name": "BatteryChargeStatus",\n      "value": null,\n      "type": 1,\n      "mask": 3\n    },\n    {\n      "key": "c",\n      "name": "ScaleCalibrationAttempts",\n      "value": null,\n      "type": 1,\n      "mask": 0\n    },\n    {\n      "key": "z",\n      "name": "ScaleZeroAttempts",\n      "value": null,\n      "mask": 0\n    },\n    {\n      "key": "Batt_SoC",\n      "name": "Batt_SoC",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "Batt_SoH",\n      "name": "Batt_SoH",\n      "value": null,\n      "mask": 3\n    },\n    {\n      "key": "Crad_IsInserted",\n      "name": "Crad_IsInserted",\n      "value": null,\n      "mask": 3\n    }\n  ]\n}\n'})})]})}function k(n={}){const{wrapper:e}={...(0,t.a)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(m,{...n})}):m(n)}},11151:(n,e,a)=>{a.d(e,{Z:()=>i,a:()=>r});var l=a(67294);const t={},s=l.createContext(t);function r(n){const e=l.useContext(s);return l.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),l.createElement(s.Provider,{value:e},n.children)}}}]);