"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[4376],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=s(r),m=a,f=g["".concat(c,".").concat(m)]||g[m]||p[m]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[g]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},58835:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return g}});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),i=["components"],l={title:"Datalogic Logger 1.00.2",author:"Datalogic Logger",author_image_url:"/img/homepage/home-logger.svg",author_url:"/logger/overview",tags:["logger"]},c=void 0,s={permalink:"/releases/2021/11/01/logger",source:"@site/blog/2021-11-01-logger.md",title:"Datalogic Logger 1.00.2",description:"Datalogic Logger is now available.  It is an Android application designed to collect information logged by various software components to assist in diagnosing issues.  Once started, it runs in the background with minimal impact to device performance.  When complete, an archive of the results is generated, which can be exported from the device for further study.  You can access the documentation here.",date:"2021-11-01T00:00:00.000Z",formattedDate:"November 1, 2021",tags:[{label:"logger",permalink:"/releases/tags/logger"}],readingTime:.745,hasTruncateMarker:!1,authors:[{name:"Datalogic Logger",url:"/logger/overview",imageURL:"/img/homepage/home-logger.svg"}],frontMatter:{title:"Datalogic Logger 1.00.2",author:"Datalogic Logger",author_image_url:"/img/homepage/home-logger.svg",author_url:"/logger/overview",tags:["logger"]},prevItem:{title:"Xamarin SDK 1.29.8975",permalink:"/releases/2021/12/06/xamarin-sdk-v1.29"},nextItem:{title:"JavaPOS 1.14.066 (1.14.12-066)",permalink:"/releases/2021/10/20/javapos-1.14.066"}},u={authorsImageUrls:[void 0]},g=[],p={toc:g},m="wrapper";function f(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)(m,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Datalogic Logger is now available.  It is an Android application designed to collect information logged by various software components to assist in diagnosing issues.  Once started, it runs in the background with minimal impact to device performance.  When complete, an archive of the results is generated, which can be exported from the device for further study.  You can access the ",(0,o.kt)("a",{parentName:"p",href:"/logger/overview"},"documentation here"),"."),(0,o.kt)("p",null,"The features available in the initial release are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Logcat module",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Collect data from Logcat messages generated from applications and services."),(0,o.kt)("li",{parentName:"ul"},"Filter reocrded content by package, tag and/or priority."))),(0,o.kt)("li",{parentName:"ul"},"Kernel module",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Collect data from other core Android system services."))),(0,o.kt)("li",{parentName:"ul"},"Export logs",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Log files can be sent from the device to SD Card or remote server."))),(0,o.kt)("li",{parentName:"ul"},"External control",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Configurable from device, Scan2Deploy Studio or EMM console."),(0,o.kt)("li",{parentName:"ul"},"API available to start or stop a log session, and export log files.")))))}f.isMDXComponent=!0}}]);