"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[95721],{90477:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var c=i(85893),s=i(11151);const t={id:"codiscan-sdk",title:"CodiscanSDK"},d=void 0,a={id:"aladdin/codiscan/codiscan-sdk",title:"CodiscanSDK",description:"Summary",source:"@site/docs/aladdin/codiscan/codiscan-sdk.md",sourceDirName:"aladdin/codiscan",slug:"/aladdin/codiscan/codiscan-sdk",permalink:"/aladdin/codiscan/codiscan-sdk",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"codiscan-sdk",title:"CodiscanSDK"},sidebar:"Aladdin",previous:{title:"Overview",permalink:"/aladdin/codiscan/overview"},next:{title:"DeviceManager",permalink:"/aladdin/codiscan/device"}},r={},l=[{value:"Summary",id:"summary",level:2},{value:"Functions",id:"functions",level:3},{value:"Management Classes",id:"management-classes",level:3},{value:"Functions",id:"functions-1",level:2},{value:"bindService",id:"bindservice",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Example",id:"example",level:4},{value:"unbindService",id:"unbindservice",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Example",id:"example-1",level:4}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,c.jsx)(n.p,{children:"The CODiScan\u2122 HS7600 SDK empowers users to write Android applications that interface with a connected CODiScan\u2122 HS7600 wearable Bluetooth bar code reader."}),"\n",(0,c.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Function"}),(0,c.jsx)(n.th,{children:"Description"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:(0,c.jsx)(n.a,{href:"#bindservice",children:(0,c.jsx)(n.strong,{children:"bindService"})})}),(0,c.jsx)(n.td,{children:"Binds a given Context to the CODiScan service."})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:(0,c.jsx)(n.a,{href:"#unbindservice",children:(0,c.jsx)(n.strong,{children:"unbindService"})})}),(0,c.jsx)(n.td,{children:"Unbind the CODiScan service from the given Context."})]})]})]}),"\n",(0,c.jsx)(n.h3,{id:"management-classes",children:"Management Classes"}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Classes"}),(0,c.jsx)(n.th,{children:"Description"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:(0,c.jsx)(n.a,{href:"/aladdin/codiscan/device",children:(0,c.jsx)(n.strong,{children:"DeviceManager"})})}),(0,c.jsx)(n.td,{children:"Management class for the CODiScan device. Used to pair with a CODiScan device, request CODiScan device data, and trigger the findMe function."})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:(0,c.jsx)(n.a,{href:"/aladdin/codiscan/configuration",children:(0,c.jsx)(n.strong,{children:"ConfigurationManager"})})}),(0,c.jsx)(n.td,{children:"Management class to set/get configuration values of a connected CODiScan device."})]})]})]}),"\n",(0,c.jsx)(n.h2,{id:"functions-1",children:"Functions"}),"\n",(0,c.jsx)(n.h3,{id:"bindservice",children:"bindService"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-kotlin",children:"fun bindService(ctx: Context, callback: () -> Unit = {})\n"})}),"\n",(0,c.jsx)(n.p,{children:"Binds a given Context to the CODiScan service."}),"\n",(0,c.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"ctx - the given Context to which the CODiScan service is to be bound to."}),"\n",(0,c.jsx)(n.li,{children:"callback - called when the CODiScan service is connected and bound to the given Context."}),"\n"]}),"\n",(0,c.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-kotlin",children:"codiscanSDK.bindService(this){\n    codiscanSDK.deviceManager.registerPairingCodeListener(this)\n}\n"})}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h3,{id:"unbindservice",children:"unbindService"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-kotlin",children:"fun unbindService(ctx: Context)\n"})}),"\n",(0,c.jsx)(n.p,{children:"Unbind the CODiScan service from the given Context."}),"\n",(0,c.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"ctx - the given Context to which the CODiScan service is to be unbound from."}),"\n"]}),"\n",(0,c.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-kotlin",children:"codiscanSDK.unbindService(this)\n"})}),"\n",(0,c.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(o,{...e})}):o(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>d});var c=i(67294);const s={},t=c.createContext(s);function d(e){const n=c.useContext(t);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),c.createElement(t.Provider,{value:n},e.children)}}}]);