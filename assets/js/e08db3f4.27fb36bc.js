"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[6699],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return c}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),k=s(n),m=r,c=k["".concat(o,".").concat(m)]||k[m]||u[m]||l;return n?a.createElement(c,i(i({ref:t},p),{},{components:n})):a.createElement(c,i({ref:t},p))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[k]="string"==typeof e?e:r,i[1]=d;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},16784:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return d},metadata:function(){return s},toc:function(){return k}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),i=["components"],d={title:"Android HTTP API",id:"android-http-api",sidebar_label:"HTTP API"},o=void 0,s={unversionedId:"dxu/android-http-api",id:"dxu/android-http-api",title:"Android HTTP API",description:"While DXU Service is enabled and running, DXU Android provides an HTTP endpoint that can be used by local applications to control the scanner. This is useful for web-based applications that need to be able to control the scanner.",source:"@site/docs/dxu/android-http-api.md",sourceDirName:"dxu",slug:"/dxu/android-http-api",permalink:"/dxu/android-http-api",draft:!1,tags:[],version:"current",frontMatter:{title:"Android HTTP API",id:"android-http-api",sidebar_label:"HTTP API"},sidebar:"DXU",previous:{title:"Android",permalink:"/dxu/android"},next:{title:"Intents",permalink:"/dxu/android-intents"}},p={},k=[{value:"Conventions",id:"conventions",level:2},{value:"APIs",id:"apis",level:2},{value:"Start scan trigger",id:"start-scan-trigger",level:3},{value:"Release scan trigger",id:"release-scan-trigger",level:3},{value:"Register scan start listener",id:"register-scan-start-listener",level:3},{value:"Register stop scan listener",id:"register-stop-scan-listener",level:3},{value:"Register a scan timeout listener",id:"register-a-scan-timeout-listener",level:3},{value:"Register a scan read listener",id:"register-a-scan-read-listener",level:3},{value:"Disable all physical triggers",id:"disable-all-physical-triggers",level:3},{value:"Enable all physical triggers",id:"enable-all-physical-triggers",level:3},{value:"Disable keyboard wedge",id:"disable-keyboard-wedge",level:3},{value:"Enable keyboard wedge",id:"enable-keyboard-wedge",level:3}],u={toc:k},m="wrapper";function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)(m,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"While ",(0,l.kt)("inlineCode",{parentName:"p"},"DXU Service")," is enabled and running, DXU Android provides an HTTP endpoint that can be used by local applications to control the scanner. This is useful for web-based applications that need to be able to control the scanner."),(0,l.kt)("h2",{id:"conventions"},"Conventions"),(0,l.kt)("p",null,"In the documentation below, the following conventions are used:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"dxuPort")," is used to indicate the port on which DXU is running. The default value is ",(0,l.kt)("inlineCode",{parentName:"p"},"8080"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Only ",(0,l.kt)("inlineCode",{parentName:"p"},"localhost")," connections are allowed, i.e. connections to ",(0,l.kt)("inlineCode",{parentName:"p"},"http://127.0.0.1:dxuPort/scan"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"All APIs, unless otherwise noted, are ",(0,l.kt)("inlineCode",{parentName:"p"},"HTTP GET")," methods.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"API responses return no content unless otherwise indicated."))),(0,l.kt)("h2",{id:"apis"},"APIs"),(0,l.kt)("h3",{id:"start-scan-trigger"},"Start scan trigger"),(0,l.kt)("p",null,"Causes the device's scanner to turn on and scan a barcode."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URI"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"/scan?action=start_trigger")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Optional Query Parameters")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"timeout=[integer]")," where ",(0,l.kt)("inlineCode",{parentName:"td"},"timeout")," is the number of milliseconds delay before the barcode scan attempt times out. Default value is ",(0,l.kt)("inlineCode",{parentName:"td"},"3000")," (3 seconds).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Success Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"200 OK")," when the scanner could be turned on.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Error Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"500 INTERNAL SERVER ERROR")," when the scanner could not be turned on.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Available since")),(0,l.kt)("td",{parentName:"tr",align:null},"DXU Agent 1.0")))),(0,l.kt)("h3",{id:"release-scan-trigger"},"Release scan trigger"),(0,l.kt)("p",null,"Causes the device's scanner to turn off and stop any barcode scan attempt in progress."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URI"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"/scan?action=stop_trigger")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Success Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"200 OK")," when the scanner could be turned off.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Error Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"500 INTERNAL SERVER ERROR")," when the scanner could not be turned off.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Available since")),(0,l.kt)("td",{parentName:"tr",align:null},"DXU Agent 1.0")))),(0,l.kt)("h3",{id:"register-scan-start-listener"},"Register scan start listener"),(0,l.kt)("p",null,"Register a scan start listener to be notified when a scan started event is triggered."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URI"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"/scan?action=start_listener")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Success Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"200 OK")," when the listener could be registered")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Error Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"500 INTERNAL SERVER ERROR")," when the listener could not be registered")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Available since")),(0,l.kt)("td",{parentName:"tr",align:null},"DXU Agent 1.0")))),(0,l.kt)("h3",{id:"register-stop-scan-listener"},"Register stop scan listener"),(0,l.kt)("p",null,"Register a scan stop listener to be notified when a scan stopped event is triggered."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URI"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"/scan?action=stop_listener")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Success Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"200 OK")," when the listener could be registered")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Error Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"500 INTERNAL SERVER ERROR")," when the listener could not be registered")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Available since")),(0,l.kt)("td",{parentName:"tr",align:null},"DXU Agent 1.0")))),(0,l.kt)("h3",{id:"register-a-scan-timeout-listener"},"Register a scan timeout listener"),(0,l.kt)("p",null,"Register a scan timeout listener to be notified when a scan timeout event is triggered."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URI"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"/scan?action=timeout_listener")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Success Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"200 OK")," when the listener could be registered")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Error Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"500 INTERNAL SERVER ERROR")," when the listener could not be registered")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Available since")),(0,l.kt)("td",{parentName:"tr",align:null},"DXU Agent 1.0")))),(0,l.kt)("h3",{id:"register-a-scan-read-listener"},"Register a scan read listener"),(0,l.kt)("p",null,"Register a scan read listener to be notified when a read event is triggered and received data is ready"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URI"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"/scan?action=read_listener")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Optional Query Parameters")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"output=[value]")," where ",(0,l.kt)("inlineCode",{parentName:"td"},"output")," specifies the format in which the barcode data should be returned. The default value is ",(0,l.kt)("inlineCode",{parentName:"td"},"text"),". Valid values are ",(0,l.kt)("inlineCode",{parentName:"td"},"text"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"json")," and ",(0,l.kt)("inlineCode",{parentName:"td"},"xml"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Success Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"200 OK")," when data is available. Data is returned in the format specified using the ",(0,l.kt)("inlineCode",{parentName:"td"},"output")," parameter. ",(0,l.kt)("br",null),(0,l.kt)("br",null)," ",(0,l.kt)("strong",{parentName:"td"},"text example:"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"353309092150281")," ",(0,l.kt)("br",null),(0,l.kt)("br",null)," ",(0,l.kt)("strong",{parentName:"td"},"json example:"),(0,l.kt)("br",null),'{"codeID":7,"dataAsText":"353309092150281\\n","rawData":',"[51,53,51,51,48,57,48,57,50,49,53,48,50,56,49]","}",(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"xml example:"),(0,l.kt)("br",null)," \\<com.datalogic.decode.Barcode",">",(0,l.kt)("br",null),"\\<codeID",">","7\\</codeID",">",(0,l.kt)("br",null),"  \\<dataAsText",">","353309092150281 \\</dataAsText",">",(0,l.kt)("br",null)," \\<rawData",">","MzUzMzA5MDkyMTUwMjgx\\</rawData",">",(0,l.kt)("br",null),"\\</com.datalogic.decode.Barcode",">",(0,l.kt)("br",null),(0,l.kt)("br",null))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Error Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"500 INTERNAL SERVER ERROR")," when the data could not be retrieved.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Available since")),(0,l.kt)("td",{parentName:"tr",align:null},"DXU Agent 1.0")))),(0,l.kt)("h3",{id:"disable-all-physical-triggers"},"Disable all physical triggers"),(0,l.kt)("p",null,"Use to disable all physical triggers on the device."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URI"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"/scan?action=disable_all_triggers")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Success Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"200 OK")," when the physical triggers were successfully disabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Error Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"500 INTERNAL SERVER ERROR")," when the physical triggers couldn't be disabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Available since")),(0,l.kt)("td",{parentName:"tr",align:null},"DXU Agent 1.29")))),(0,l.kt)("h3",{id:"enable-all-physical-triggers"},"Enable all physical triggers"),(0,l.kt)("p",null,"Use to enable all physical triggers on the device."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URI"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"/scan?action=enable_all_triggers")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Success Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"200 OK")," when the physical triggers were successfully enabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Error Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"500 INTERNAL SERVER ERROR")," when the physical triggers couldn't be enabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Available since")),(0,l.kt)("td",{parentName:"tr",align:null},"DXU Agent 1.29")))),(0,l.kt)("h3",{id:"disable-keyboard-wedge"},"Disable keyboard wedge"),(0,l.kt)("p",null,"Use to disable the keyboard wedge feature."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URI"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"/scan?action=disable_keyboardWedge")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Success Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"200 OK")," when keyboard wedge was successfully disabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Error Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"500 INTERNAL SERVER ERROR")," when keyboard wedge couldn't be disabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Available since")),(0,l.kt)("td",{parentName:"tr",align:null},"DXU Agent 1.29")))),(0,l.kt)("h3",{id:"enable-keyboard-wedge"},"Enable keyboard wedge"),(0,l.kt)("p",null,"Use to enable the keyboard wedge feature."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URI"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"/scan?action=disable_keyboardWedge")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Success Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"200 OK")," when keyboard wedge was successfully enabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Error Response")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"500 INTERNAL SERVER ERROR")," when keyboard wedge couldn't be enabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Available since")),(0,l.kt)("td",{parentName:"tr",align:null},"DXU Agent 1.29")))))}c.isMDXComponent=!0}}]);