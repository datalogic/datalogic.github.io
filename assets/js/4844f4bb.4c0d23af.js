"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[9399],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return g}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(r),v=a,g=d["".concat(l,".").concat(v)]||d[v]||s[v]||o;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=v;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},47471:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return d}});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),i=["components"],c={id:"overview",title:"Cordova SDK",sidebar_label:"Overview"},l=void 0,p={unversionedId:"cordova/overview",id:"cordova/overview",title:"Cordova SDK",description:"The Datalogic Cordova SDK is distributed using npm.  More information can be found below.",source:"@site/docs/cordova/overview.md",sourceDirName:"cordova",slug:"/cordova/overview",permalink:"/cordova/overview",draft:!1,tags:[],version:"current",frontMatter:{id:"overview",title:"Cordova SDK",sidebar_label:"Overview"},sidebar:"CordovaSDK",next:{title:"Frequently Asked Questions",permalink:"/cordova/faq"}},u={},d=[{value:"Installation",id:"installation",level:2}],s={toc:d},v="wrapper";function g(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)(v,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Distribution",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The Datalogic Cordova SDK is distributed using ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@datalogic/cordova-plugin-datalogic"},"npm"),".  More information can be found ",(0,o.kt)("a",{parentName:"p",href:"/cordova/overview#installation"},"below"),".")),(0,o.kt)("p",null,"Library that exposes the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/datalogic/datalogic-android-sdk"},"Datalogic Android (Java) SDK")," as a ",(0,o.kt)("a",{parentName:"p",href:"https://cordova.apache.org/plugins/?q=cordova-plugin-datalogic"},"Cordova plugin"),". It lets you receive barcode data from the scanner, as well as configure various scanner and device settings. It is available as a npm package for easy consumption here: ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@datalogic/cordova-plugin-datalogic"},"@datalogic/cordova-plugin-datalogic"),"."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"You can install the plugin from the ",(0,o.kt)("inlineCode",{parentName:"p"},"npm")," registry as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @datalogic/cordova-plugin-datalogic\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"...or"))," use the following Cordova CLI command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cordova plugin add @datalogic/cordova-plugin-datalogic\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"or,"))," if you are using ionic, this ionic command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ionic cordova plugin add @datalogic/cordova-plugin-datalogic\n")))}g.isMDXComponent=!0}}]);