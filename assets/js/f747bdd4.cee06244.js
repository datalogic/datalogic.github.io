"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[94178],{51739:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>x,frontMatter:()=>c,metadata:()=>d,toc:()=>h});var a=t(85893),i=t(11151),l=t(74866),r=t(85162),s=t(10993);const c={id:"intent-integration",title:"Intent Integration",sidebar_label:"Intent"},o=void 0,d={id:"aladdin/intent-integration",title:"Intent Integration",description:"Overview",source:"@site/docs/aladdin/intent-integration.mdx",sourceDirName:"aladdin",slug:"/aladdin/intent-integration",permalink:"/aladdin/intent-integration",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"intent-integration",title:"Intent Integration",sidebar_label:"Intent"},sidebar:"Aladdin",previous:{title:"Aladdin SDK",permalink:"/aladdin/sdk-integration"},next:{title:"Web Socket",permalink:"/aladdin/web-socket"}},u={},h=[{value:"Overview",id:"overview",level:2},{value:"Intent Integration in Aladdin",id:"intent-integration-in-aladdin",level:2},{value:"Client Application Implementation",id:"client-application-implementation",level:2},{value:"Barcode event",id:"barcode-event",level:3},{value:"Connection status event",id:"connection-status-event",level:3},{value:"Get Latest Scan Data",id:"get-latest-scan-data",level:3},{value:"Get Connection State",id:"get-connection-state",level:3},{value:"Intent Sample Client",id:"intent-sample-client",level:2}];function p(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(n.p,{children:"This section outlines the capabilities of the intent integration, which facilitates seamless integration with the Android Aladdin application. Intent integration provides a sophisticated registering model, enabling developers to efficiently receive and manage scanned data. With built-in functionalities for sharing data, developers gain a professional and adaptable solution for incorporating scanned data into their applications."}),"\n",(0,a.jsx)(n.h2,{id:"intent-integration-in-aladdin",children:"Intent Integration in Aladdin"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Select the Intent option in the Integration UI of Aladdin application."}),"\n",(0,a.jsx)(s.f5,{img:"/img/aladdin/integration-method-intent.png"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"A UI will appear to enter the names for the barcode action, barcode data, label type and scan time extra name in their respective input fields. The input fields will be pre-populated with default names, but can be modified to fit your needs."}),"\n",(0,a.jsx)(s.f5,{img:"/img/aladdin/integration-intent-settings.png"}),"\n",(0,a.jsx)(n.p,{children:"Below are the default values used in Aladdin app:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Barcode event action name: ",(0,a.jsx)("font",{className:"mygreen",children:(0,a.jsx)(n.code,{children:"COM.DATALOGIC.ALADDINAPP.INTENT.ACTION_SEND_BAR_CODE_DATA"})})]}),"\n",(0,a.jsxs)(n.li,{children:["Barcode data extra name: ",(0,a.jsx)("font",{className:"mygreen",children:(0,a.jsx)(n.code,{children:"COM.DATALOGIC.ALADDINAPP.EXTRA.BARCODE_DATA"})})]}),"\n",(0,a.jsxs)(n.li,{children:["Barcode label type extra name: ",(0,a.jsx)("font",{className:"mygreen",children:(0,a.jsx)(n.code,{children:"COM.DATALOGIC.ALADDINAPP.EXTRA.BARCODE_CODE_TYPE"})})]}),"\n",(0,a.jsxs)(n.li,{children:["Barcode scan time extra name: ",(0,a.jsx)("font",{className:"mygreen",children:(0,a.jsx)(n.code,{children:"COM.DATALOGIC.ALADDINAPP.EXTRA.BARCODE_SCAN_TIME"})})]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'Click "Save".  Now, whenever the CODiScan scans a barcode, the application will send a broadcast with the barcode event action name and intent extra names which you entered in step 2.'}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"client-application-implementation",children:"Client Application Implementation"}),"\n",(0,a.jsx)(n.h3,{id:"barcode-event",children:"Barcode event"}),"\n",(0,a.jsx)(n.p,{children:"To receive a barcode event in the client application, the client must implement a broadcast receiver with the action and extras names that you entered in the Aladdin application."}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsxs)(l.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,a.jsx)(r.Z,{value:"kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'class BarCodeReceiver : BroadcastReceiver() {\n\n    override fun onReceive(context: Context, intent: Intent) {\n\n        if ("COM.DATALOGIC.ALADDINAPP.INTENT.ACTION_SEND_BAR_CODE_DATA" == intent.action) {\n\n            val data = intent.getStringExtra("COM.DATALOGIC.ALADDINAPP.EXTRA.BARCODE_DATA")\n\n            val codeType = intent.getStringExtra("COM.DATALOGIC.ALADDINAPP.EXTRA.BARCODE_CODE_TYPE")\n\n            val scanTime = intent.getLongExtra("COM.DATALOGIC.ALADDINAPP.EXTRA.BARCODE_SCAN_TIME", 0L)\n\n            Toast.makeText(context, data, Toast.LENGTH_SHORT).show()\n        }\n    }\n}\n'})})}),(0,a.jsx)(r.Z,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'class BarCodeReceiver extends BroadcastReceiver {\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        if ("COM.DATALOGIC.ALADDINAPP.INTENT.ACTION_SEND_BAR_CODE_DATA" == intent.getAction()) {\n\n            String data = intent.getStringExtra("COM.DATALOGIC.ALADDINAPP.EXTRA.BARCODE_DATA")\n\n            String codeType = intent.getStringExtra("COM.DATALOGIC.ALADDINAPP.EXTRA.BARCODE_CODE_TYPE")\n\n            long scanTime = intent.getLongExtra("COM.DATALOGIC.ALADDINAPP.EXTRA.BARCODE_SCAN_TIME", 0L)\n\n            Toast.makeText(context, data, Toast.LENGTH_SHORT).show()\n        }\n    }\n}\n'})})})]}),"\n",(0,a.jsxs)(n.p,{children:["Define an ",(0,a.jsx)("font",{className:"myred",children:(0,a.jsx)(n.code,{children:"IntentFilter"})})," for the specified actions:"]}),"\n",(0,a.jsxs)(l.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,a.jsx)(r.Z,{value:"kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val barCodeReceiver = BarCodeReceiver()\n\nval barCodeIntent = IntentFilter("COM.DATALOGIC.ALADDINAPP.INTENT.ACTION_SEND_BAR_CODE_DATA")\n'})})}),(0,a.jsx)(r.Z,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'BarCodeReceiver barCodeReceiver = new BarCodeReceiver();\n\nIntentFilter barCodeIntent = new IntentFilter("COM.DATALOGIC.ALADDINAPP.INTENT.ACTION_SEND_BAR_CODE_DATA");\n'})})})]}),"\n",(0,a.jsxs)(n.p,{children:["Register the broadcast receiver instance, the usual place for this call would be in the ",(0,a.jsx)("font",{className:"myred",children:(0,a.jsx)(n.code,{children:"onCreate"})})," method of a ",(0,a.jsx)("font",{className:"myred",children:"Service"})," or ",(0,a.jsx)("font",{className:"myred",children:"Activity"})," class:"]}),"\n",(0,a.jsxs)(l.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,a.jsx)(r.Z,{value:"kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"registerReceiver(barCodeReceiver, barCodeIntent)\n"})})}),(0,a.jsx)(r.Z,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"registerReceiver(barCodeReceiver, barCodeIntent);\n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"connection-status-event",children:"Connection status event"}),"\n",(0,a.jsxs)(n.p,{children:["You can get the scanner connection state by registering a receiver for the action name ",(0,a.jsx)("font",{className:"mygreen",children:(0,a.jsx)(n.code,{children:"com.datalogic.aladdinapp.intent.ACTION_SEND_SCANNER_STATE"})})," with extra ",(0,a.jsx)("font",{className:"mygreen",children:(0,a.jsx)(n.code,{children:"com.datalogic.aladdinapp.extra.SCANNER_STATE"})})]}),"\n",(0,a.jsx)(n.p,{children:"Implement a broadcast receiver:"}),"\n",(0,a.jsxs)(l.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,a.jsx)(r.Z,{value:"kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'class ScannerStateReceiver : BroadcastReceiver() {\n    override fun onReceive(context: Context, intent: Intent) {\n        if ("com.datalogic.aladdinapp.intent.ACTION_SEND_SCANNER_STATE" == intent.action) {\n            val connected =\n                intent.getBooleanExtra("com.datalogic.aladdinapp.extra.SCANNER_STATE", false)\n            \n            if (connected) {\n                Toast.makeText(context, "Connected to scanner", Toast.LENGTH_SHORT).show()\n            } else {\n                Toast.makeText(context, "Disconnected from scanner", Toast.LENGTH_SHORT).show()\n            }\n        }\n    }\n}\n'})})}),(0,a.jsx)(r.Z,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'class ScannerStateReceiver extends BroadcastReceiver {\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        if ("com.datalogic.aladdinapp.intent.ACTION_SEND_SCANNER_STATE" == intent.getAction()) {\n            boolean connected =\n                intent.getBooleanExtra("com.datalogic.aladdinapp.extra.SCANNER_STATE", false);\n\n            if (connected) {\n                Toast.makeText(context, "Connected to scanner", Toast.LENGTH_SHORT).show();\n            } else {\n                Toast.makeText(context, "Disconnected from scanner", Toast.LENGTH_SHORT).show();\n            }\n        }\n    }\n}\n'})})})]}),"\n",(0,a.jsxs)(n.p,{children:["Define an ",(0,a.jsx)("font",{className:"myred",children:(0,a.jsx)(n.code,{children:"IntentFilter"})})," for the specified actions:"]}),"\n",(0,a.jsxs)(l.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,a.jsx)(r.Z,{value:"kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val scanStateReceiver = ScannerStateReceiver()\nval connectionStateIntent = \n    IntentFilter("com.datalogic.aladdinapp.intent.ACTION_SEND_SCANNER_STATE")\n'})})}),(0,a.jsx)(r.Z,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'ScannerStateReceiver scannerStateReceiver = new ScannerStateReceiver();\nIntentFilter connectionStateIntent = \n    IntentFilter("com.datalogic.aladdinapp.intent.ACTION_SEND_SCANNER_STATE");\n'})})})]}),"\n",(0,a.jsxs)(n.p,{children:["Register the broadcast receiver instance, the usual place for this call would be in the ",(0,a.jsx)("font",{className:"myred",children:(0,a.jsx)(n.code,{children:"onCreate"})})," method of a ",(0,a.jsx)("font",{className:"myred",children:"Service"})," or ",(0,a.jsx)("font",{className:"myred",children:"Activity"})," class:"]}),"\n",(0,a.jsxs)(l.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,a.jsx)(r.Z,{value:"kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"registerReceiver(scanStateReceiver, connectionStateIntent)\n"})})}),(0,a.jsx)(r.Z,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"registerReceiver(scanStateReceiver, connectionStateIntent);\n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"get-latest-scan-data",children:"Get Latest Scan Data"}),"\n",(0,a.jsxs)(n.p,{children:["You can get the latest scanned barcode data by sending the broadcast below. The Aladdin application will send the barcode details under the defined action name within Aladdin.",(0,a.jsx)(n.br,{}),"\n","Default: ",(0,a.jsx)("font",{className:"mygreen",children:(0,a.jsx)(n.code,{children:"COM.DATALOGIC.ALADDINAPP.INTENT.ACTION_SEND_BAR_CODE_DATA"})})]}),"\n",(0,a.jsxs)(l.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,a.jsx)(r.Z,{value:"kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val intent = Intent("com.datalogic.aladdinapp.intent.ACTION_GET_LATEST_SCAN_DATA")\nsendBroadcast(intent)\n'})})}),(0,a.jsx)(r.Z,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'Intent intent = new Intent("com.datalogic.aladdinapp.intent.ACTION_GET_LATEST_SCAN_DATA");\nsendBroadcast(intent);\n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"get-connection-state",children:"Get Connection State"}),"\n",(0,a.jsxs)(n.p,{children:["You can get the scanner connection state by sending the broadcast below. The Aladdin application will send the connection details in the following action: ",(0,a.jsx)("font",{className:"mygreen",children:(0,a.jsx)(n.code,{children:"com.datalogic.aladdinapp.intent.ACTION_SEND_SCANNER_STATE"})})]}),"\n",(0,a.jsxs)(l.Z,{groupId:"language",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],children:[(0,a.jsx)(r.Z,{value:"kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val intent = Intent("com.datalogic.aladdinapp.intent.ACTION_GET_SCANNER_STATE")\nsendBroadcast(intent)\n'})})}),(0,a.jsx)(r.Z,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'Intent intent = new Intent("com.datalogic.aladdinapp.intent.ACTION_GET_SCANNER_STATE");\nsendBroadcast(intent);\n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"intent-sample-client",children:"Intent Sample Client"}),"\n",(0,a.jsx)(n.p,{children:"The Aladdin intent client is a purposefully crafted sample application designed to showcase the dynamic capabilities of the Intent integration."}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["The client ",(0,a.jsx)(n.a,{href:"https://github.com/datalogic/aladdin-samples/releases?q=intent&expanded=true",children:"APK"})," and ",(0,a.jsx)(n.a,{href:"https://github.com/datalogic/aladdin-samples/tree/main/intent-client",children:"source code"})," can be found in the ",(0,a.jsx)(n.a,{href:"https://github.com/datalogic/aladdin-samples/",children:"Aladdin samples"})," repository on Github."]})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Select Intent as the integration method within the Aladdin app."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'The Intent setting UI will appear with some pre-populated fields. You can change the content of each input text field (or leave the default) and tap the "Save" button to confirm. Please, note that each field should contain unique entries; the same data should not be repeated.'}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Open the Intent client application."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'Tap the "Register to Aladdin" button.'}),"\n",(0,a.jsx)(s.f5,{img:"/img/aladdin/intent-client-home.png"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"A pop-up will appear with 4 pre-populated input fields. The name of each field must be the same that you entered in step 2."}),"\n",(0,a.jsxs)(s.QA,{columnGap:"50px",children:[(0,a.jsx)(s.f5,{img:"/img/aladdin/intent-client-configure.png"}),(0,a.jsx)(s.f5,{img:"/img/aladdin/intent-client-registered.png"})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"You can now scan barcodes with your CODiScan device. The barcode details will be displayed in a toast message in the client application."}),"\n",(0,a.jsx)(s.f5,{img:"/img/aladdin/intent-client-barcode.png"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'You can also tap "Get latest barcode" and retrieve the latest scanned barcode data.'}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'To check the scanner status, tap "Get scanner status".'}),"\n",(0,a.jsx)(s.f5,{img:"/img/aladdin/intent-client-scanner-status.png"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'To unregister from the Aladdin application, tap "Unregister from Aladdin".'}),"\n",(0,a.jsx)(s.f5,{img:"/img/aladdin/intent-client-unregistered.png"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"The client can register to Aladdin irrespective of any integration method selected in the application, but it cannot receive barcode data or connection state if Intent is not selected as the integration method within Aladdin."}),"\n",(0,a.jsx)(n.li,{children:"If Intent is selected as the integration method, but the action and intent extras do not match between Aladdin and the client application, you will not be able to receive barcode events in the client app. You can only get the scanner status. You can unregister from Aladdin and then register anew with the same key values entered in the Aladdin app."}),"\n",(0,a.jsx)(n.li,{children:'If Intent is not selected as integration method in the Aladdin app and you try to register to the Intent client application, registration will be successful, but the "Get latest barcode" and the "Get scanner status" buttons will be disabled and you will not be able to receive new barcode data scanned by the CODiScan.'}),"\n",(0,a.jsx)(n.li,{children:"User input for barcode extra names (barcode data, label type, and scan time) should be unique."}),"\n",(0,a.jsx)(n.li,{children:"If all entries are equal and unique in both client and Aladdin app, you will get the barcode details in the toast message."}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>r});t(67294);var a=t(36905);const i={tabItem:"tabItem_Ymn6"};var l=t(85893);function r(e){let{children:n,hidden:t,className:r}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,a.Z)(i.tabItem,r),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>T});var a=t(67294),i=t(36905),l=t(12466),r=t(16550),s=t(20469),c=t(91980),o=t(67392),d=t(50012);function u(e){var n,t;return null!=(n=null==(t=a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=null!=n?n:function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:i}}=e;return{value:n,label:t,attributes:a,default:i}}))}(t);return function(e){const n=(0,o.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const i=(0,r.k6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,c._X)(l),(0,a.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(i.location.search);n.set(l,e),i.replace({...i.location,search:n.toString()})}),[l,i])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,l=h(e),[r,c]=(0,a.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const i=null!=(n=a.find((e=>e.default)))?n:a[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:l}))),[o,u]=x({queryString:t,groupId:i}),[g,m]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[i,l]=(0,d.Nk)(t);return[i,(0,a.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:i}),v=(()=>{const e=null!=o?o:g;return p({value:e,tabValues:l})?e:null})();(0,s.Z)((()=>{v&&c(v)}),[v]);return{selectedValue:r,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error("Can't select invalid tab value="+e);c(e),u(e),m(e)}),[u,m,l]),tabValues:l}}var m=t(72389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var A=t(85893);function j(e){let{className:n,block:t,selectedValue:a,selectValue:r,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,l.o5)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),i=s[t].value;i!==a&&(o(n),r(i))},u=e=>{var n;let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var a;const n=c.indexOf(e.currentTarget)+1;t=null!=(a=c[n])?a:c[0];break}case"ArrowLeft":{var i;const n=c.indexOf(e.currentTarget)-1;t=null!=(i=c[n])?i:c[c.length-1];break}}null==(n=t)||n.focus()};return(0,A.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:l}=e;return(0,A.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>c.push(e),onKeyDown:u,onClick:d,...l,className:(0,i.Z)("tabs__item",v.tabItem,null==l?void 0:l.className,{"tabs__item--active":a===n}),children:null!=t?t:n},n)}))})}function f(e){let{lazy:n,children:t,selectedValue:i}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,A.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function b(e){const n=g(e);return(0,A.jsxs)("div",{className:(0,i.Z)("tabs-container",v.tabList),children:[(0,A.jsx)(j,{...n,...e}),(0,A.jsx)(f,{...n,...e})]})}function T(e){const n=(0,m.Z)();return(0,A.jsx)(b,{...e,children:u(e.children)},String(n))}},10993:(e,n,t)=>{t.d(n,{EW:()=>l,QA:()=>c,TS:()=>i,f5:()=>r,sD:()=>o,xo:()=>s});t(67294);var a=t(85893);function i(e){let{img:n,maxWidth:t="fit-content",maxHeight:i="fit-content",shadow:l="none"}=e;return(0,a.jsx)("img",{src:n,style:{width:"auto",height:"auto",maxWidth:t,maxHeight:i,boxShadow:l}})}function l(e){let{img:n,maxWidth:t="fit-content",maxHeight:a="fit-content",shadow:l="0 4px 8px 0 rgba(0, 0, 0, 0.3)"}=e;return i({img:n,maxWidth:t,maxHeight:a,shadow:l})}function r(e){let{img:n,height:t="550px"}=e;return(0,a.jsx)("img",{src:n,style:{maxHeight:t}})}function s(e){let{img:n,height:t="550px",caption:i}=e;return(0,a.jsxs)("div",{children:[(0,a.jsx)("img",{src:n,style:{maxHeight:t}}),(0,a.jsx)("center",{children:(0,a.jsx)("b",{children:i})})]})}function c(e){let{children:n,flexWrap:t="wrap",alignItems:i="center",rowGap:l="15px",columnGap:r="25px"}=e;return(0,a.jsx)("div",{style:{display:"flex",alignItems:i,flexWrap:t,rowGap:l,columnGap:r,marginBottom:"20px"},children:n})}function o(e){let{img:n}=e;return(0,a.jsx)("img",{src:n,style:{border:"2px solid black"}})}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>r});var a=t(67294);const i={},l=a.createContext(i);function r(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);