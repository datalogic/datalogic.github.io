"use strict";(self.webpackChunkdatalogic_github_io=self.webpackChunkdatalogic_github_io||[]).push([[12026],{48753:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>s,contentTitle:()=>t,default:()=>g,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var o=l(85893),i=l(11151);const r={id:"log4j2xml",title:"Logging Configuration Reference",sidebar_label:"log4j2.xml"},t=void 0,a={id:"javapos/configref/log4j2xml",title:"Logging Configuration Reference",description:"Overview",source:"@site/docs/javapos/configref/log4j2xml.md",sourceDirName:"javapos/configref",slug:"/javapos/configref/log4j2xml",permalink:"/javapos/configref/log4j2xml",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"log4j2xml",title:"Logging Configuration Reference",sidebar_label:"log4j2.xml"},sidebar:"JavaPOS",previous:{title:"jpos.properties",permalink:"/javapos/configref/jposproperties"},next:{title:"Developing Overview",permalink:"/javapos/develop/overview"}},s={},d=[{value:"Overview",id:"overview",level:2},{value:"Reference",id:"reference",level:2},{value:"Character Set Encoding",id:"character-set-encoding",level:3},{value:"Example Encoding for Windows",id:"example-encoding-for-windows",level:4},{value:"Example Encoding for Linux",id:"example-encoding-for-linux",level:4},{value:"Log Level",id:"log-level",level:3},{value:"Example Log Levels",id:"example-log-levels",level:4},{value:"Log File Size",id:"log-file-size",level:3},{value:"Example Size adjustment",id:"example-size-adjustment",level:4},{value:"Rollover Strategy",id:"rollover-strategy",level:3},{value:"Rollover Size",id:"rollover-size",level:4},{value:"Example Rollover max adjustment",id:"example-rollover-max-adjustment",level:5},{value:"Rollover Direction",id:"rollover-direction",level:4},{value:"Default configuration file",id:"default-configuration-file",level:2},{value:"Microsoft Windows Platform",id:"microsoft-windows-platform",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsxs)(n.p,{children:["Datalogic JavaPOS API uses Apache Log4j2 to provide logging services.  This document covers the default configuration of logging for Datalogic JavaPOS as well as a reference for some of the more common configuration changes. For a full reference to all available configuration options, please see the Apache Log4j2 Configuration ",(0,o.jsx)(n.a,{href:"https://logging.apache.org/log4j/2.x/manual/configuration.html",children:"Manual"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,o.jsx)(n.h3,{id:"character-set-encoding",children:"Character Set Encoding"}),"\n",(0,o.jsx)(n.p,{children:"Encoding is controlled by the first line of the configuration file. The encoding attribute accepts the name of whichever encoding is preferred for logging. Datalogic JavaPOS distributes with a default of windows-1252 encoding on the Microsoft Windows platform, and UTF-8 encoding on the Linux platform."}),"\n",(0,o.jsx)(n.h4,{id:"example-encoding-for-windows",children:"Example Encoding for Windows"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="windows-1252"?>\n'})}),"\n",(0,o.jsx)(n.h4,{id:"example-encoding-for-linux",children:"Example Encoding for Linux"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="utf-8"?>\n'})}),"\n",(0,o.jsx)(n.h3,{id:"log-level",children:"Log Level"}),"\n",(0,o.jsxs)(n.p,{children:["The threshold for logging messages can be adjusted in the ",(0,o.jsx)(n.strong,{children:"Loggers"})," element.  Datalogic JavaPOS is distributed with a default ",(0,o.jsx)(n.strong,{children:"Root"})," element with the ",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"level"})})," attribute defaulted to ",(0,o.jsx)(n.strong,{children:"debug"}),". This denotes that all messages of level ",(0,o.jsx)(n.strong,{children:"debug"})," and lower are logged. The log level can be adjusted by changing the ",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"level"})})," attribute to one of the following levels:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"trace - Entry and Exit to specific methods"}),"\n",(0,o.jsx)(n.li,{children:"debug - Debugging information"}),"\n",(0,o.jsx)(n.li,{children:"info - Informational Messages"}),"\n",(0,o.jsx)(n.li,{children:"warn - Warnings"}),"\n",(0,o.jsx)(n.li,{children:"error - Error Messages"}),"\n",(0,o.jsx)(n.li,{children:"fatal - Fatal Errors"}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"example-log-levels",children:"Example Log Levels"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<Root level="trace">\r\n<Root level="debug">\r\n<Root level="info">\r\n<Root level="warn">\r\n<Root level="error">\r\n<Root level="fatal">\n'})}),"\n",(0,o.jsx)(n.h3,{id:"log-file-size",children:"Log File Size"}),"\n",(0,o.jsxs)(n.p,{children:["The maximum size of each rolling log file can be adjusted in the ",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"size"})})," attribute of the ",(0,o.jsx)(n.strong,{children:"SizeBasedTriggeringPolicy"})," element. Datalogic JavaPOS ships with a default setting of 20 MB for the size of each rolling log file. To set a custom size for each rolling log file, adjust the ",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"size"})})," attribute to the desired size."]}),"\n",(0,o.jsx)(n.h4,{id:"example-size-adjustment",children:"Example Size adjustment"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<SizeBasedTriggeringPolicy size="25 MB" />\n'})}),"\n",(0,o.jsx)(n.h3,{id:"rollover-strategy",children:"Rollover Strategy"}),"\n",(0,o.jsx)(n.h4,{id:"rollover-size",children:"Rollover Size"}),"\n",(0,o.jsxs)(n.p,{children:["The number of files to use when rolling over can be adjusted in the ",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"max"})})," attribute of the ",(0,o.jsx)(n.strong,{children:"DefaultRolloverStrategy"})," element. Datalogic JavaPOS ships with a default setting of 5 rolling log files. To set a custom number of rolling log files, adjust the ",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"max"})})," attribute to the desired number of rollover files."]}),"\n",(0,o.jsx)(n.h5,{id:"example-rollover-max-adjustment",children:"Example Rollover max adjustment"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<DefaultRolloverStrategy max="10" fileIndex="min"/>\n'})}),"\n",(0,o.jsx)(n.h4,{id:"rollover-direction",children:"Rollover Direction"}),"\n",(0,o.jsxs)(n.p,{children:["The direction that files rollover can be adjusted in the ",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"fileIndex"})})," attribute of the ",(0,o.jsx)(n.strong,{children:"DefaultRolloverStrategy"})," element. Datalogic JavaPOS ships with a default setting of rolling to the minimum file. This means that the log file is rolled to name-1 and each log file is moved forward. To change direction, adjust the ",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"fileIndex"})})," attribute to the desired direction."]}),"\n",(0,o.jsx)(n.h2,{id:"default-configuration-file",children:"Default configuration file"}),"\n",(0,o.jsx)(n.h3,{id:"microsoft-windows-platform",children:"Microsoft Windows Platform"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="windows-1252"?>\r\n<Configuration status="WARN">\r\n<Appenders>\r\n    <Console name="Console" target="SYSTEM_OUT">\r\n    <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>\r\n    </Console>\r\n    <RollingFile name="RollingFile" filename="${env:TEMP}/jposTraceR.log"\r\n                        filePattern="${env:TEMP}/jposTraceR-%i.log">\r\n        <PatternLayout>\r\n            <pattern>%d{DEFAULT} [%t] %-5level %c{1} - %msg %throwable{short.localizedMessage}%n</pattern>\r\n        </PatternLayout>\r\n        <Policies>\r\n            <OnStartupTriggeringPolicy />\r\n            <SizeBasedTriggeringPolicy size="20 MB" />\r\n        </Policies>\r\n        <DefaultRolloverStrategy max="5" fileIndex="min"/>\r\n    </RollingFile>\r\n</Appenders>\r\n<Loggers>\r\n    <Root level="debug">\r\n    <AppenderRef ref="RollingFile" />\r\n    </Root>\r\n</Loggers>\r\n</Configuration>\n'})})]})}function g(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},11151:(e,n,l)=>{l.d(n,{Z:()=>a,a:()=>t});var o=l(67294);const i={},r=o.createContext(i);function t(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);